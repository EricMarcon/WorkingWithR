[{"path":"index.html","id":"presentation","chapter":"Presentation","heading":"Presentation","text":"","code":""},{"path":"index.html","id":"objectives","chapter":"Presentation","heading":"Objectives","text":"document support course Working R.can downloaded PDF file.proposes organization work around R RStudio order , beyond statistics, write documents efficiently R Markdown, various formats (memos, scientific articles, student theses, books, slideshows), create web site online R applications (Shiny), produce packages use R teaching.\ncomplements Reproducible Research R R Studio (Gandrud 2015) hands-approach, ready--use solutions.Optimizing use many tools available covered detail: rmarkdown, bookdown blogdown writing, roxygen2, testthat pkgdown packages, source control git GitHub, continuous integration GitHub Actions Codecov.\nExamples presented step, necessary code provided.Chapter 1 dedicated installation necessary tools: R, git LaTeX.\nChapter 2 details advanced aspects using R: different languages, environments, performance code.\nbasic use R covered : good courses suggested.\nChapter 3 presents source control git GitHub.Chapter 4 shows write simple (articles) complex (books) documents R Markdown, integrating data, code process text present .\nChapter 5 presents step--step method efficiently create package.\nChapter 6 introduces use continuous integration automatically produce documents, verify package code produce package vignettes.\nChapter 7 introduces Shiny develop R interactive applications.\nFinally, chapter 8 introduces tools teaching R.","code":""},{"path":"index.html","id":"conventions","chapter":"Presentation","heading":"Conventions","text":"Package names bold text, example: ggplot2.identifier used GitHub noted GitHubID.\nProject names GitHub repository, noted RepoID.sign |> code examples indicates rest code line, cut formatting document.\nuse limited YAML configuration files, mostly chapter 6.\ncases, code can copied directly.","code":""},{"path":"chap-logiciels.html","id":"chap-logiciels","chapter":"1 Software","heading":"1 Software","text":"central tool obviously R, operation today difficult consider without development environment RStudio.\nsource control, git GitHub de facto standards.\nset must completed LaTeX distribution production documents PDF format.\nbibliographic management tool essential: Zotero extension Better BibTeX perfectly adapted framework presented .\nFinally, software occasional use may necessary, Go.installation coherent organization presented chapter.","code":""},{"path":"chap-logiciels.html","id":"r","chapter":"1 Software","heading":"1.1 R","text":"","code":""},{"path":"chap-logiciels.html","id":"installation","chapter":"1 Software","heading":"1.1.1 Installation","text":"R included Linux distributions: package named r-base.\ncontain development tools often needed, better install r-base-dev package well.\nversion R often bit old.\nget latest version, use CRAN mirror source packages: see full documentation Ubuntu1.Windows Mac, install R downloading CRAN2.","code":""},{"path":"chap-logiciels.html","id":"rtools","chapter":"1 Software","heading":"1.1.2 Rtools","text":"Mac, installation R sufficient version 4.0.0.Windows, installation must completed “Rtools”, contain development tools, including necessary compile packages containing C++ code.path Rtools (version 4.2) must declared R, executing following command RStudio console (adapted version 4.0 Rtools):Since version 4.2, action unnecessary.Rtools must completed missing utilities, installed need appears (usually warning R software installed).Package checking returns warning qpdf3 installed.\nDownload zip file paste entire contents bin folder usr/bin folder Rtools (C:\\Rtools42\\r\\bin version 4.2).Another warning returned Ghostscript available.\nDownload install it4.\ncopy contents bin folder usr/bin folder Rtools.","code":"\n# Rtools : path declaration, \n# requires restarting RStudio\nwriteLines('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"',\n           con = \"~/.Renviron\")"},{"path":"chap-logiciels.html","id":"update","chapter":"1 Software","heading":"1.1.3 Update","text":"recommended use latest minor version R: example, 4.0.x release version 4.1.\nmandatory use latest version prepare package submitted CRAN.Important changes occur major versions (version 4 allow use package compiled version 3) also sometimes minor versions (binary data file .rda saved version 3.3 read version 3.6).\ntherefore useful update R regularly.Installing new version automatically uninstall older versions, allows use one version necessary (example, old essential package longer available).\ncommon use, preferable uninstall old versions manually installing new one.","code":""},{"path":"chap-logiciels.html","id":"sec:librairies","chapter":"1 Software","heading":"1.1.4 Libraries","text":"R packages found two folders:System Library contains packages come R: base, utils, graphics example.\nlocated subdirectory installation program (C:\\Program Files\\R-4.1.0\\library R version 4.1.0 Windows 10).User Library contains installed user.\nversion 4.1, located user’s home folder, subfolder R\\win-library\\4.1\\).\nSince version 4.2, folder user’s local settings, whose folder location environment variable %LOCALAPPDATA%.version 4.1, user’s home folder backed (example, replicated cloud OneDrive Windows), optimal place packages : traffic generated backing heavy unnecessary.\norder packages installed automatically system library, user must right write .\nWindows, give computer’s user group “Modify” permission library folder, addition default read permissions.\nversion 4.2 onwards, reason change default operation: local settings saved.user library selected, must remember empty folder corresponding old version R case minor version change.location libraries given function .libPaths():","code":"\n.libPaths()## [1] \"/Users/runner/work/_temp/Library\"                                    \n## [2] \"/Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library\""},{"path":"chap-logiciels.html","id":"rstudio","chapter":"1 Software","heading":"1.2 RStudio","text":"RStudio graphical interface R much : designed simplify project management, make writing publishing documents easier integrate source control example.","code":""},{"path":"chap-logiciels.html","id":"installation-1","chapter":"1 Software","heading":"1.2.1 Installation","text":"Install latest version RStudio Desktop RStudio website5.command available “Help” menu RStudio check recent version install.","code":""},{"path":"chap-logiciels.html","id":"file-encoding","chapter":"1 Software","heading":"1.2.2 File encoding","text":"files manipulated R mostly text files.\nSpecial characters, especially accents, can encoded various ways, encoding declaration integrated files.\ndefault encoding depends operating system, regularly causes problems readability shared files.\nUTF8 encoding become standard universally recognized supports alphabets without ambiguity.first time use RStudio, create new R file (“File > New File > R Script” menu), save UTF8 format (“File > Save Encoding…”), choose UTF8 list formats check box “Set default encoding source files”.\nDelete file saving .New files encoded UTF8 format.\nFiles encoded another format displayed correctly: can reopened original encoding (“File > Reopen Encoding…”), possibly trying several encodings displayed correctly, saved UTF8 format.","code":""},{"path":"chap-logiciels.html","id":"working-folder","chapter":"1 Software","heading":"1.2.3 Working folder","text":"default working folder user’s home folder, called ~ RStudio:Documents Windows.Home Mac Linux.always work subfolders ~, example: ~/Training.RTools work properly, full name working directory must contain spaces (use underscores _) special characters.\ncurrent working directory obtained command getwd().Using source control (see chapter 3) creates many working files.\nSource-controlled projects located folder already backed another means, OneDrive Windows, otherwise resources used excessively: change validation generates backup modified files, also control files, can large.","code":"\nSys.getenv(\"R_USER\")## [1] \"\"\ngetwd()"},{"path":"chap-logiciels.html","id":"sec:solution-dossiers","chapter":"1 Software","heading":"1.2.4 Solution chosen","text":"organization work environment personal matter, depending preferences individual.\norganization proposed possibility, adapted one’s choices, respecting constraints mentioned.Windows, optimal organization follows:one’s personal folder (Documents, ~ R), R folder used simple projects, without source control.\nbackup folder managed elsewhere.folder outside home folder used source-controlled projects.\nuser must right write .\nWindows organization, folder corresponding criteria %LOCALAPPDATA%, typically C:\\Users\\Name\\AppData.\nfolder therefore %LOCALAPPDATA%\\RProjects.\ncreate , run md %LOCALAPPDATA%\\RProjects command prompt.\nPin folder quick access file explorer (figure 1.1): paste %LOCALAPPDATA%\\RProjects address bar file explorer, validate, right click “Quick Access” pin folder.\nFigure 1.1: Folder projects source control, Windows.\n","code":""},{"path":"chap-logiciels.html","id":"character-font","chapter":"1 Software","heading":"1.2.5 Character font","text":"Fira Code6 font provides ligatures: “<-” characters used assignment R, example, displayed arrow.\nuse RStudio editor, simply install according instructions operating system declare global options (“Tools > Global Options…” menu): select Appearance option Editor Font: Fira Code.","code":""},{"path":"chap-logiciels.html","id":"packages","chapter":"1 Software","heading":"1.3 Packages","text":"","code":""},{"path":"chap-logiciels.html","id":"installation-from-cran","chapter":"1 Software","heading":"1.3.1 Installation from CRAN","text":"classic installation packages uses CRAN.\n“Install” button Packages window RStudio.Packages uploaded CRAN authors source code, compressed .tar.gz file.\navailable download soon validated.\nmust put binary format Windows (`.zip’ file), takes time.asked install package Windows, CRAN proposes source version rather binary version recent (figure 1.2).\nFigure 1.2: Choice version packages install.\nlist packages concerned displayed console, example:packages require compilation (column needs_compilation), usually contain C++ code.\ncan installed Rtools.installation packages source version much longer binary version.\nUnless specific version package needed, better refuse installation source versions.Packages can updated little later, compiled CRAN.“Update” button RStudio Packages window allows update installed packages.","code":"  There are binary versions available but the source \n  versions are later:\n              binary   source needs_compilation\nboot          1.3-24   1.3-25             FALSE\nclass         7.3-16   7.3-17              TRUE"},{"path":"chap-logiciels.html","id":"installation-from-github","chapter":"1 Software","heading":"1.3.2 Installation from GitHub","text":"packages available CRAN GitHub still development intended widely used R user community.\ncan also useful install development version package published CRAN specific use like testing new features.installation handled remotes package.\nbuild_vignettes argument needed create vignettes package.package name entered “GitHubID/PackageName”.\ninstallation done source code therefore requires Rtools build needed.\ninstall_github() checks version GitHub recent version installed workstation nothing identical.","code":"\nremotes::install_github(\"EricMarcon/memoiR\", build_vignettes = TRUE)"},{"path":"chap-logiciels.html","id":"installation-from-bioconductor","chapter":"1 Software","heading":"1.3.3 Installation from Bioconductor","text":"Bioconductor complementary platform CRAN hosts packages specialized genomics.\nInstalling packages Bioconductor requires BiocManager package install() function.\nfirst argument function vector characters containing names packages installed, example:install() function called without arguments updates packages.","code":"\nBiocManager::install(c(\"GenomicFeatures\", \"AnnotationDbi\"))"},{"path":"chap-logiciels.html","id":"selected-solution","chapter":"1 Software","heading":"1.3.4 Selected solution","text":"minor update R, packages must reinstalled.\nefficient way create Packages.R script place ~\\R.\ncontains function checks package already installed redone unnecessarily.last part script completed packages used regularly.script executed time R updated, activated right write system library needed (see section 1.1.4).","code":"\n# Install R packages ####\n\n# Install packages if necessary ####\nInstallPackages <- function(Packages) {\n  sapply(Packages, function(Package) \n    if (!Package %in% installed.packages()[, 1]) \n      {install.packages(Package)})\n}\n\n\n# Development tools ####\nInstallPackages(c(\n  # Development tools. Import remotes, etc.\n  \"devtools\",\n  # Run Check by RStudio\n  \"rcmdcheck\",\n  # Formatting R code (used by knitr)\n  \"formatR\",\n  # Documentation of packages in /docs on GitHub\n  \"pkgdown\",\n  # Bibliography with roxygen\n  \"Rdpack\",\n  # Performance measurement\n  \"rbenchmark\",\n  # Automatic package documentation\n  \"roxygen2\",\n  # Package testing\n  \"testthat\"\n  ))\n\n# Markdown ####\nInstallPackages(c(\n  # Knit\n  \"knitr\",\n  # Complex markdown documents\n  \"bookdown\",\n  # Websites\n  \"blogdown\",\n  # Document templates\n  \"memoiR\"\n  ))\n\n# Tidyverse ####\nInstallPackages(\"tidyverse\")"},{"path":"chap-logiciels.html","id":"git-and-github","chapter":"1 Software","heading":"1.4 git and GitHub","text":"","code":""},{"path":"chap-logiciels.html","id":"git","chapter":"1 Software","heading":"1.4.1 git","text":"git source control software used .\nuse detailed chapter 3.Windows Mac, installation done git website7.git integrated Linux distributions.\nUbuntu, apt package git-.git installed without graphical interface, provided RStudio.RStudio, modify global options (menu “Tools > Global Options…”).\nSelect Terminal option New Terminals open : GitBash.Check git installed correctly typing command git -h RStudio terminal: help displayed.installing git, RStudio terminal may work properly return error message containing following:error message inaccurate: library exist one copy cygwin1.dll msys-2.0.dll.\nLook file git Rtools installation folders.\nnormally found usr/bin.\nReplace git one Rtools one: version two files must identical.Enter credentials running following commands terminal:user name free, preferably “FirstName LastName”.","code":"*** fatal error - cygheap base mismatch detected\nThis problem is probably due to using incompatible \nversions of the cygwin DLL.git config user.name\ngit config user.email"},{"path":"chap-logiciels.html","id":"github","chapter":"1 Software","heading":"1.4.2 GitHub","text":"GitHub platform accessible website allows share content git repositories.\nuse , just open account email address one registered git.name GitHub account noted GitHubID.\nGitHub account allows host repositories (repository contains files project) address https://github.com/GitHubID/RepoID8.\nrepository can website https://GitHubID.github.io/RepoID/9.\nFinally, global web site provided user https://GitHubID.github.io/10.","code":""},{"path":"chap-logiciels.html","id":"sec:SSH","chapter":"1 Software","heading":"1.4.3 SSH authentication","text":"Communication git (installed local computer) GitHub (online platform) requires authentication.Two methods available: HTTPS (also called SSL) SSH.\nSSH robust requires creation private key.RStudio terminal, run:email address (replaces “user.email”) must one registered git configuration GitHub account.\nkey saved .ssh folder user’s home directory.\npossible add passphrase key, typed first time work session used.\ncomputer properly secured (physical access third parties), leaving empty allows gain fluidity.Warning: private key strictly confidential must copied anywhere read third party (beware automatic backups particular).\nneed well backed : case loss, easily replaced.Keys normally stored ~/.ssh folder, regardless operating system, location ~ home folder ambiguous Windows: R, Documents folder, software, user’s root folder, parent Documents.RStudio terminal, check key working correctly:error message indicates key found, two possible solutions:Duplicate .ssh folder (File Explorer) Documents.Duplicate .ssh folder RStudio program folder (usually C:\\Program Files\\RStudio), resourcesterminalbash.successful, message indicates authenticity GitHub server verified: manual check required first connection.\nCheck GitHub server’s fingerprint correct11 type yes.\nserver automatically added list known servers, known_hosts file..ssh folder, two files created: one contains private key, , .pub extension, corresponding public key.\nOpen second one text editor copy public key clipboard.\nGitHub, display settings account (“Settings” menu), select “SSH GPG Keys”, click “New SSH Key” paste key “Key” field.\nGive name key “Title” field.\nname can name computer key created.\nkey must copied several computers: necessary, create new key workstation used.key compromised (lost loaned computer contains ), delete GitHub create new one.","code":"ssh-keygen -t ed25519 -C \"user.email\"ssh -T git@github.com"},{"path":"chap-logiciels.html","id":"sec:pat","chapter":"1 Software","heading":"1.4.4 Obtaining a personal access token","text":"HTTPS authentication alternative SSL authentication: choose method stick afterwards.\nuse HTTPS authentication, creation personal access token required.Tokens created GitHub, settings one’s user account, “Developer Settings > Personal Access Tokens”12.Generate new token, describe “git-RStudio” give “repo” permission, .e. modify repositories (possible limit access particular repository).\ntoken string read later: must saved password.","code":""},{"path":"chap-logiciels.html","id":"latex-compiler","chapter":"1 Software","heading":"1.5 LaTeX compiler","text":"produce documents PDF format, LaTeX distribution needed.\nlight solution install tinytex package turn installs LaTeX distribution optimized R Markdown.full distribution allows use LaTeX beyond RStudio useless use LaTeX limited knitting R Markdown documents.\nMiKTeX good solution Windows Mac.","code":""},{"path":"chap-logiciels.html","id":"tinytex","chapter":"1 Software","heading":"1.5.1 tinytex","text":"Install package run :Adding LaTeX packages included minimal starting distribution automatic can slow.distribution can updated command:","code":"\ninstall_tinytex()\ntinytex::tlmgr_update()"},{"path":"chap-logiciels.html","id":"miktex","chapter":"1 Software","heading":"1.5.2 MiKTeX","text":"","code":""},{"path":"chap-logiciels.html","id":"installation-2","chapter":"1 Software","heading":"1.5.2.1 Installation","text":"Download installation file13 run .\nseveral choices make installation:Install program users (administrator rights).default paper size: choose A4.installation mode missing packages: choose “Always Install” downloaded automatically needed.Linux, follow instructions MiKTeX website.","code":""},{"path":"chap-logiciels.html","id":"updates","chapter":"1 Software","heading":"1.5.2.2 Updates","text":"MiKTeX installed used LaTeX packages.\ndocument needs missing package, loaded automatically.\nPackage updates done periodically MiKTeX console, accessible Start menu.launched without elevation privileges, console offers switch administrator mode.\nClick “Switch Administrator mode”.settings, check packages always install automatically paper size A4.“Updates” menu, click “Check updates” “Update now”.automatic installation fails, possible manually install package “Packages” menu.","code":""},{"path":"chap-logiciels.html","id":"sec:Zotero","chapter":"1 Software","heading":"1.6 Zotero","text":"Zotero14 used bibliographic management software.\nextensions allow complete functionalities according needs.\nBetter BibTeX allows export maintain selection bibliographic references (Zotero collection) BibTeX file R project, can used writing documents documenting packages.Download installation file run .\nCreate user account Zotero website.\nLink local installation account: “Edit > Preferences” menu, select “Sync > Settings” authenticate “Data Syncing” area.\ncheck box “Sync automatically” “Sync full-text content” total size full text synchronized way online Zotero account workstation limited 300 MB.Download Better BibTeX extension15 install “Tools > Add-ons” menu: click settings button top right window, “Install Add-File…” select file just downloaded.Set Better BibTeX menu “Edit > Preferences > Better BibTeX”.\noptions modify following:“Citation Keys > Citation Key Format”: auth:capitalize+year citations unique identifier form “Name2021”.“Citation Keys > Keep citation keys unique”: “across libraries” citation identifiers ambiguous.“Export > Fields > Fields omit export”: “abstract, file” avoid generating bibliographic files overweighted useless information R projects.recommended use ZotMoov16 extension better control location full text (PDF files linked bibliographic references).\nInstall , set parameters “Edit > Settings”, “ZotMoov”.\nChoose folder storing full-text files “Directory Move Files ”.\nuser’s personal folder backed (example, replicated cloud OneDrive Windows), placing storage folder enables full-text files backed accessed several workstations directly online.\nsolution much efficient Zotero’s default synchronisation, limited volume.select download folder “Source Folder Attaching New Files”.\n“ZotMoov: Attach New File” context menu automatically link last file downloaded chosen reference.Finally, Zotero’s advanced options (“Edit > Settings”, “Advanced”), choose base folder linked attachments: must one chosen storing full-text files.","code":""},{"path":"chap-logiciels.html","id":"go","chapter":"1 Software","heading":"1.7 Go","text":"Go17 used Hugo web site generator (see section 4.7).Download installation file run .\nend installation, run command go version terminal check works.Upgrades done installing new version previous one.","code":""},{"path":"chap-utiliseR.html","id":"chap-utiliseR","chapter":"2 Use R","heading":"2 Use R","text":"literature devoted learning R flourishing.\nfollowing books arbitrary useful selection:R Data Science (Wickham Grolemund 2016) presents complete working method, consistent tidyverse.Advanced R (Wickham 2014) reference mastering subtleties language understanding R works.Finally, Efficient R programming (Gillespie Lovelace 2016) deals code optimization.advanced aspects coding seen .\nDetails different languages R useful creating packages.\nenvironments presented next, proper understanding search objects called code.\nFinally, optimization code performance discussed depth (loops, C++ code parallelization) illustrated case study.","code":""},{"path":"chap-utiliseR.html","id":"the-languages-of-r","chapter":"2 Use R","heading":"2.1 The languages of R","text":"R includes several programming languages.\ncommon S3, one18.","code":""},{"path":"chap-utiliseR.html","id":"base","chapter":"2 Use R","heading":"2.1.1 Base","text":"core R primitive functions basic data structures like sum function matrix data:pryr package allows display language objects defined.\ntypeof() function displays internal storage type objects:sum() function belongs basic language R builtin function.elements numerical matrix containing single 1 double precision reals, matrix defined basic language.Primitive functions coded C fast.\nalways available, whatever packages loaded.\nuse therefore preferred.","code":"\npryr::otype(sum)## [1] \"base\"\ntypeof(sum)## [1] \"builtin\"\npryr::otype(matrix(1))## [1] \"base\"\ntypeof(matrix(1))## [1] \"double\""},{"path":"chap-utiliseR.html","id":"sec:S3","chapter":"2 Use R","heading":"2.1.2 S3","text":"S3 used language, often one known R users.object-oriented language classes, .e. type objects, declarative.variable MyFirstName classed FirstName simple declaration.Unlike way classical object-oriented language works19, S3 methods related functions, objects.example, print() method applied “Firstname” class modified.\nclassical object-oriented language, method defined class Firstname.\nR, methods defined generic methods.print generic method (“generic”) declared base.code just UseMethod(\"print\") declaration:many S3 methods print:applies class. print.default used last resort relies type object, S3 class.object can belong several classes, allows form inheritance methods.\nclassical object oriented language, inheritance allows define precise classes (“FrenchFirstName”) inherit general classes (“FirstName”) thus benefit methods without redefine .\nR, inheritance simply declaring vector increasingly broad classes object:generic looks method class, order declaration.summary, S3 common language R.\nAlmost packages written S3.\nGenerics everywhere go unnoticed, example packages:.S3methods() function displays available methods class, opposed methods() displays classes method passed argument defined.Many primitive functions R generic methods.\nfind , use help(InternalMethods) helper.","code":"\nMyFirstName <- \"Eric\"\nclass(MyFirstName) <- \"FirstName\"\n# Default display\nMyFirstName## [1] \"Eric\"\n## attr(,\"class\")\n## [1] \"FirstName\"\nprint.Firstname <- function(x) cat(\"The first name is\", x)\n# Modified display\nMyFirstName## [1] \"Eric\"\n## attr(,\"class\")\n## [1] \"FirstName\"\npryr::otype(print)## [1] \"base\"\nprint## function (x, ...) \n## UseMethod(\"print\")\n## <bytecode: 0x11f1722a8>\n## <environment: namespace:base>\nhead(methods(\"print\"))## [1] \"print.acf\"               \"print.activeConcordance\"\n## [3] \"print.AES\"               \"print.all_vars\"         \n## [5] \"print.anova\"             \"print.any_vars\"\ntypeof(MyFirstName)## [1] \"character\"\npryr::otype(MyFirstName)## [1] \"S3\"\n# Definition of classes by a vector\nclass(MyFirstName) <- c(\"FrenchFirstName\", \"FirstName\")\n# Alternative code, with inherits()\ninherits(MyFirstName, what = \"FrenchFirstName\")## [1] TRUE\ninherits(MyFirstName, what = \"FirstName\")## [1] TRUE\nprint.FrenchFirstName <- function(x) cat(\"French first name:\",\n    x)\nMyFirstName## French first name: Eric\nlibrary(\"entropart\")\n.S3methods(class = \"SpeciesDistribution\")## [1] autoplot plot    \n## see '?methods' for accessing help and source code"},{"path":"chap-utiliseR.html","id":"s4","chapter":"2 Use R","heading":"2.1.3 S4","text":"S4 evolution S3 structures classes get closer classical object oriented language:Classes must explicitly defined, simply declared.1ttributes (.e. variables describing objects), called slots, explicitly declared.constructor, .e. method creates new instance class (.e. variable containing object class), explicit.Using previous example, S4 syntax follows:Methods always belong functions.\ndeclared setMethod() function:attributes called syntax variable@slot.summary, S4 rigorous S3.\npackages CRAN : Matrix, sp, odbc… many Bioconductor written S4 language now clearly abandoned favor S3, notably success tidyverse.","code":"\n# Definition of the class Person, with its slots\nsetClass(\"Person\",  \n         slots = list(LastName = \"character\", FirstName = \"character\"))\n#  Construction of an instance\nMe <- new(\"Person\", LastName = \"Marcon\", FirstName = \"Eric\")\n# Langage\npryr::otype(Me)## [1] \"S4\"\nsetMethod(\"print\", signature = \"Person\", function(x, ...) {\n    cat(\"The person is:\", x@FirstName, x@LastName)\n})\nprint(Me)## The person is: Eric Marcon"},{"path":"chap-utiliseR.html","id":"rc","chapter":"2 Use R","heading":"2.1.4 RC","text":"RC introduced R 2.12 (2010) methods package.Methods belong classes, C++: declared class called objects.RC confidential language, although first “true” object-oriented language R.","code":"\nlibrary(\"methods\")\n# Declaration of the class\nPersonRC <- setRefClass(\"PersonRC\", \n    fields = list(LastName = \"character\", FirstName = \"character\"),\n    methods = list(print = function() cat(FirstName, LastName)))\n# Constructeur\nMeRC <- new(\"PersonRC\", LastName = \"Marcon\", FirstName =\"Eric\")\n# Language\npryr::otype(MeRC)## [1] \"RC\"\n# Call the print method\nMeRC$print()## Eric Marcon"},{"path":"chap-utiliseR.html","id":"s6","chapter":"2 Use R","heading":"2.1.5 S6","text":"S620 enhances RC included R: requires installing package.Attributes methods can public private.\ninitialize() method used constructor.S6 allows program rigorously object little used.\nperformances S6 much better RC inferior S321.non-inclusion R6 R shown pryr:","code":"\nlibrary(\"R6\")\nPersonR6 <- R6Class(\"PersonR6\", public = list(LastName = \"character\",\n    FirstName = \"character\", initialize = function(LastName = NA,\n        FirstName = NA) {\n        self$LastName <- LastName\n        self$FirstName <- FirstName\n    }, print = function() cat(self$FirstName, self$LastName)))\nMeR6 <- PersonR6$new(LastName = \"Marcon\", FirstName = \"Eric\")\nMeR6$print()## Eric Marcon\npryr::otype(MeR6)## [1] \"S3\""},{"path":"chap-utiliseR.html","id":"tidyverse","chapter":"2 Use R","heading":"2.1.6 Tidyverse","text":"tidyverse set coherent packages evolved way R programmed.\nset essential packages can loaded tidyverse package use:new language per se rather extension S3, deep technical modifications, notably unconventional evaluation expressions22, essential master detail.principles written manifesto23.\nvisible contribution user sequence commands flow (code pipeline).standard programming, sequence functions written successive nesting, makes difficult read, especially arguments needed:tidyverse, functions chained together, often better matches programmer’s thinking data processing:pipe %>% operator calls next function passing first argument result previous function.\nAdditional arguments passed normally: readability code, essential name .\nR functions can used without difficulty tidyverse, even though designed purpose: sufficient first argument data processed.pipeline allows one value passed next function, prohibits multidimensional functions, f(x,y).\npreferred data structure tibble, improved dataframe: print() method readable, corrects unintuitive dataframe behavior, automatic conversion single-column dataframes vectors.\ncolumns dataframe tibble allow pass much data needed.Finally, data visualization supported ggplot2 relies theoretically sound graph grammar (Wickham 2010).\nSchematically, graph constructed according following model:data necessarily dataframe.geometry type graph chosen (points, lines, histograms ).aesthetics (function aes()) designates represented: correspondence columns dataframe elements necessary geometry.Statistics treatment applied data passing geometry (often “identity”, .e. transformation “boxplot” boxplot).\ndata can transformed scale function, scale_y_log10().position location objects graph (often “identity”; “stack” stacked histogram, “jitter” move overlapping points slightly geom_point).coordinates define display graph (coord_fixed() avoid distorting map example).Finally, facets offer possibility display several aspects data producing one graph per modality variable.set formed pipeline ggplot2 allows complex processing readable code.\nFigure 2.1 shows result following code:\nFigure 2.1: Price diamonds according weight. Demonstration ggplot2 code combined tidyverse data processing.\nfigure, two geometries (scatterplot linear regression) share aesthetics (price vs. weight carats) therefore declared upstream, ggplot() function.tidyverse documented detail Wickham Grolemund (2016) ggplot2 Wickham (2017).","code":"\nlibrary(\"tidyverse\")\n# Base-2 logarithm of the mean of 100 random numbers in a\n# uniform distribution\nlog(mean(runif(100)), base = 2)## [1] -1.127903\n# 100 random numbers in a uniform distribution\nrunif(100) %>% \n  # Mean\n  mean %>% \n  # Base-2 logarithm\n  log(base=2)## [1] -0.9772102ggplot(data = <DATA>) + \n  <GEOM_FUNCTION>(\n     mapping = aes(<MAPPINGS>),\n     stat = <STAT>, \n     position = <POSITION>\n  ) +\n  <COORDINATE_FUNCTION> +\n  <FACET_FUNCTION>\n# Diamonds data provided by ggplot2\ndiamonds %>% \n  # Keep only diamonds larger than half a carat\n  filter(carat > 0.5) %>% \n  # Graph: price vs. weight\n  ggplot(aes(x = carat, y = price)) +\n    # Scatter plot\n    geom_point() + \n    # Logarithmic scale\n    scale_x_log10() + \n    scale_y_log10() + \n    # Linear regression\n    geom_smooth(method = \"lm\")"},{"path":"chap-utiliseR.html","id":"sec:environnements","chapter":"2 Use R","heading":"2.2 Environments","text":"R’s objects, data functions, named.\nSince R modular, ability add number packages , likely name conflicts arise.\ndeal , R rigorous system name precedence: code runs defined environment, inheriting parent environments.","code":""},{"path":"chap-utiliseR.html","id":"organization","chapter":"2 Use R","heading":"2.2.1 Organization","text":"R starts empty environment.\nloaded package creates child environment form stack environments, new element called “child” previous one, “parent”.console global environment, child last loaded package.code function called console runs child environment global environment:","code":"\nsearch()##  [1] \".GlobalEnv\"        \"package:R6\"       \n##  [3] \"package:entropart\" \"package:lubridate\"\n##  [5] \"package:forcats\"   \"package:stringr\"  \n##  [7] \"package:dplyr\"     \"package:purrr\"    \n##  [9] \"package:readr\"     \"package:tidyr\"    \n## [11] \"package:tibble\"    \"package:ggplot2\"  \n## [13] \"package:tidyverse\" \"package:stats\"    \n## [15] \"package:graphics\"  \"package:grDevices\"\n## [17] \"package:utils\"     \"package:datasets\" \n## [19] \"package:methods\"   \"Autoloads\"        \n## [21] \"package:base\"\n# Current environment\nenvironment()## <environment: R_GlobalEnv>\n# The function f displays its environment\nf <- function() environment()\n# Display the environment of the function\nf()## <environment: 0x138f77970>\n# Parent environment of the function's environment\nparent.env(f())## <environment: R_GlobalEnv>"},{"path":"chap-utiliseR.html","id":"search","chapter":"2 Use R","heading":"2.2.2 Search","text":"search ab object starts local environment.\nfound, searched parent environment, parent parent, environments exhausted, generates error indicating object found.Example:variable q defined global environment.\nfunction qLocalFunction defines variable q.\nCalling function returns local value function’s environment.qGlobalEnv function returns q variable define locally.\nlooks parent environment finds variable defined global environment.\nremoving variable global environment rm(q), qGlobalEnv() function scans stack environments finds object named q base package, function exit R.\nfound another object package containing q object loaded.avoid erratic behavior, function never call object defined environment.","code":"\n# Variable q defined in the global environment\nq <- \"GlobalEnv\"\n# Function defining q in its environment\nqLocalFunction <- function() {\n    q <- \"Function\"\n    return(q)\n}\n# The local variable is returned\nqLocalFunction()## [1] \"Function\"\n# Poorly written function using a variable it does not\n# define\nqGlobalEnv <- function() {\n    return(q)\n}\n# The global environment variable is returned\nqGlobalEnv()## [1] \"GlobalEnv\"\n# Delete this variable\nrm(q)\n# The function base::q is returned\nqGlobalEnv()## function (save = \"default\", status = 0, runLast = TRUE) \n## .Internal(quit(save, status, runLast))\n## <bytecode: 0x1396acc88>\n## <environment: namespace:base>"},{"path":"chap-utiliseR.html","id":"package-namespaces","chapter":"2 Use R","heading":"2.2.3 Package namespaces","text":"time define precisely packages make visible.\nPackages contain objects (functions data) export .\nusually called library() function, two things:loads package memory, allowing access objects syntax package::object exported objects package:::object non-exported ones.attaches package, places environment top stack.possible detach package unloadNamespace() function remove environment stack.\nExample:Calling entropart::Diversity() loads package (.e., implicitly executes loadNamespace(\"entropart\")) attach .practice, one limit number attached packages limit risk calling unwanted function, homonymous desired function.\ncritical cases, full name function used: package::function().common issue occurs filter() function dplyr, namesake stats function.\nstats package usually loaded dplyr, package tidyverse.\nThus, stats::filter() must called explicitly.However, dplyr tidyverse package (attaches tidyverse packages) can loaded systematically creating .RProfile root project containing command:case, dplyr loaded stats function inaccessible.","code":"\n# entropart loaded and attached\nlibrary(\"entropart\")\n# is it attached?\nisNamespaceLoaded(\"entropart\")## [1] TRUE\n# stack of environments\nsearch()##  [1] \".GlobalEnv\"        \"package:R6\"       \n##  [3] \"package:entropart\" \"package:lubridate\"\n##  [5] \"package:forcats\"   \"package:stringr\"  \n##  [7] \"package:dplyr\"     \"package:purrr\"    \n##  [9] \"package:readr\"     \"package:tidyr\"    \n## [11] \"package:tibble\"    \"package:ggplot2\"  \n## [13] \"package:tidyverse\" \"package:stats\"    \n## [15] \"package:graphics\"  \"package:grDevices\"\n## [17] \"package:utils\"     \"package:datasets\" \n## [19] \"package:methods\"   \"Autoloads\"        \n## [21] \"package:base\"\n# Diversity(), a function exported by entropart is found\nDiversity(1, CheckArguments = FALSE)## None \n##    1\n# Detach and unload entropart\nunloadNamespace(\"entropart\")\n# Is it attached?\nisNamespaceLoaded(\"entropart\")## [1] FALSE\n# Stack of environments, without entropart\nsearch()##  [1] \".GlobalEnv\"        \"package:R6\"       \n##  [3] \"package:lubridate\" \"package:forcats\"  \n##  [5] \"package:stringr\"   \"package:dplyr\"    \n##  [7] \"package:purrr\"     \"package:readr\"    \n##  [9] \"package:tidyr\"     \"package:tibble\"   \n## [11] \"package:ggplot2\"   \"package:tidyverse\"\n## [13] \"package:stats\"     \"package:graphics\" \n## [15] \"package:grDevices\" \"package:utils\"    \n## [17] \"package:datasets\"  \"package:methods\"  \n## [19] \"Autoloads\"         \"package:base\"\n# Diversity() cannot be found\ntryCatch(Diversity(1), error = function(e) print(e))## <simpleError in Diversity(1): could not find function \"Diversity\">\n# but can be called with its full name\nentropart::Diversity(1, CheckArguments = FALSE)## None \n##    1\nlibrary(\"tidyverse\")"},{"path":"chap-utiliseR.html","id":"measuring-execution-time","chapter":"2 Use R","heading":"2.3 Measuring execution time","text":"execution time long code can measured simply system.time command.\nshort execution times, necessary repeat measurement: purpose microbenchmark package.","code":""},{"path":"chap-utiliseR.html","id":"system.time","chapter":"2 Use R","heading":"2.3.1 system.time","text":"function returns execution time code.","code":"\n# Mean absolute deviation of 1000 values in a uniform\n# distribution, repeated 100 times\nsystem.time(for (i in 1:100) mad(runif(1000)))##    user  system elapsed \n##   0.009   0.000   0.009"},{"path":"chap-utiliseR.html","id":"microbenchmark","chapter":"2 Use R","heading":"2.3.2 microbenchmark","text":"microbenchmark package advanced.goal compare speed computing square vector (number) multiplying (\\(x \\times x\\)) raising power 2 (\\(x^2\\)).returned table contains minimum, median, mean, max first third quartile times, well number repetitions.\nmedian value compared.\nnumber repetitions default 100, modulated (argument times) according complexity calculation.test result, microbenchmark object, raw table execution times.\nstatistical analysis done print summary methods.\nchoose columns display, use following syntax:make calculations results, must store variable.\nprevent results displayed console, simplest solution use capture.output function assigning result variable.previous test displayed .computation time \\(x \\times x\\) \\(x^2\\).\npower calculation much longer, especially power integer, requires logarithm calculation.\ncomputation power 2 therefore optimized R avoid use log.Two graphical representations available: violins represent probability density execution time; boxplots classical.","code":"\n# Functions to test\nf1 <- function(x) x * x\nf2 <- function(x) x^2\nf3 <- function(x) x^2.1\nf4 <- function(x) x^3\n# Initialization\nX <- rnorm(10000)\n# Test\nlibrary(\"microbenchmark\")\n(mb <- microbenchmark(f1(X), f2(X), f3(X), f4(X)))## Unit: microseconds\n##   expr     min       lq      mean   median       uq\n##  f1(X)   1.886   6.9495  20.07483   8.7125  26.9985\n##  f2(X)   4.182   8.9380  20.35650   9.9015  28.0030\n##  f3(X) 100.573 107.7070 139.65338 114.1645 127.2025\n##  f4(X) 133.578 139.9330 176.30656 147.5795 163.3030\n##       max neval\n##   392.616   100\n##   398.725   100\n##  1455.992   100\n##   873.792   100\nsummary(mb)[, c(\"expr\", \"median\")]##    expr   median\n## 1 f1(X)   8.7125\n## 2 f2(X)   9.9015\n## 3 f3(X) 114.1645\n## 4 f4(X) 147.5795\ndummy <- capture.output(mbs <- summary(mb))\nsummary(mb)[, c(\"expr\", \"median\")]##    expr   median\n## 1 f1(X)   8.7125\n## 2 f2(X)   9.9015\n## 3 f3(X) 114.1645\n## 4 f4(X) 147.5795\nlibrary(\"ggplot2\")\nautoplot(mb)\nboxplot(mb)"},{"path":"chap-utiliseR.html","id":"profiling","chapter":"2 Use R","heading":"2.3.3 Profiling","text":"profvis RStudio’s profiling tool.tracks execution time line code memory used.\ngoal detect slow code portions need improved.result HTML file containing profiling report24.\ncan observed time draw random numbers similar cosine calculation.Read complete documentation25 RStudio website.","code":"\nlibrary(profvis)\np <- profvis({\n    # Cosine calculations\n    cos(runif(10^7))\n    # 1/2 second pause\n    pause(1/2)\n})\nhtmlwidgets::saveWidget(p, \"docs/profile.html\")"},{"path":"chap-utiliseR.html","id":"loops","chapter":"2 Use R","heading":"2.4 Loops","text":"frequent case long code execute loops: code repeated large number times.","code":""},{"path":"chap-utiliseR.html","id":"vector-functions","chapter":"2 Use R","heading":"2.4.1 Vector functions","text":"R’s functions vector functions: loops processed internally, extremely fast.\nTherefore, think terms vectors rather scalars.also write vector functions first argument.\nfunction lnq package entropart returns deformed logarithm order \\(q\\) number \\(x\\).function vector, line code must allow first argument treated vector.\n: log(x) x^ vector function operator condition [x < 0] also returns vector.","code":"\n# Draw two vectors of three random numbers between 0 and 1\nx1 <- runif(3)\nx2 <- runif(3)\n# Square root of the three numbers in x1\nsqrt(x1)## [1] 0.9427738 0.8665204 0.4586981\n# Respective sums of the three numbers of x1 and x2\nx1 + x2## [1] 1.6262539 1.6881583 0.9063973\n# Code of the function\nentropart::lnq## function (x, q) \n## {\n##     if (q == 1) {\n##         return(log(x))\n##     }\n##     else {\n##         Log <- (x^(1 - q) - 1)/(1 - q)\n##         Log[x < 0] <- NA\n##         return(Log)\n##     }\n## }\n## <bytecode: 0x13a23f778>\n## <environment: namespace:entropart>"},{"path":"chap-utiliseR.html","id":"lapply","chapter":"2 Use R","heading":"2.4.2 lapply","text":"Code written vector function requires loops.lapply() applies function element list.\nseveral versions function:lapply() returns list (saves time rearranging array).sapply() returns dataframe collapsing lists (done simplify2array() function).vapply() almost identical requires data type result provided.lapply() much slower vector function.\nsapply() requires time simplify2array(), must detect gather results.\nFinally, vapply() saves time determining data type result allows faster computation little effort.","code":"\n# Draw 1000 values in a uniform distribution\nx1 <- runif(1000)\n# The square root can be calculated for the vector or each\n# value\nidentical(sqrt(x1), sapply(x1, FUN = sqrt))## [1] TRUE\nmb <- microbenchmark(sqrt(x1), lapply(x1, FUN = sqrt), sapply(x1,\n    FUN = sqrt), vapply(x1, FUN = sqrt, FUN.VALUE = 0))\nsummary(mb)[, c(\"expr\", \"median\")]##                                    expr   median\n## 1                              sqrt(x1)   1.5580\n## 2                lapply(x1, FUN = sqrt) 138.7440\n## 3                sapply(x1, FUN = sqrt) 167.0340\n## 4 vapply(x1, FUN = sqrt, FUN.VALUE = 0) 136.4275"},{"path":"chap-utiliseR.html","id":"for-loops","chapter":"2 Use R","heading":"2.4.3 For loops","text":"Loops handled function.\nreputation slow R code inside loop must interpreted execution.\nlonger case since version 3.5 R: loops compiled systematically execution.\nbehavior just--time compiler defined enableJIT function.\ndefault level 3: functions compiled, loops code compiled .evaluate performance gain, following code removes automatic compilation, compares loop compiled .gain considerable: 1 8.loops now much faster vapply.careful, performance test can misleading:code, loop compiled much slower normal use (function top level code).long loops allow tracking progress text bar, another advantage.\nfollowing function executes pauses one tenth second time passed parameter (seconds).","code":"\nlibrary(\"compiler\")\n# No automatic compilation\nenableJIT(level = 0)## [1] 3\n# Loop to calculate the square root of a vector\nLoop <- function(x) {\n    # Initialization of the result vector, essential\n    Root <- vector(\"numeric\", length = length(x))\n    # Loop\n    for (i in 1:length(x)) Root[i] <- sqrt(x[i])\n    return(Root)\n}\n# Compiled version\nLoop2 <- cmpfun(Loop)\n# Comparison\nmb <- microbenchmark(Loop(x1), Loop2(x1))\n(mbs <- summary(mb)[, c(\"expr\", \"median\")])##        expr  median\n## 1  Loop(x1) 358.422\n## 2 Loop2(x1)  42.517\n# Automatic compilation by default since version 3.5\nenableJIT(level = 3)## [1] 0\n# Test\nmb <- microbenchmark(vapply(x1, FUN = sqrt, 0), Loop(x1))\nsummary(mb)[, c(\"expr\", \"median\")]##                        expr   median\n## 1 vapply(x1, FUN = sqrt, 0) 136.0790\n## 2                  Loop(x1)  42.2505\n# Preparing the result vector\nRoot <- vector(\"numeric\", length = length(x1))\n# Test\nmb <- microbenchmark(vapply(x1, FUN = sqrt, 0), \n                     for(i in 1:length(x1)) \n                       Root[i] <- sqrt(x1[i]))\nsummary(mb)[, c(\"expr\", \"median\")]##                                             expr    median\n## 1                      vapply(x1, FUN = sqrt, 0)  141.6755\n## 2 for (i in 1:length(x1)) Root[i] <- sqrt(x1[i]) 1134.5725\nMonitoredLoop <- function(duration = 1) {\n    # Progress bar\n    pgb <- txtProgressBar(min = 0, max = duration * 10)\n    # Boucle\n    for (i in 1:(duration * 10)) {\n        # Pause for a tenth of a second\n        Sys.sleep(1/10)\n        # Track progress\n        setTxtProgressBar(pgb, i)\n    }\n}\nMonitoredLoop()## ============================================================"},{"path":"chap-utiliseR.html","id":"replicate","chapter":"2 Use R","heading":"2.4.4 replicate","text":"replicate() repeats statement.code equivalent runif(3), performance similar vapply: 50 100 times slower vector function.","code":"\nreplicate(3, runif(1))## [1] 0.9453453 0.5262818 0.7233425\nmb <- microbenchmark(replicate(1000, runif(1)), runif(1000))\nsummary(mb)[, c(\"expr\", \"median\")]##                        expr  median\n## 1 replicate(1000, runif(1)) 675.147\n## 2               runif(1000)   6.027"},{"path":"chap-utiliseR.html","id":"vectorize","chapter":"2 Use R","heading":"2.4.5 Vectorize","text":"Vectorize() makes function vectorized, loops.\nWrite loops instead.","code":""},{"path":"chap-utiliseR.html","id":"marginal-statistics","chapter":"2 Use R","heading":"2.4.6 Marginal statistics","text":"apply applies function rows columns two dimensional object.colSums similar functions (rowSums, colMeans, rowMeans) optimized.apply clarifies code slower loop, slightly slower colSums.","code":"\n# Sum of the numeric columns of the diamonds dataset of ggplot2\n# Loop identical to the action of apply(, 2, )\nSumLoop <- function(Table) {\n  Sum <- vector(\"numeric\", length = ncol(Table))\n  for (i in 1:ncol(Table)) Sum[i] <- sum(Table[, i])\n  return(Sum)\n}\nmb <- microbenchmark(SumLoop(diamonds[-(2:4)]), \n                     apply(diamonds[-(2:4)], 2, sum), \n                     colSums(diamonds[-(2:4)]))\nsummary(mb)[, c(\"expr\", \"median\")]##                              expr   median\n## 1       SumLoop(diamonds[-(2:4)]) 1393.283\n## 2 apply(diamonds[-(2:4)], 2, sum) 3319.954\n## 3       colSums(diamonds[-(2:4)]) 1083.650"},{"path":"chap-utiliseR.html","id":"sec:cpp","chapter":"2 Use R","heading":"2.5 C++ code","text":"Integrating C++ code R greatly simplified Rcpp package still difficult debug therefore reserved simple code (avoid errors) repeated large number times (worth effort).\npreparation verification data must done R, well processing presentation results.common practise include C++ code package, running outside package possible:C++ code can included C++ document (file extension .cpp): compiled sourceCpp() command, creates R functions call C++ code.RMarkdown document, Rcpp code snippets can created insert C++ code: compiled interfaced R time knitting.following example shows create C++ function calculate double numerical vector.R function name C++ function now available.performance two orders magnitude faster R code (see case study, section 2.7).","code":"#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nNumericVector timesTwo(NumericVector x) {\n  return x * 2;\n}\ntimesTwo(1:5)## [1]  2  4  6  8 10"},{"path":"chap-utiliseR.html","id":"parallelizing-r","chapter":"2 Use R","heading":"2.6 Parallelizing R","text":"long computations can split independent tasks, simultaneous (parallel) execution tasks reduces total computation time longest task, added cost setting parallelization (creation tasks, recovery results…).Read Josh Errickson’s excellent introduction26 details issues constraints parallelization.Two mechanisms available parallel code execution:fork: running process duplicated multiple cores computing computer’s processor.\nsimplest method work Windows (limitation operating system).Socket: cluster constituted, either physically (set computers running R necessary) logically (instance R core computer used).\nmembers cluster communicate network (internal network computer used logical cluster).Different R packages allow implement mechanisms.","code":""},{"path":"chap-utiliseR.html","id":"mclapply-fork","chapter":"2 Use R","heading":"2.6.1 mclapply (fork)","text":"mclapply function parallel package syntax lapply parallelizes execution loops.\nWindows, effect since system allow fork: simply calls lapply.\nHowever, workaround exists emulate mclapply Windows calling parLapply, uses cluster.following code tests parallelization function returns argument unchanged quarter-second pause.\nknitted 3 cores, used except one saturate system.Setting parallelization cost 0.14 seconds .\nexecution time much longer parallel Windows setting cluster takes much time parallelization saves.\nParallelization interesting longer tasks, one second break.additional time required parallel execution new code relatively smaller: costs become less savings time task increases.number parallel tasks exceeds number cores used, performance collapses additional task must executed first ones.time remains stable number cores doubled.\nFigure 2.2 shows evolution computation time according number tasks.\nFigure 2.2: Parallel execution time tasks requiring one second (task one second pause). number tasks varies 1 twice number cores used (equal 2) plus one.\ntheoretical shape curve follows:task, time equal one second plus parallelization setup time.time remain stable number cores used.cores used (red dotted line), time increase one second remain stable next limit.practice, computation time determined factors difficult predict.\nbest practice adapt number tasks number cores, otherwise performance lost.","code":"\n##\n## mclapply.hack.R\n##\n## Nathan VanHoudnos\n## nathanvan AT northwestern FULL STOP edu\n## July 14, 2014\n##\n## A script to implement a hackish version of \n## parallel:mclapply() on Windows machines.\n## On Linux or Mac, the script has no effect\n## beyond loading the parallel library. \n\nrequire(parallel)    ## Loading required package: parallel\n## Define the hack\n# mc.cores argument added: Eric Marcon\nmclapply.hack <- function(..., mc.cores=detectCores()) {\n  ## Create a cluster\n  size.of.list <- length(list(...)[[1]])\n  cl <- makeCluster( min(size.of.list, mc.cores) )\n  \n  ## Find out the names of the loaded packages \n  loaded.package.names <- c(\n    ## Base packages\n    sessionInfo()$basePkgs,\n    ## Additional packages\n    names( sessionInfo()$otherPkgs ))\n  \n  tryCatch( {\n    \n    ## Copy over all of the objects within scope to\n    ## all clusters. \n    this.env <- environment()\n    while( identical( this.env, globalenv() ) == FALSE ) {\n      clusterExport(cl,\n                    ls(all.names=TRUE, env=this.env),\n                    envir=this.env)\n      this.env <- parent.env(environment())\n    }\n    clusterExport(cl,\n                  ls(all.names=TRUE, env=globalenv()),\n                  envir=globalenv())\n    \n    ## Load the libraries on all the clusters\n    ## N.B. length(cl) returns the number of clusters\n    parLapply( cl, 1:length(cl), function(xx){\n      lapply(loaded.package.names, function(yy) {\n        require(yy , character.only=TRUE)})\n    })\n    \n    ## Run the lapply in parallel \n    return( parLapply( cl, ...) )\n  }, finally = {        \n    ## Stop the cluster\n    stopCluster(cl)\n  })\n}\n\n## Warn the user if they are using Windows\nif( Sys.info()[['sysname']] == 'Windows' ){\n  message(paste(\n    \"\\n\", \n    \"   *** Microsoft Windows detected ***\\n\",\n    \"   \\n\",\n    \"   For technical reasons, the MS Windows version of mclapply()\\n\",\n    \"   is implemented as a serial function instead of a parallel\\n\",\n    \"   function.\",\n    \"   \\n\\n\",\n    \"   As a quick hack, we replace this serial version of mclapply()\\n\",\n    \"   with a wrapper to parLapply() for this R session. Please see\\n\\n\",\n    \"     http://www.stat.cmu.edu/~nmv/2014/07/14/\n    implementing-mclapply-on-windows \\n\\n\",\n    \"   for details.\\n\\n\"))\n}\n\n## If the OS is Windows, set mclapply to the\n## the hackish version. Otherwise, leave the\n## definition alone. \nmclapply <- switch( Sys.info()[['sysname']],\n                    Windows = {mclapply.hack}, \n                    Linux   = {mclapply},\n                    Darwin  = {mclapply})\n\n## end mclapply.hack.R\nf <- function(x, time = 0.25) {\n    Sys.sleep(time)\n    return(x)\n}\n# Leave one core out for the system\nnbCores <- detectCores() - 1\n# Serial : theoretical time = nbCores/4 seconds\n(tserie <- system.time(lapply(1:nbCores, f)))##    user  system elapsed \n##   0.003   0.000   0.773\n# Parallel : theoretical time = 1/4 second\n(tparallele <- system.time(mclapply(1:nbCores, f, mc.cores = nbCores)))##    user  system elapsed \n##   0.002   0.022   0.394\n# Serial\nsystem.time(lapply(1:nbCores, f, time = 1))##    user  system elapsed \n##   0.000   0.000   2.114\n# Parallel\nsystem.time(mclapply(1:nbCores, f, time = 1, mc.cores = nbCores))##    user  system elapsed \n##   0.001   0.013   1.147\nsystem.time(mclapply(1:nbCores, f, time = 1, mc.cores = nbCores))##    user  system elapsed \n##   0.002   0.015   1.166\nsystem.time(mclapply(1:(nbCores + 1), f, time = 1, mc.cores = nbCores))##    user  system elapsed \n##   0.001   0.015   2.100\nTasks <- 1:(2 * nbCores+1)\nTime <- sapply(Tasks, function(nbTasks) {\n      system.time(mclapply(1:nbTasks, f, time=1, mc.cores=nbCores))\n              })\nlibrary(\"tidyverse\")\ntibble(Tasks, Time=Time[\"elapsed\", ]) %>% \n  ggplot +\n  geom_line(aes(x = Tasks, y = Time)) +\n  geom_vline(xintercept = nbCores, col = \"red\", lty = 2) +\n  geom_vline(xintercept = 2 * nbCores, col = \"red\", lty = 2)"},{"path":"chap-utiliseR.html","id":"parlapply-socket","chapter":"2 Use R","heading":"2.6.2 parLapply (socket)","text":"parLapply requires create cluster, export useful variables node, load necessary packages node, execute code finally stop cluster.\ncode step can found mclapply.hack function .everyday use, mclapply faster, except Windows, simpler (including Windows thanks workaround).","code":""},{"path":"chap-utiliseR.html","id":"foreach","chapter":"2 Use R","heading":"2.6.3 foreach","text":"","code":""},{"path":"chap-utiliseR.html","id":"how-it-works","chapter":"2 Use R","heading":"2.6.3.1 How it works","text":"foreach package allows advanced use parallelization.\nRead vignettes.Regardless parallelization, foreach redefines loops.foreach function returns list containing results loop.\nelements list can combined function, c.foreach function capable using iterators, , functions pass loop data needs without loading rest memory.\n, icount iterator passes values 1, 2 3 individually, without loading 1:3 vector memory.therefore useful object loop uses large amount memory.","code":"\n# Manual\nvignette(\"foreach\", \"foreach\")\n# Nested loops\nvignette(\"nested\", \"foreach\")\nfor (i in 1:3) {\n    f(i)\n}\n# becomes\nlibrary(\"foreach\")## \n## Attaching package: 'foreach'## The following objects are masked from 'package:purrr':\n## \n##     accumulate, when\nforeach(i = 1:3) %do% {\n    f(i)\n}## [[1]]\n## [1] 1\n## \n## [[2]]\n## [1] 2\n## \n## [[3]]\n## [1] 3\nforeach(i = 1:3, .combine = \"c\") %do% {\n    f(i)\n}## [1] 1 2 3\nlibrary(\"iterators\")\nforeach(i = icount(3), .combine = \"c\") %do% {\n    f(i)\n}## [1] 1 2 3"},{"path":"chap-utiliseR.html","id":"parallelization","chapter":"2 Use R","heading":"2.6.3.2 Parallelization","text":"Replacing %% operator %dopar% parallelizes loops, provided adapter, .e. intermediate package foreach package implementing parallelization, loaded.\ndoParallel adapter using parallel package comes R.fixed cost parallelization low.","code":"\nlibrary(doParallel)\nregisterDoParallel(cores = nbCores)\n# Serial\nsystem.time(foreach(i = icount(nbCores), .combine = \"c\") %do%\n    {\n        f(i)\n    })##    user  system elapsed \n##   0.003   0.001   0.709\n# Parallel\nsystem.time(foreach(i = icount(nbCores), .combine = \"c\") %dopar%\n    {\n        f(i)\n    })##    user  system elapsed \n##   0.003   0.021   0.393"},{"path":"chap-utiliseR.html","id":"future","chapter":"2 Use R","heading":"2.6.4 future","text":"future package used abstract code parallelization implementation.\ncentre ecosystem packages facilitate use27.parallelization strategy used declared plan() function.\ndefault strategy sequential, .e. single-task.\nmulticore multisession strategies based respectively fork socket techniques seen .\nstrategies available using physical clusters (several computers prepared run R together): future documentation details .use multisession strategy, works local computer, whatever operating system.future.apply package allows *apply() replicate() loops effortlessly parallelized prefixing names future_.foreach loops can parallelized doFuture package simply replacing %dopar% %dofuture%.strategy reset sequential end.","code":"\nlibrary(\"future\")\n# Socket strategy on all available cores except 1\nusedCores <- availableCores() - 1\nplan(multisession, workers = usedCores)\nlibrary(\"future.apply\")\nsystem.time(future_replicate(usedCores - 1, f(usedCores)))##    user  system elapsed \n##   0.024   0.001   0.386\nlibrary(\"doFuture\")\nsystem.time(foreach(i = icount(nbCores), .combine = \"c\") %dofuture%\n    {\n        f(i)\n    })##    user  system elapsed \n##   0.038   0.003   0.493\nplan(sequential)"},{"path":"chap-utiliseR.html","id":"sec:cas","chapter":"2 Use R","heading":"2.7 Case study","text":"case study tests different techniques seen solve concrete problem.\nobjective compute average distance two points random set 1000 points square window side 1.expectation computable28.\nequal \\(\\frac{2+\\sqrt{2}+5\\ln{(1+\\sqrt{2})}}{15} \\approx 0.5214\\).","code":""},{"path":"chap-utiliseR.html","id":"creation-of-the-data","chapter":"2 Use R","heading":"2.7.1 Creation of the data","text":"point set created spatstat package.","code":"\nNbPoints <- 1000\nlibrary(\"spatstat\")\nX <- runifpoint(NbPoints)"},{"path":"chap-utiliseR.html","id":"spatstat","chapter":"2 Use R","heading":"2.7.2 Spatstat","text":"pairdist() function spatstat returns matrix distances points.\naverage distance calculated dividing sum number pairs distinct points.function fast coded C language spatstat package core calculations.","code":"\nmb <- microbenchmark(d <- sum(pairdist(X))/NbPoints/(NbPoints -\n    1))\n# suppressMessages to eliminate useless messages\nsuppressMessages(autoplot(mb))\nd## [1] 0.5154879"},{"path":"chap-utiliseR.html","id":"apply","chapter":"2 Use R","heading":"2.7.3 apply","text":"distance can calculated two nested sapply().time can saved replacing sapply vapply: format results determined function.\ngain negligible long computation like one important short computations.output format always obvious write:must respect size data: vector size 1000 outer loop, scalar inner loop.must respect type: 0 integer, 0.0 real number. outer loop, adding 0.0 vector integers turns vector real numbers.significant improvement compute square roots end loop, take advantage vectorization function.computations performed twice (distance points \\(\\) \\(j\\), also points \\(j\\) \\(\\)): test indices allows divide time almost 2 (quite loops without computation, return \\(0\\), take time).parallel, computation time improved Windows individual tasks short.\nMacOS Linux, computation accelerated.","code":"\nfsapply1 <- function() {\n    distances <- sapply(1:NbPoints, function(i) sapply(1:NbPoints,\n        function(j) sqrt((X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2)))\n    return(sum(distances)/NbPoints/(NbPoints - 1))\n}\nsystem.time(d <- fsapply1())##    user  system elapsed \n##   2.400   0.011   2.412\nd## [1] 0.5154879\nfsapply2 <- function() {\n    distances <- vapply(1:NbPoints, function(i) vapply(1:NbPoints,\n        function(j) sqrt((X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2),\n        0), 1:1000 + 0)\n    return(sum(distances)/NbPoints/(NbPoints - 1))\n}\nsystem.time(d <- fsapply2())##    user  system elapsed \n##   2.216   0.005   2.222\nd## [1] 0.5154879\nfsapply3 <- function() {\n    distances <- vapply(1:NbPoints, function(i) vapply(1:NbPoints,\n        function(j) (X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2,\n        0), 1:1000 + 0)\n    return(sum(sqrt(distances))/NbPoints/(NbPoints - 1))\n}\nsystem.time(d <- fsapply3())##    user  system elapsed \n##   2.204   0.004   2.210\nd## [1] 0.5154879\nfsapply4 <- function() {\n    distances <- vapply(1:NbPoints, function(i) {\n        vapply(1:NbPoints, function(j) {\n            if (j > i) {\n                (X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2\n            } else {\n                0\n            }\n        }, 0)\n    }, 1:1000 + 0)\n    return(sum(sqrt(distances))/NbPoints/(NbPoints - 1) * 2)\n}\nsystem.time(d <- fsapply4())##    user  system elapsed \n##   1.280   0.003   1.287\nd## [1] 0.5154879\nfsapply5 <- function() {\n    distances <- mclapply(1:NbPoints, function(i) {\n        vapply(1:NbPoints, function(j) {\n            if (j > i) {\n                (X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2\n            } else {\n                0\n            }\n        }, 0)\n    })\n    return(sum(sqrt(simplify2array(distances)))/NbPoints/(NbPoints -\n        1) * 2)\n}\nsystem.time(d <- fsapply5())##    user  system elapsed \n##   1.350   0.159   0.783\nd## [1] 0.5154879"},{"path":"chap-utiliseR.html","id":"future.apply","chapter":"2 Use R","heading":"2.7.4 future.apply","text":"fsapply4() function optimised can parallelled directly prefixing vapply function future_.\nmain loop parallelized: nesting future_vapply() collapse performance.","code":"\nlibrary(\"future.apply\")\n# Socket strategy on all available cores except 1\nplan(multisession, workers = availableCores() - 1)\nfuture_fsapply4_ <- function() {\n    distances <- future_vapply(1:NbPoints, function(i) {\n        vapply(1:NbPoints, function(j) {\n            if (j > i) {\n                (X$x[i] - X$x[j])^2 + (X$y[i] - X$y[j])^2\n            } else {\n                0\n            }\n        }, 0)\n    }, 1:1000 + 0)\n    return(sum(sqrt(distances))/NbPoints/(NbPoints - 1) * 2)\n}\nsystem.time(d <- future_fsapply4_())##    user  system elapsed \n##   0.050   0.007   0.968\nd## [1] 0.5154879\nplan(sequential)"},{"path":"chap-utiliseR.html","id":"for-loop","chapter":"2 Use R","heading":"2.7.5 for loop","text":"loop faster consumes less memory store distance matrix.simplest efficient way write code core R parallelization.","code":"\ndistance <- 0\nffor <- function() {\n    for (i in 1:(NbPoints - 1)) {\n        for (j in (i + 1):NbPoints) {\n            distance <- distance + sqrt((X$x[i] - X$x[j])^2 +\n                (X$y[i] - X$y[j])^2)\n        }\n    }\n    return(distance/NbPoints/(NbPoints - 1) * 2)\n}\n# Calculation time, stored\n(for_time <- system.time(d <- ffor()))##    user  system elapsed \n##   0.795   0.003   0.799\nd## [1] 0.5154879"},{"path":"chap-utiliseR.html","id":"foreach-loop","chapter":"2 Use R","heading":"2.7.6 foreach loop","text":"Parallelization executes loops inside foreach loop, quite efficient.\nHowever, distances calculated twice.possible nest two foreach loops, extremely slow compared simple loop.\ntest run 10 times fewer points, 100 times fewer distances calculate.Nested foreach loops reserved long tasks (several seconds least) compensate fixed costs setting .","code":"\nregisterDoParallel(cores = detectCores())\nfforeach3 <- function(Y) {\n  distances <- foreach(\n    i = icount(Y$n), \n    .combine = '+') %dopar% {\n      distance <- 0\n      for (j in 1:Y$n) {\n        distance <- distance + \n          sqrt((Y$x[i] - Y$x[j])^2 + (Y$y[i] - Y$y[j])^2)\n      }\n      distance\n    }\n  return(distances / Y$n / (Y$n - 1))\n}\nsystem.time(d <- fforeach3(X))##    user  system elapsed \n##   1.910   0.226   0.775\nd## [1] 0.5154879\nNbPointsReduit <- 100\nY <- runifpoint(NbPointsReduit)\nfforeach1 <- function(Y) {\n    distances <- foreach(i = 1:NbPointsReduit, .combine = \"cbind\") %:%\n        foreach(j = 1:NbPointsReduit, .combine = \"c\") %do% {\n        if (j > i) {\n            (Y$x[i] - Y$x[j])^2 + (Y$y[i] - Y$y[j])^2\n        } else {\n            0\n        }\n    }\n    return(sum(sqrt(distances))/NbPointsReduit/(NbPointsReduit -\n        1) * 2)\n}\nsystem.time(d <- fforeach1(Y))##    user  system elapsed \n##   0.769   0.005   0.774\nd## [1] 0.5304197"},{"path":"chap-utiliseR.html","id":"rcpp","chapter":"2 Use R","heading":"2.7.7 RCpp","text":"C++ function calculate distances following.called R simply.\ncomputation time short.","code":"#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\ndouble MeanDistance(NumericVector x, NumericVector y) {\n  double distance=0;\n  double dx, dy;\n  for (int i=0; i < (x.length()-1); i++) {\n    for (int j=i+1; j < x.length(); j++) {\n    // Calculate distance\n        dx = x[i]-x[j];\n        dy = y[i]-y[j];\n        distance += sqrt(dx*dx + dy*dy);\n    }\n  }\n  return distance/(double)(x.length()/2*(x.length()-1));\n}\nmb <- microbenchmark(d <- MeanDistance(X$x, X$y))\n# suppressMessages to eliminate superfluous messages\nsuppressMessages(autoplot(mb))\nd## [1] 0.5154879"},{"path":"chap-utiliseR.html","id":"rcppparallel","chapter":"2 Use R","heading":"2.7.8 RcppParallel","text":"RcppParallel allows interface parallelized C++ code, cost complex syntax RCpp.\nDocumentation available29.C++ function exported R perform computations organizes parallel execution another, non-exported, function type Worker.Two (C++) parallelization functions available two types tasks:parallelReduce accumulate value, used sum distances.parallelFor fill result matrix.syntax Worker bit tricky simple enough adapt: constructors initialize C variables values passed R declare parallelization.usage R identical usage C++ functions interfaced RCpp.setup time parallel tasks much longer serial computation time.Multiplying number points 50, serial computation time must multiplied 2500.parallel, time increases little: parallelization becomes really efficient.\ntime compared reference loop, multiplied 2500, 1997 seconds.","code":"// [[Rcpp::depends(RcppParallel)]]\n#include <Rcpp.h>\n#include <RcppParallel.h>\nusing namespace Rcpp;\nusing namespace RcppParallel;\n\n// Working function, not exported\nstruct TotalDistanceWrkr : public Worker\n{\n  // source vectors\n  const RVector<double> Rx;\n  const RVector<double> Ry;\n  \n  // accumulated value\n  double distance;\n   \n  // constructors\n  TotalDistanceWrkr(const NumericVector x, const NumericVector y) :\n    Rx(x), Ry(y), distance(0) {}\n  TotalDistanceWrkr(const TotalDistanceWrkr& totalDistanceWrkr, Split) :\n    Rx(totalDistanceWrkr.Rx), Ry(totalDistanceWrkr.Ry),  distance(0) {}\n  \n  // count neighbors\n  void operator()(std::size_t begin, std::size_t end) {\n    double dx, dy;\n    unsigned int Npoints = Rx.length();\n\n    for (unsigned int i = begin; i < end; i++) {\n      for (unsigned int j=i+1; j < Npoints; j++) {\n          // Calculate squared distance\n          dx = Rx[i]-Rx[j];\n          dy = Ry[i]-Ry[j];\n          distance += sqrt(dx*dx + dy*dy);\n      }\n    }\n  }\n\n  // join my value with that of another Sum\n  void join(const TotalDistanceWrkr& rhs) { \n    distance += rhs.distance; \n  }\n};\n\n\n// Exported function\n// [[Rcpp::export]]\ndouble TotalDistance(NumericVector x, NumericVector y) {\n  \n  // Declare TotalDistanceWrkr instance\n  TotalDistanceWrkr totalDistanceWrkr(x, y);\n  \n  // call parallel_reduce to start the work\n  parallelReduce(0, x.length(), totalDistanceWrkr);\n  \n  // return the result\n  return totalDistanceWrkr.distance;\n}\n(mb <- microbenchmark(d <- TotalDistance(X$x, X$y)/NbPoints/(NbPoints -\n    1) * 2))## Unit: microseconds\n##                                                      expr\n##  d <- TotalDistance(X$x, X$y)/NbPoints/(NbPoints - 1) * 2\n##      min      lq     mean  median      uq      max neval\n##  219.596 231.445 267.7956 235.381 244.032 2477.425   100\n# suppressMessages to eliminate superfluous messages\nsuppressMessages(autoplot(mb))\nd## [1] 0.5154879\nNbPoints <- 50000\nX <- runifpoint(NbPoints)\nsystem.time(d <- MeanDistance(X$x, X$y))##    user  system elapsed \n##   4.393   0.004   4.400\nsystem.time(d <- TotalDistance(X$x, X$y)/NbPoints/(NbPoints -\n    1) * 2)##    user  system elapsed \n##   1.279   0.003   0.429"},{"path":"chap-utiliseR.html","id":"conclusions-on-code-speed-optimization","chapter":"2 Use R","heading":"2.7.9 Conclusions on code speed optimization","text":"case study, several lessons can learned:loop good basis repetitive calculations, faster vapply(), simple read write.foreach loops extremely effective parallelizing loops;Optimized functions may exist R packages common tasks (, pairdist() function spatstat two orders magnitude faster loop).future.apply package makes easy parallelize code already written *apply() functions, regardless hardware used;use C++ code allows speed calculations significantly, three orders magnitude .Parallelization C++ code divides computation time half number cores long computations.Beyond example, optimizing computation time R can complicated involves parallelization writing C++ code.\neffort must therefore concentrated really long computations readability code must remain priority current code.\nC code quite easy integrate RCpp parallelization expensive RCppParallel.use loops longer penalized since version 3.5 R.\nWriting vector code, using sapply() still justified readability.choice parallelizing code must evaluated according execution time parallelizable task.\nexceeds seconds, parallelization justified.","code":""},{"path":"chap-utiliseR.html","id":"sec:targets","chapter":"2 Use R","heading":"2.8 Workflow","text":"targets package allows manage workflow, .e. break code elementary tasks called targets follow , result stored variable, saved disk.\ncase change code data used, targets concerned reevaluated.operation flow similar cache, depend computer runs.\nalso possible integrate flow document project (see section 4.9), even use computing cluster process tasks parallel.","code":""},{"path":"chap-utiliseR.html","id":"how-it-works-1","chapter":"2 Use R","heading":"2.8.1 How it works","text":"documentation30 targets detailed provides worked example learn use package31.\nrepeated , principles flow works explained..workflow unique given project.\ncoded _targets.R file root project.\ncontains:Global commands, loading packages.list targets, describe code executed variable stores result.workflow run tar_make() function, updates targets need .\ncontent placed _targets folder.\nStored variables read tar_read().project requires long computations, targets can used run necessary.\nproject shared placed source control (chapter 3), result computations also integrated.\nFinally, project document (chapter 4), formatting completely independent calculation content, possibly considerable time saving.","code":""},{"path":"chap-utiliseR.html","id":"minimal-example","chapter":"2 Use R","heading":"2.8.2 Minimal example","text":"following example even simpler one targets manual, allow go .\ntakes previous case study: set points generated average distance points calculated.\nmap points also drawn.\nthree operations target vocabulary targets.workflow file therefore following:global commands consist loading targets package listing packages needed code.\nexecution workflow takes place new instance R.targets listed.\none declared tar_target() function whose first argument name target, name variable receive result.\nsecond argument code produces result.\nTargets simple can written single command.\ncase, target can written function, stored separate code file loaded source() function beginning workflow file.tar_visnetwork command displays sequence targets possibly obsolete status.order declaration targets list important: ordered automatically.workflow run tar_make().workflow now date tar_make() recompute anything.results read tar_read().","code":"\n# File _targets.R \nlibrary(\"targets\")\ntar_option_set(packages = c(\"spatstat\", \"dbmss\"))\nlist(\n  # Draw points\n  tar_target(X,\n    runifpoint(NbPoints)\n  ),\n  # Choose Parameters\n  tar_target(NbPoints,\n    1000\n  ),\n  # Average Distance\n  tar_target(d,\n    sum(pairdist(X)) / NbPoints / (NbPoints - 1)\n  ),\n  # Map\n  tar_target(map, \n    autoplot(as.wmppp(X))\n  )\n)\nlibrary(\"targets\")\ntar_visnetwork()\ntar_make()## ▶ dispatched target NbPoints\n## ● completed target NbPoints [0.644 seconds, 53 bytes]\n## ▶ dispatched target X\n## ● completed target X [0.002 seconds, 11.058 kilobytes]\n## ▶ dispatched target d\n## ● completed target d [0.007 seconds, 55 bytes]\n## ▶ dispatched target map\n## ● completed target map [0.013 seconds, 187.39 kilobytes]\n## ▶ ended pipeline [0.781 seconds]\ntar_visnetwork()\ntar_make()## ✔ skipped target NbPoints\n## ✔ skipped target X\n## ✔ skipped target d\n## ✔ skipped target map\n## ✔ skipped pipeline [0.043 seconds]\ntar_read(d)## [1] 0.5165293\ntar_read(map)"},{"path":"chap-utiliseR.html","id":"practical-interest","chapter":"2 Use R","heading":"2.8.3 Practical interest","text":"example, targets complicates writing code tar_make() much slower simply executing code processes check targets date.\nreal project requires long computations, processing status targets negligible time saved just evaluating necessary targets considerable.\ndefinition targets remains constraint, forces user structure project rigorously.","code":""},{"path":"chap-git.html","id":"chap-git","chapter":"3 Git and GitHub","heading":"3 Git and GitHub","text":"Source control consists recording modifications made tracked files.\nadvantages numerous: traceability security project, possibility collaborate efficiently, go back, try new developments without jeopardizing stable version…","code":""},{"path":"chap-git.html","id":"sec:principes-git","chapter":"3 Git and GitHub","heading":"3.1 Principles","text":"","code":""},{"path":"chap-git.html","id":"sec:git-cds","chapter":"3 Git and GitHub","heading":"3.1.1 Source control","text":"standard tool today git.git commands can executed RStudio terminal.\nFigure 3.1: Screenshot RStudio terminal. git status command, supposed describe state repository, returns error R project source control.\ngit status command (figure 3.1) returns status repository, , set data managed git track current project.RStudio integrates graphical interface git sufficient without command line standard use, presented .","code":""},{"path":"chap-git.html","id":"git-and-github-1","chapter":"3 Git and GitHub","heading":"3.1.2 git and GitHub","text":"git software installed workstation.GitHub web platform32, allows share content git repositories (work several people) share documentation form web site (GitHub Pages).GitHub allows least backup git repositories, two always used together.\nGitHub platform can used main one.\nAlternatives Bitbucket33 GitLab34 example.","code":""},{"path":"chap-git.html","id":"sec:creerdepot","chapter":"3 Git and GitHub","heading":"3.2 Create a new repository","text":"","code":""},{"path":"chap-git.html","id":"from-an-existing-project","chapter":"3 Git and GitHub","heading":"3.2.1 From an existing project","text":"existing R project, enable source control project options (figure 3.2).\ncommand executed git init.\nRestart RStudio demand.\nFigure 3.2: Activation source control menu “Tools > Project Options…”.\nnew Git window appears upper right panel.\ncontains list project files (figure 3.3).\nFigure 3.3: Project files, yet taken account git.\npoint, files taken account git: status double yellow question mark.\ngit, local working directory sandbox changes possible without consequences..gitignore file contains list files never intended taken account, need display list: automatically produced intermediate files example.\nsyntax .gitignore files detailed git35 documentation.\ngeneral rule, use existing file: document templates particular include .gitignore file.","code":""},{"path":"chap-git.html","id":"taking-files-into-account","chapter":"3 Git and GitHub","heading":"3.2.2 Taking files into account","text":"git window, checking Staged checkbox allows stage file.\ncommand executed git add <FileName>.\nFiles taken account first time status “” “Added”.files taken account part git index.","code":""},{"path":"chap-git.html","id":"committing-changes","chapter":"3 Git and GitHub","heading":"3.2.3 Committing changes","text":"\nFigure 3.4: Commit window.\nstaged files can validated (Committed) clicking “Commit” button Git window.\nnew window opens (figure 3.4), allows visualize modifications file (additions green, deletions red).\nmodification grain treated git text line, ended line break.\nBinary files images processed whole.commit comes description text.\nfirst line short description.\ndetailed description can added line break.\nreadability project history, commit corresponds action, corresponding short description: modified files necessarily taken account validated .\ncommand executed git commit -m \"Commit message\".\nFigure 3.5: Identification window.\nCommits linked author, must identified git.\nGenerally, git uses system information.\nsucceed, window asks user identify making first commit (figure 3.5).\ncommands shown executed RStudio terminal.\ncan also used check values known git:first commit, main branch repository, called “master”, created.\nbranch version repository, history therefore files.\nBranches allow:develop new features project, without disturbing main branch may contain stable version.\ndevelopment accepted, branch can merged master branch create new stable version.host files totally different main branch, purposes.\nGitHub, project’s web pages can placed branch called “gh-pages” never merged.git repository fully constituted.\ngit vocabulary, consists three trees (figure 3.6):working directory, sandbox, contains files staged: unknown, modified, deleted renamed (“Staged” box unchecked).index, contains files taken account (“Staged” box checked).head, contains validated files.\nFigure 3.6: git’s trees. Source: https://rogerdudler.github.io/git-guide/index.fr.html\nstatus files represented two icons RStudio Git window: two question marks git’s index.\n, icon right describes difference working directory index.\none left describes difference index head.\nmodified file M icon displayed right taken account, left taken account.\npossible, although better avoid , modify file taken account validated: , icons displayed.","code":"git config user.name\ngit config user.email"},{"path":"chap-git.html","id":"create-an-empty-repository-on-github","chapter":"3 Git and GitHub","heading":"3.2.4 Create an empty repository on GitHub","text":"\nFigure 3.7: Create repository GitHub.\nempty repository GitHub must created (figure 3.7):GitHub, click green “New repository” button.Enter name repository, identical local R project.Add description, appear GitHub page repository.Choose status repository:\nPublic: visible everyone.\nPrivate: visible project collaborators, excludes adding web pages.\nPublic: visible everyone.Private: visible project collaborators, excludes adding web pages.add README, .gitignore license: project must empty.Click “create Repository”.Copy address repository (https://github.com/… git@github.com:…).choice address linked authentication method.\nSSH authentication (see section 1.4.3) preferred.","code":""},{"path":"chap-git.html","id":"linking-git-and-github","chapter":"3 Git and GitHub","heading":"3.2.5 Linking git and GitHub","text":"RStudio, first commit must least taken place main branch project, named “master”, exist.\ntop right Git window (figure 3.3), shows “(branch)” .\ndisplayed “master”, default name main branch project.\nproject can linked GitHub repository.","code":""},{"path":"chap-git.html","id":"graphical-method","chapter":"3 Git and GitHub","heading":"3.2.5.1 Graphical method","text":"Click purple button next “master”: window appears (usually used creating new branch, see section 3.4).\nEnter name “master” branch, click “Add Remotes” complete:Remote Name: origin.Remote URL: paste address GitHub repository.Click “Add”.Check “Sync Remote” box.message indicating master branch already exists, click “Overwrite”.","code":""},{"path":"chap-git.html","id":"on-the-command-line","chapter":"3 Git and GitHub","heading":"3.2.5.2 On the command line","text":"Instead previous manipulation, link Git GitHub can set git commands executed RStudio terminal.\ndisplayed home page newly created empty repository GitHub can therefore copied pasted directly terminal.first command declares GitHub repository remote repository.\nname origin git convention.\ncan changed, organization project readable follows convention.\nrepository address https://github.com/<GitHubID>/<RepoID>.git HTTPS authentication chosen.following commands activate main branch project push content GitHub.careful name main branch (see section 3.4): default, called “master” project created RStudio “main” GitHub.\ncommand lines provided GitHub therefore replace master main must corrected match name branch created RStudio.","code":"git remote add origin git@github.com:<GitHubID>/<RepoID>.git\ngit branch -M master\ngit push -u origin master"},{"path":"chap-git.html","id":"authentication","chapter":"3 Git and GitHub","heading":"3.2.5.3 Authentication","text":"HTTPS authentication chosen, first time RStudio connects GitHub, window allows enter GitHub credentials (figure 3.8).\nFigure 3.8: Identification HTTPS sur GitHub.\nAugust 2021, GitHub longer accepts user’s account password authentication: personal token (PAT) created section 1.4.4 must entered instead.SSH authentication chosen configured git installation (section 1.4.3), action necessary.","code":""},{"path":"chap-git.html","id":"push-the-first-modifications","chapter":"3 Git and GitHub","heading":"3.2.6 Push the first modifications","text":"previous manipulation automatically pushed validated modifications GitHub.\nAfterwards, click “Push” button Git window .GitHub, files resulting modifications recorded git now visible.commit done locally counted git message “branch ahead ‘origin/master’ n commits” displayed top Git window indicates time update GitHub pushing commits.\nClick “Push” button .point, project README.md file presents contents GitHub.\nminimal content title lines description:advisable use badges36, placed just title, declare maturity status project, example:","code":"# Project name\n\nDescription in a few lines.\n![stability-wip](https://img.shields.io/badge/|>\nstability-work_in_progress-lightgrey.svg)"},{"path":"chap-git.html","id":"clone-a-repository-from-github","chapter":"3 Git and GitHub","heading":"3.2.7 Clone a repository from GitHub","text":"\nFigure 3.9: Cloning repository GitHub.\nrepository GitHub can installed (cloned) workstation copying address appears clicking green button (figure 3.9).RStudio, create new project , wizard, choose “Version Control”, “Git” paste address “Repository URL” field.\nname directory create project automatically deduced address.\nChoose directory project created click “Create Project”.\ncreated project linked remote repository GitHub.work several people project, project owner must give access project collaborators (figure 3.10), .e. GitHub users repository settings.\nFigure 3.10: Assigning access rights GitHub.\nCollaborators invited message sent GitHub.","code":""},{"path":"chap-git.html","id":"common-usage","chapter":"3 Git and GitHub","heading":"3.3 Common usage","text":"","code":""},{"path":"chap-git.html","id":"pull-modify-commit-push","chapter":"3 Git and GitHub","heading":"3.3.1 Pull, modify, commit, push","text":"work session project starts pulling (“Pull” button) Git window integrate local repository updates made GitHub collaborators.changes made project files taken account (check “Staged” boxes) committed explanatory message.\ngood practice validate changes time elementary task can described explanatory message completed rather making commits group many changes vague description.soon possible, Push updates visible collaborators.","code":""},{"path":"chap-git.html","id":"resolve-conflicts","chapter":"3 Git and GitHub","heading":"3.3.2 Resolve conflicts","text":"possible push validated changes collaborator modified remote repository GitHub.\ncase, pull local repository pushing merged changes.conflict occurs Pull imports change local file merged automatically conflicting change occurred locally.\nGit considers line indivisible: changing line remote repository local repository therefore generates conflict.Git inserts versions file containing conflict particular presentation:formatting lines containing <<<<, ==== >>>> must deleted one version problematic lines kept, can different two original versions.\nconflict resolution must taken account validated.limit conflicts document containing text (typically, R Markdown document), good practice treat sentence line, terminated line break visible formatted document: two line breaks required separate paragraphs.","code":"<<<<<<<<< HEAD # Imported version of the conflict\nLines in conflict, imported version\n========= # boundary between the two versions\nLines in conflict, local version\n>>>>>>>>> # End of conflict"},{"path":"chap-git.html","id":"see-the-differences","chapter":"3 Git and GitHub","heading":"3.3.3 See the differences","text":"RStudio Git window, context menu (displayed right-clicking) “Diff” can used display changes made file (figure 3.11).\nFigure 3.11: Differences working directory head.\n","code":""},{"path":"chap-git.html","id":"revert","chapter":"3 Git and GitHub","heading":"3.3.4 Revert","text":"contextual menu “Revert” allows undo modifications made file (displayed Diff) restore content validated last time (state head).easy go back beyond last validation modifications may taken account collaborators: deleting make project incoherent.","code":""},{"path":"chap-git.html","id":"view-history","chapter":"3 Git and GitHub","heading":"3.3.5 View history","text":"clock-shaped button RStudio Git window displays history project (figure 3.12).\nFigure 3.12: History commits repository.\ntop head, commits made .\nvalidation, differences file can displayed clicking file name lower part window.","code":""},{"path":"chap-git.html","id":"sec:branches","chapter":"3 Git and GitHub","heading":"3.4 Branches","text":"branches project different simultaneous versions.\ntypical use development new feature.\ntakes long time write, project disturbed current work progress: code may work anymore.\ndevelopment turns impossible useless, must abandoned without damage.\norder isolate development able validate abandon end, must placed branch.main branch project called “master” “main” November 202037.\nmust always stable state: one cloned GitHub possible users.change convention name “master” branch means November 2020, projects created GitHub cloned RStudio main branch “main” projects created RStudio linked GitHub keep “master” name.","code":""},{"path":"chap-git.html","id":"create-a-new-branch","chapter":"3 Git and GitHub","heading":"3.4.1 Create a new branch","text":"Click purple “New Branch” button RStudio git window.\nEnter name click “Create”.new branch now active.git commands can also run terminal (create branch activate ):","code":"git branch new_branch\ngit checkout new_branch"},{"path":"chap-git.html","id":"change-branch","chapter":"3 Git and GitHub","heading":"3.4.2 Change branch","text":"Select branch activate list local branches git window.commits apply active branch.\nbranch behaves different version project.Warning: avoid confusion, save changes, stage commit changing branch.","code":""},{"path":"chap-git.html","id":"pushing-the-new-branch","chapter":"3 Git and GitHub","heading":"3.4.3 Pushing the new branch","text":"first modifications new branch must pushed command line “Push” “Pull” buttons Git window work long branch exist remote repository.Run, terminal:","code":"git push -u origin new_branch"},{"path":"chap-git.html","id":"filesystem-behavior","chapter":"3 Git and GitHub","heading":"3.4.4 Filesystem behavior","text":"time branch changes, git rewrites project files reflect state branch.\nchanges can seen outside RStudio, file browser example.Files ignored .gitignore changed.\ntherefore essential .gitignore files different branches identical, otherwise files ignored one branch appear added displayed branch change.Development branches content close main branch.\ncase specialized branches seen later, gh-pages (see section 3.7) contains repository’s presentation web site.\nbest attempt display branches RStudio: content produced automatically modified manually.\nnecessary, necessary copy .gitignore file main branch keep mind ignored files actually belong another branch one displayed.","code":""},{"path":"chap-git.html","id":"merge-with-merge","chapter":"3 Git and GitHub","heading":"3.4.5 Merge with merge","text":"Merging development branch main branch marks achievement goal: code integrated project.\nRStudio’s GUI allow merging, use terminal: first, go target branch (possible GUI):, merge:situations, merge automatic (“Fast Forward”).\npossible conflicts appear: use git status command display list files concerned, open , resolve conflict perform commit.merged branch deleted: can used development deleted manually following command:","code":"git checkout mastergit merge new_branchgit branch -d new_branch"},{"path":"chap-git.html","id":"merging-with-a-pull-request","chapter":"3 Git and GitHub","heading":"3.4.6 Merging with a pull request","text":"way merging formal also general: allows merge branch another user’s repository contribute , branch validated another team member collaborative project.contribute another GitHub user’s project38, start creating fork , .e. copy form repository linked original.\npossible pull changes original stay date39 (opposed simple snapshot copy made downloading zip project) , end development, merge fork original repository (opposed clone allow contribute afterwards).Next, create development branch , modify finally ask repository owner merge .\nprocess described detail git documentation.simpler case branch one’s project case fork, development branch ready merged.\nmust pushed GitHub.\nGitHub page project, “Create Pull Request” button allows request merge.\nmessage describing proposed changes arguments must added.owner project (team members case collaborative project, team reduced one person) notified pull request.\noriginal project page, possible see message, list modifications (chronology commits comparison files), start discussion author request…\nrequest accepted, can closed.\nvalidated, “Merge Pull Request” button allows merge development branch “master” branch (another one) source project.Pull requests way contribute repository don’t write rights.\nalso way merge development branch project keeping explicit trace (Pull requests section project’s GitHub page).\ncollaborative project, proposals member (author request) can validated another (accepts merge).","code":""},{"path":"chap-git.html","id":"advanced-usage","chapter":"3 Git and GitHub","heading":"3.5 Advanced usage","text":"","code":""},{"path":"chap-git.html","id":"git-commands","chapter":"3 Git and GitHub","heading":"3.5.1 Git commands","text":"Beyond common use allowed RStudio graphical interface, advanced manipulations projects allowed using git command line.\nuseful examples presented .short guide commands proposed Roger Dudler40.\nsummarizes essential commands, thus integrated graphical interface RStudio.\nLinks complete references given bottom page.","code":""},{"path":"chap-git.html","id":"size-of-a-repository","chapter":"3 Git and GitHub","heading":"3.5.2 Size of a repository","text":"find much disk space repository occupies, use command git count-objects -vH41.data document time writing presented example.total size size line.\nPacks method used git reduce size repository: similar files stored common part differences.\nprune-packable line gives size objects stored individually packs.\nsize large, run git prune-packed reduce zero.size-garbage line gives size objects can deleted.\ngit gc removes , : optimizes storage., majority objects repository placed pack (size larger individual objects).usually need garbage collection manually: git handles organization repositories well.GitHub limits size repositories.\nMay 2020, limit 100 GB.\nsize repositories authenticated user can displayed account settings (“Personal Settings”, “Repositories”)42.","code":"$ git count-objects -v\ncount: 200\nsize: 2.66 MiB\nin-pack: 0\npacks: 0\nsize-pack: 0\nprune-packable: 0\ngarbage: 0\nsize-garbage: 0git gc\nEnumerating objects: 194, done.\nCounting objects: 100% (194/194), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (188/188), done.\nWriting objects: 100% (194/194), done.\nTotal 194 (delta 83), reused 0 (delta 0)\n\n$ git count-objects -vH\ncount: 1\nsize: 5.72 KiB\nin-pack: 194\npacks: 1\nsize-pack: 4.00 MiB\nprune-packable: 0\ngarbage: 0\nsize-garbage: 0 bytes"},{"path":"chap-git.html","id":"delete-a-folder","chapter":"3 Git and GitHub","heading":"3.5.3 Delete a folder","text":"changes made repository stored history.\ncan useful delete particular casesif file containing confidential information inadvertently committed.\nCommitting deletion remove history, confidential information remains visible consulting history.large files longer needed, e.g. PDF files produced R Markdown (chapter 4) binary (thus unsuitable git) reproducible code.Typically, docs folder used store documents produced R Markdown code.\nHTML PDF files must folder constitute GitHub pages project.\nmodification repository generates new version files whose history volume quickly becomes huge.\nefficient solution delegate creation files continuous integration system (chapter 6) remove docs folder main branch (master) repository.\ndelete history recover space occupies, can size repository.commands completely delete folder repository presented here43.\nrepository must clean, .e. without unvalidated changes, remote local versions synchronized.following three commands completely remove docs folder git repository history:docs folder removed working directory.\nmust therefore added .gitignore file longer tracked.\nmodification .gitignore must validated.\noperations can done RStudio interface command line:repository cleanup necessary physically remove removed data:Finally, repository must pushed.\n--force option involves replacing contents remote repository local repository: changes made collaborators erased, cleanup operation involves suspending development project takes place.code can used completely remove file folder repository simply replacing docs initial git filter-branch command.\nreduction repository size can tracked using git count-objects -vH operation, git gc (repository size remains stable moved garbage) end (repository size significantly reduced).","code":"git filter-branch --tree-filter \"rm -rf docs\" |>\n    --prune-empty HEAD\ngit for-each-ref --format=\"%(refname)\" refs/original/ |>\n    | xargs -n 1 git update-ref -decho docs/ >> .gitignore\ngit add .gitignore\ngit commit -m 'Removing docs folder from git history'git gcgit push origin master --force"},{"path":"chap-git.html","id":"revert-1","chapter":"3 Git and GitHub","heading":"3.5.4 Revert","text":"possible restore repository previous state placing head (figure 3.6) level old commit.\nsubsequent modifications destroyed.\noperation performed shared repository: users able push modifications anymore.Display repository history look identifier (SHA) last commit keep.\nRStudio terminal, run:repository history chosen restore point lost.less drastic method can used shared repository perform commit undoes another’s changes destroy history data.\noperation undoes one commit time, must repeated undo several, starting recent.\nRStudio terminal, run:undo last commit, execute:Using HEAD simply avoids searching corresponding ID.","code":"git reset --hard <SHA>\ngit push -fgit revert <SHA>git revert HEAD"},{"path":"chap-git.html","id":"sec:confidential","chapter":"3 Git and GitHub","heading":"3.6 Confidential data in a public repository","text":"public repository GitHub causes problems data used project .unsatisfactory solution include data project, makes non-reproducible.\nbetter solution encrypt , allowing users decrypt .\npurpose secret package.safe (vault folder) created project.\ncontains list authorized users: must pair encryption keys, public key included safe private key, kept secret.\ndata encrypted public keys available (therefore duplicated).\nusers use private key decryption.avoid duplicating data, repository owner create generic user project, whose private key communicate outside GitHub.\nvault contain keys project owner generic user .\ngeneric user’s private key compromised, sufficient remove vault create new one.","code":""},{"path":"chap-git.html","id":"generating-a-key-pair-for-the-project-owner","chapter":"3 Git and GitHub","heading":"3.6.1 Generating a key pair for the project owner","text":"keys generated ssh software, installed git default Linux.procedure section 1.4.3, key used must RSA format (supported secret package, opposed secure ed25519 format used authentication GitHub).Run following command RStudio terminal create RSA key:Store public key GitHub “Settings > SSH GPG Keys”.\nNote position key: authentication key already stored two workstations example, RSA key third one.","code":"ssh-keygen -t rsa -b 4096 -C \"user.email\""},{"path":"chap-git.html","id":"generating-a-key-pair-for-the-project","chapter":"3 Git and GitHub","heading":"3.6.2 Generating a key pair for the project","text":"Generate key RSA format RStudio terminal:Enter name key: <RepoID>.rsa.enter passphrase allow key used without interaction.private key <RepoID>.rsa distributed rightful owners project.\nmust therefore add line *.rsa .gitignore file project avoid pushing key GitHub.allow continuous integration project (chapter 6), private key must stored secret GitHub repository containing project.\nApply procedure section 6.2.2 create secret named “RSA” paste content file <RepoID>.rsa “Value” field form.use secret described section 6.2.2.","code":"ssh-keygen -t rsa -b 4096\" "},{"path":"chap-git.html","id":"creating-a-safe","chapter":"3 Git and GitHub","heading":"3.6.3 Creating a safe","text":"Execute:","code":"\nlibrary(\"secret\")\nvault <- \"vault\"\ncreate_vault(vault)"},{"path":"chap-git.html","id":"adding-users","chapter":"3 Git and GitHub","heading":"3.6.4 Adding users","text":"owner project added public key stored GitHub, third one example.generic project user’s key added :","code":"\n# GitHub ID of the project owner\ngithub_user <- \"EricMarcon\"\n# Read and store the key, i is the key number\nadd_github_user(github_user, vault = vault, i = 3)\nlibrary(\"openssl\")## Linking to: OpenSSL 3.2.2 4 Jun 2024\nproject_id <- \"ProjectName\"\n# Read the key\nrsa_project <- read_pubkey(paste0(project_id, \".rsa.pub\"))\n# Add to the vault\nadd_user(project_id, public_key = rsa_project, vault = vault)"},{"path":"chap-git.html","id":"storing-the-data","chapter":"3 Git and GitHub","heading":"3.6.5 Storing the data","text":"data, stored R variables, stored one one add_secret() function.\nfollowing example, variable called X equals 1.contents vault can checked:data read project code get_secret() command.\nprivate key generic project user, communicated secure means owners, must project folder.key can verified:","code":"\nX <- 1\nadd_secret(\n  # Name of the data\n  \"X\", \n  # Value\n  value = X, \n  # Authorized users: owner and generic\n  users = c(paste0(\"github-\", github_user), project_id), \n  # Vault\n  vault = vault)\n# List of vault data\nlist_secrets(vault = vault)##   secret        email\n## 1      X github-E....\n# List of owners of the data 'X\nlist_owners(\"X\", vault = vault)## [1] \"github-EricMarcon\" \"ProjectName\"\n# Select the private key\nSys.setenv(USER_KEY = usethis::proj_path(paste0(project_id, \".rsa\")))## ✔ Setting active project to\n##   \"/Users/runner/work/WorkingWithR/WorkingWithR\".\n# Read the data 'X\nget_secret(\"X\", vault = vault)## [1] 1\nlocal_key()## [4096-bit rsa private key]\n## md5: e81dcb0745a755286c2dc1fc4c6ad117\n## sha256: cca11ef82e17c3b77b699e7f3c23e083e8f0f79cb70be8274799f076c44b0c2d"},{"path":"chap-git.html","id":"sec:github-pages","chapter":"3 Git and GitHub","heading":"3.7 GitHub pages","text":"project GitHub must contained README.md file present .\nfile written Markdown format.file can placed docs folder provide repository’s home page website.\nmemoiR package provides commands automate tasks document projects.\nrepository containing article written R Markdown (see section 4.3.2) used example44.README.md file exists locations: written developer root project duplicated docs.","code":""},{"path":"chap-git.html","id":"activation","chapter":"3 Git and GitHub","heading":"3.7.1 Activation","text":"activate GitHub pages, open repository settings modify “GitHub Pages” item (“Options”).\nSelect project branch folder containing web pages, : master /docs.\noption, choosing theme customizes appearance pages.web site accessible address45 domain github.io.README.md file displayed home page different look content one displayed code repository page GitHub.interest GitHub pages allow easy access formatted documents repository contains written production documentation R packages.\ncontents presented next chapter.main website proposed GitHub account, https://GitHubID.github.io46.\nused host personal website produced blogdown.","code":""},{"path":"chap-git.html","id":"badges","chapter":"3 Git and GitHub","heading":"3.7.2 Badges","text":"Badges small images, possibly dynamically updated, provide quick information status project.\nplaced immediately title README.md file.good practice indicate progress life cycle project.\ncorresponding badges listed Tidyverse site47.Markdown code follows:usethis package simplifies creation placing necessary code clipboard.\njust paste file.","code":"![stability-wip]\n(https://img.shields.io/badge/lifecycle-maturing-blue.svg)\nusethis::use_lifecycle_badge(\"maturing\")"},{"path":"chap-rediger.html","id":"chap-rediger","chapter":"4 Writing","heading":"4 Writing","text":"R RStudio make possible efficiently write documents formats, simple notepads theses slide shows.\ntools subject chapter, completed production web sites (including personal site).Two document production processes available:R Markdown knitR bookdown packages.\nclassic method, presented detail.Quarto, designed used languages beyond R working environments beyond RStudio.\nQuarto active development yet allow documents produced quality R Markdown: example, punctuation French documents handled correctly PDF48, tables include equations49 width figures inconsistent PDF documents formatted several columns50.\nuse Quarto well documented site51 presented .","code":""},{"path":"chap-rediger.html","id":"markdown-notebook-r-notebook","chapter":"4 Writing","heading":"4.1 Markdown notebook (R Notebook)","text":".R file, code always commented make easier read.\nexplanation code requires several lines comment per line block code, time reverse logic place code text.concept literate programming developed Knuth (1984).\nconsists describing objectives methods text, code integrated.simplest tool Markdown notebook (Menu “File > New File > R Notebook”).\ndocument template contains instructions use.language formatting text Markdown52, easy use markup language:Paragraphs separated line breaks.document structured headings: line starts number # corresponding level.Character formats limited essentials: italic bold (text surrounded one two *).simple codes allow useful formatting.language core pandoc53 software, dedicated converting documents different formats.rmarkdown package (Xie 2015) bridges gap R Markdown, relying RStudio interface essential greatly simplifies use.\nMarkdown dialect used package called R Markdown.\nsyntax summarized cheat sheet54.\ncomplete documentation online (Xie, Allaire, Grolemund 2018).Equations written LaTeX format55.simplest organization R Markdown document can seen notepad template.\nstarts header YAML format56:first entry title, second output format: precisely name function process document.document contains Markdown formatted text code chunks surrounded three backquotes (Markdown syntax code block) language description, r.\ncode chunks processed knitr transforms result execution R code Markdown integrates text document.Processing R Markdown document called knitting.\nproduction chain follows:knitr processes code snippets: calculations, figure production.rmarkdown integrates production code text snippets produce standard Markdown file.pandoc (installed RStudio) converts file HTML, LaTeX Word format.LaTeX produces PDF file format requested.RStudio allows knitting started buttons rather commands: source window (top left one), “Knit” button accompanies R Markdown documents.\nR Markdown notebooks, replaced “Preview” button functions.\ncan scrolled choose output format: HTML, Word, PDF (via LaTeX) , notepads, “Preview” command displays document HTML without executing code snippets save time.\nsoon first knitting done Word HTML format, notice “Preview” button disappears.end, using R Markdown combines several advantages:Simplicity writing: raw text easier read format LaTeX example.Automation production: formatting layout fully automatic.Reproducibility: document can self-sufficient data. Re-knitting regenerates whole document, including necessary calculations production figures.also disadvantages:Formatting depends templates, developing new templates easy.Knitting errors sometimes difficult correct, especially occur LaTeX compilation stage.Reproducibility consumes computing time.\nlimit problem, cache system allows re-evaluate R code bits modification text.\nproduction large documents can also delegated continuous integration system (see chapter 6).","code":"---\ntitle: \"R Notebook\"\noutput: html_notebook\n---"},{"path":"chap-rediger.html","id":"r-markdown-templates","chapter":"4 Writing","heading":"4.2 R Markdown templates","text":"elaborate document templates notepad provided packages, including rmarkdown.\naccessible via menu “File > New File > R Markdown…” (figure 4.1).\nFigure 4.1: New Markdown document template.\nsimplest templates Document Presentation.\ninformation provided title name author, format expected document (can modified later).\ntemplates create single file need saved knitting.syntax notepad.\nheader, extra entry used date, can calculated R knitting:Replace vertical bars | example backquotes: since document written R Markdown, date calculated displayed instead code backquotes used directly.Inline R code (opposed code snippets) can used anywhere R Markdown document, including header date display.\nstarts backquote followed `r’ ends another backquote.Documents can knitted HTML, PDF (via LaTeX) Word format.\nheader R Markdown file rewritten knitting started RStudio button places current output format top list.Presentations can knitted two HTML formats, ioslide57 Slidy58, Beamer (PDF) format59 Powerpoint60.level 2 outline (##) marks change slide.Additional code, presented HTML format documentations, allows specific functionality.templates simple useful: R notepad easier use document template minimalist documents.\nelaborate templates available.","code":"date: \"|r format(Sys.Date(), '%d/%m/%Y')|\""},{"path":"chap-rediger.html","id":"articles-with-bookdown","chapter":"4 Writing","heading":"4.3 Articles with bookdown","text":"R Markdown allow write scientific article.\nBibliography problem handled pandoc HTML Word documents outsourced LaTeX PDF documents.\nEquations, figures tables numbered LaTeX HTML.\nCross-references (references figure number example) supported.\nFinally, figure table captions support plain text, without formatting.bookdown fills gaps.\npackage designed writing books several chapters can used articles.memoiR package provides templates shown .\nmust installed.","code":""},{"path":"chap-rediger.html","id":"writing","chapter":"4 Writing","heading":"4.3.1 Writing","text":"main features Markdown summarized .\nquick complete training offered RStudio61.text written without formatting line breaks.\nsimple line break effect document produced: allows separate sentences simplify tracking source code git.line break marks paragraph change.different levels plan designated number hashes beginning line: # level-1 title, ## level-2 title, etc.\nspace separates hashes title text.Bullet lists marked dash (followed space) beginning line.\ndouble line break required beginning list, elements list separated simple line break.\nIndented lists created inserting 4 spaces dash beginning line.\nLast, numbered lists created way replacing hyphens numbers, whose value important.text, italicized parts surrounded star underscore (*italic*), two stars mark bold.","code":""},{"path":"chap-rediger.html","id":"r-code","chapter":"4 Writing","heading":"4.3.1.1 R code","text":"R code included code chunks easily created clicking “Insert new code chunk” button source code window RStudio.\nstart end three backquotes new line.\ncode chunks can contain R code also Python code example: type code indicated header first line, name code chunk, comma-separated list options, example:name options optional: minimum header {r}.useful options :echo show (=TRUE) hide (=FALSE) code.message=FALSE hide opening messages packages.warning=FALSE hide warnings.default options declared code snippet named “Options” beginning Markdown document, opts_chunk$set() function.include=FALSE option removes display related code snippet.\ndocument scientific article, display code, used code snippets except produce figures.","code":"```{r cars, echo=TRUE}\n```"},{"path":"chap-rediger.html","id":"figures","chapter":"4 Writing","heading":"4.3.1.2 Figures","text":"\nFigure 4.2: Figure Title\nFigures can created R code (figure 4.2).\nBookdown, label associated figure: name fig:xxx xxx name R code snippet.\nReferences made command \\@ref(fig:xxx).header code snippet figure 4.2 :contains least name figure caption.\ncaption long, header readable.\nFurthermore, caption limited simple text.\nelaborate captions, possible declare caption separate paragraph begins text (ref:FigureName).\nFigure 4.3 benefits improved caption.\nFigure 4.3: Title italic, math (\\(\\sqrt\\pi\\)) reference figure 4.2\ntext fig.cap, “Title figure” previously, replaced (ref:pressure) within backquotes retained caption entered paragraph starting (ref:pressure) followed space.\nCaptions limited single paragraph.table figures used (option lof: true header), short caption required addition full caption.\ndeclared fig.scap.Figures created R come files integrated piece code include_graphics() function whose argument file containing image displayed.\nAlways place files images folder good organization.","code":"\nplot(pressure)```{r pressure, fig.cap=\"Caption of the figure\"}\n```"},{"path":"chap-rediger.html","id":"tables","chapter":"4 Writing","heading":"4.3.1.3 Tables","text":"horizontal - vertical | separators allow draw table according Markdown syntax, best method.Tables can also produced R code.\ncontent table dataframe.\nkbl function kableExtra package prepares table display passes result kable_styling function final formatting.\nTable 4.1: Table created kable\ncaption specified caption argument referencing possible table given label whose name tab: followed name code snippet (table 4.1).\nfigures, enhanced caption can written separate paragraph.\nshort caption possible list tables (option lot: true header) declared caption.short argument kbl().Always use booktabs = TRUE argument thickness separator lines optimal LaTeX.\nSince table contains mathematics (name first column), escape = FALSE option necessary.bootstrap_options = \"striped\" style option provides readable tables HTML.\nLast, full_width = FALSE option allows adjust width table content instead occupying whole available width.flextable package allows creating elaborate tables, following example displays long sepals color.Sepal LengthWidthPetal LengthWidthSpecies5.13.51.40.2setosa4.93.01.40.2setosa4.73.21.30.2setosa4.63.11.50.2setosa5.03.61.40.2setosa5.43.91.70.4setosaThe package documentation62 available online, well gallery63.flextable support caption numbering except Word documents.\nlimitation prohibitive.","code":"\nlibrary(\"tidyverse\")\nmy_iris <- head(iris)\nnames(my_iris) <- c(\"Sepal length ($l_s$)\", \"Width\", \"Petal length\",\n    \"Width\", \"Species\")\nkableExtra::kbl(my_iris, caption = \"Table created by kable\",\n    booktabs = TRUE, escape = FALSE) %>%\n    kableExtra::kable_styling(bootstrap_options = \"striped\",\n        full_width = FALSE)\nlibrary(\"flextable\")## \n## Attaching package: 'flextable'## The following objects are masked from 'package:spatstat.geom':\n## \n##     border, rotate## The following object is masked from 'package:purrr':\n## \n##     compose\n# iris dataset\niris %>%\n    # First lines\nhead() %>%\n    # Create a flextable object\nflextable() %>%\n    # Column titles\nset_header_labels(Sepal.Length = \"Sepal Length\", Sepal.Width = \"Width\",\n    Petal.Length = \"Petal Length\", Petal.Width = \"Width\", Species = \"Species\") %>%\n    # Select long sepals (>5) and display them in red\ncolor(~Sepal.Length > 5, ~Sepal.Length, color = \"red\")"},{"path":"chap-rediger.html","id":"maths","chapter":"4 Writing","heading":"4.3.1.4 Maths","text":"Equations LaTeX format can inserted inline, like \\(=\\pi r^2\\) (code: $=\\pi r^2$) new line ($ doubled) like \\[e^{\\pi} = -1.\\]can numbered: see equation (4.1), using \\equation environment.\\[\\begin{equation}\n  = \\pi r^2.\n  \\tag{4.1}\n\\end{equation}\\]numbered equation created following code:","code":"\\begin{equation}\n  A = \\pi r^2.\n  (\\#eq:disc)\n\\end{equation}"},{"path":"chap-rediger.html","id":"cross-references","chapter":"4 Writing","heading":"4.3.1.5 Cross-references","text":"Figures tables automatically generated label, identical name code snippet prefixed fig: tab:.equations, label added manually code (\\#eq:xxx) end equation.Sections can given label completing title {#yyy}.\nSections receive default implicit label64 corresponding text, lower case, special characters replaced dashes.\nImplicit labels unstable (change title section) difficult predict: advisable add explicit label section cross-referenced.\ncase chapters, name HMTL file produced identical label.\nChapter labels must follow file naming rules containing special characters.Bookmarks can also placed freely text command (ref:zzz).cases, call reference made command \\@ref(ref:zzz).","code":""},{"path":"chap-rediger.html","id":"bibliography","chapter":"4 Writing","heading":"4.3.1.6 Bibliography","text":"Bibliographic references BibTeX format must included .bib file declared header Markdown document.file can created maintained Zotero installed Better BibTeX extension (see section 1.6).\n, just create Zotero collection corresponding project drag relevant references .\nuse contextual menu “Export collection…” select:Format: “Better BibTeX” articles presentations “Better BibLaTeX” memoirs, depending whether bibliography managed BibTeX natbib biber BibLaTeX PDF production.Check “Keep date” box changes Zotero exported automatically.Click “OK” choose name file (references.bib) location (R project folder).references can called text, square brackets code [@Reference], text, removing brackets.bibliography handled pandoc producing Word HTML documents.\nbibliographic style can specified, adding linein document header copying .csl style file project folder.\nthousand styles available65.PDF documents, bibliography managed LaTeX.prepare submission manuscript journal, necessary open intermediate .tex file produced pandoc copy contents environment {document} template proposed journal, take care formatting.","code":"bibliography: references.bibcsl:nom_du_fichier.csl"},{"path":"chap-rediger.html","id":"languages","chapter":"4 Writing","heading":"4.3.1.7 Languages","text":"languages declared header documents produced memoiR templates.main language document modifies name certain elements, table contents.\nadditional languages allow creation multilingual documents.header fields :change language document managed LaTeX, HTML, inserting new line following command:current language effect LaTeX output: space added double punctuation French, size spaces larger beginning sentences English, etc.\n\\selectlanguage command simply ignored HTML.language names different header (IETF codes) text (language name).\ncorrespondence complete list languages can found table 3 package documentation polyglossia66.HTML formatting punctuation French documents possible using filter declared pandoc 67.\nfr-nbsp.lua file must copied project directory GitHub repository declared header Markdown document.filter formats punctuation document, whatever language: therefore used documents written entirely French.","code":"lang: fr-FR\notherlangs: [en-US, it]\\selectlanguage{english}output:\n    pandoc_args:\n      --lua-filter=en-nbsp.lua"},{"path":"chap-rediger.html","id":"sec:memo","chapter":"4 Writing","heading":"4.3.2 Simple Article template","text":"Simple Article template memoiR produces simple HTML document floating table contents (see example68).\nHTML formats available: see gallery69 package.\nPDF format close article model LaTeX (example70).template contains documentation.","code":""},{"path":"chap-rediger.html","id":"create","chapter":"4 Writing","heading":"4.3.2.1 Create","text":"Use menu “File > New File > R Markdown…” select “template” (figure 4.1).\nlist available templates package offers displayed.Select Simple Article template memoiR package, choose name project (“Name:”, name folder created, parent folder (“Location:”).\norganization proposed section 1.2.4, parent folder %LOCALAPPDATA%\\ProjectsR.\nproject name must contain special characters (accent, space…) ensure portability operating systems (Windows, Linux, MacOS).Advanced templates create folder many files (bibliography, styles, LaTeX template…), unlike simple templates create one file.folder created, example Simple Article template, make RStudio project: projects menu (top right RStudio window), use “New Project…” menu, “Existing Directory” select folder just created.","code":""},{"path":"chap-rediger.html","id":"write","chapter":"4 Writing","heading":"4.3.2.2 Write","text":"instructions using template contained text provided default.","code":""},{"path":"chap-rediger.html","id":"knit","chapter":"4 Writing","heading":"4.3.2.3 Knit","text":"document can knitted several formats:html_document2 HTML format template designed : notepad floating table contents.gitbook alternative HTML format, normally used books.downcute HTML format provided rmdformats package.pdf_book produces PDF document following LaTeX article template, commonly used directly LaTeX.word_document2 creates Word file.","code":""},{"path":"chap-rediger.html","id":"sec:article-en-ligne","chapter":"4 Writing","heading":"4.3.2.4 Publish","text":"memoiR package simplifies uploading produced documents web server.build_gitignore() function creates .gitignore file source control must enabled (see section 3.1.1).build_readme() function creates README.md file needed GitHub.\ncontains title project, summary links HTML PDF versions documents produced.project must linked GitHub repository (section 3.2).Two publication strategies possible.\nfirst one, documents knitted locally placed docs folder, support GitHub pages.\nsecond one, documents knitted GitHub Actions time modifications pushed repository: called continuous integration (section 6).local production strategy covered ; continuous integration covered section 6.3.1.build_githubpages() function places knitted documents (HTML PDF) docs folder, along copy README.md file.\nway, possible activate project’s GitHub pages (docs folder master branch).\nREADME.md file home page produced web site.practice, knit HTML format whole writing phase, production fast.\ndocument stabilized, knitted HTML PDF format.\nFinally, execution build_githubpages() places files produced docs.\nremains push repository GitHub activate GitHub pages.","code":""},{"path":"chap-rediger.html","id":"other-templates","chapter":"4 Writing","heading":"4.3.3 Other templates","text":"Stylish Article template memoiR intended production well-formatted PDF articles self-archiving (typically, HAL repository), A4 format double column71.HTML format Simple Article template.rticles package aims provide templates scientific journals accept article submission LaTeX.\noffers Markdown templates produce PDF files conforming requirements journals possibility recover intermediate .tex file (pandoc produces .tex file transmitted LaTeX compiler).\npackage allow HTML knitting uses LaTeX syntax R Markdown document instead using bookdown handle bibliographic cross references.\npossible directly exchange standard R Markdown content documents written rticles, limits interest package.","code":""},{"path":"chap-rediger.html","id":"beamer-presentation","chapter":"4 Writing","heading":"4.4 Beamer Presentation","text":"Beamer Presentation template memoiR allows create HTML PDF (beamer) presentations simultaneously, shown example72.approach identical articles package.\ntitle levels allow separating parts presentation (#) slides (##).\nTwo formats available HTML: ioslides73 Slidy74.\nspecificities code allow refine presentation slides, two-column display example: documented template.","code":""},{"path":"chap-rediger.html","id":"memoir","chapter":"4 Writing","heading":"4.5 memoir","text":"Memoir template memoiR package intended long documents, important difference previous documents: long document composed several chapters, placed .Rmd file.HTML format gitbook75, standard reading documents online.\nPDF format derived LaTeX memoir76 template, also optimized long documents.document written template.","code":""},{"path":"chap-rediger.html","id":"create-1","chapter":"4 Writing","heading":"4.5.1 Create","text":"Creating work project identical one presented : template : Memoir.\ncreated folder must turned project.Run build_git() build_readme(), enable source control push project GitHub, way article (section 4.3.2.4).chapter book Rmd file, whose name normally starts number (e.g.: 01-intro.Rmd).\nRmd files project folder actually treated chapters, sorted filename, including provided template (startup syntax) deleted except 99-references.Rmd contains bibliography, placed end.\nindex.Rmd file special: contains document header first chapter.","code":""},{"path":"chap-rediger.html","id":"write-1","chapter":"4 Writing","heading":"4.5.2 Write","text":"first chapter placed front matter printed book: numbered (hence {-} code next title) HTML version.\nmust end LaTeX command \\mainmatter marks beginning body book.outline levels start # chapters (one per file), ## sections, etc.","code":""},{"path":"chap-rediger.html","id":"knit-1","chapter":"4 Writing","heading":"4.5.3 Knit","text":"Compiling PDF done XeLaTeX, must installed.writing, strongly advised create HTML file, much faster LaTeX compilation.\nchapter can viewed quickly clicking “Knit” button source window.\nentire book created clicking “Build Book” button RStudio Build window.\nbutton’s drop-list allows create documents limit one format.files produced placed directly docs folder, used GitHub pages allow online reading downloading PDF.\nhome page website created bookdown index.Rmd file: README.md file duplicated docs.","code":""},{"path":"chap-rediger.html","id":"finishing","chapter":"4 Writing","heading":"4.5.4 Finishing","text":"layout done fully automatically pandoc (HTML) LaTeX (PDF).often useful help LaTeX solve margin overruns due large layout constraints: optimal readability, columns narrow, code (formatted text backquotes) allow hyphenation.line text protrudes right margin PDF document, solution manually add \\break code desired location line break R Markdown document.\ncommand effect HTML document forces hyphenation LaTeX.\nbreak formatted text (asterisks italics frequently backquotes code), must finish formatting \\break start afterwards.\nexample, force line break file.Rmd:HTML, space added two pieces code.R code snippets automatically formatted knitr tidy=TRUE option applied .\ndefault behavior specified knitr options, code snippet beginning index.Rmd file:maximum width line formatted code 55 characters, optimal template.\nSometimes automatic formatting work knitr find line break meets constraints, causing code overflow.\ncase, manually format code snippet adding tidy=FALSE option.literal code blocks, delimited three backquotes, must formatted manually, avoiding line longer 55 characters.","code":"The file `/path/`\\break`file.Rmd`\n# knitr options\nknitr::opts_chunk$set(\n  cache=TRUE, warning=FALSE, echo = TRUE,\n  fig.env='SCfigure', fig.asp=.75, \n  fig.align='center', out.width='80%', \n  tidy=TRUE, \n  tidy.opts=list(blank=FALSE, width.cutoff=55), \n    size=\"scriptsize\",\n  knitr.graphics.auto_pdf = TRUE)"},{"path":"chap-rediger.html","id":"gitbook-site","chapter":"4 Writing","heading":"4.5.5 Gitbook site","text":"website containing gitbook document must set _output.yml :title document appears top table contents.indication use GitHub bookdown displayed bottom table contents.GitHub button title bar allows open project repository.Another button allows download PDF document._output.yml file document following:sharing: section manages buttons title bar.\ndefault, links Facebook Twitter enabled one GitHub .\nwork, GitHub repository must declared header index.rmd file:toc: section contains two portions HTML code title document link GitHub repository must adapted project.Finally, download: section lists downloadable document formats displays download button title bar.","code":"bookdown::gitbook:\n  css: style.css\n  config:\n    sharing:\n      github: yes\n      facebook: false\n      twitter: false\n    toc:\n      before: |\n        <li><a href=\"./\">Working with R<\/a><\/li>\n      after: |\n        <li>\n          <a href=\"https://github.com/EricMarcon/WorkingWithR\" target=\"blank\">\n            Hosted on GitHub, published by bookdown\n          <\/a>\n        <\/li>\n    download: pdfgithub-repo: EricMarcon/WorkingWithR"},{"path":"chap-rediger.html","id":"sec:rediger-ouvrage-ci","chapter":"4 Writing","heading":"4.5.6 Continuous integration","text":"Building book takes time, especially contains calculations.\nmust launched gitbook format PDF format.\nproduction, can outsourced GitHub (chapter 6.3.1.1).","code":""},{"path":"chap-rediger.html","id":"google-analytics","chapter":"4 Writing","heading":"4.5.7 Google Analytics","text":"tracking book’s audience can entrusted Google Analytics.\n, create account add Google Analytics property, .e. website, data feed, web feed77.Google Analytics provides configuration script named gtag.js placed root project folder.\nFinally, declare script header web pages adding statement _output.yml, first section.","code":"bookdown::gitbook:\n  includes:\n    in_header: gtag.js"},{"path":"chap-rediger.html","id":"r-markdown-web-site","chapter":"4 Writing","heading":"4.6 R Markdown web site","text":"web site made pages written R Markdown (without bookdown features) menu can created easily, good result78.","code":""},{"path":"chap-rediger.html","id":"template","chapter":"4 Writing","heading":"4.6.1 Template","text":"RStudio, projects menu top right, click “New Project…” “New Directory” “Simple R Markdown website”.\nEnter name project, select folder project created clicking “Browse” finally click “Create Project”.default site contains two pages: index, home page, , “” page.\n_site.yml file contains name site contents navigation bar: title corresponding file.\npages added creating new .Rmd files adding _site.yml file.","code":""},{"path":"chap-rediger.html","id":"improvements","chapter":"4 Writing","heading":"4.6.2 Improvements","text":"site template can easily enhanced adding lines _site.yml:add GitHub icon navigation bar link site source code.choose method knitting, use bookdown instead rmarkdown.place site files docs folder thus separate code production.completed _site.yml file follows:GitHub icon part Font Awesome collection free icons79 usable syntax: “fa-name”.link corresponding icon must one website’s GitHub repository.syntax output section documents seen .\napplies pages (YAML header reduced minimum).\navailable themes rmarkdown80.highlight option specifies R code displayed formatted.\nLast, table contents floating, means position adjusts window scrolls.","code":"name: \"my-website\"\nnavbar:\n  title: \"My Website\"\n  left:\n    - text: \"Home\"\n      href: index.html\n    - text: \"About\"\n      href: about.html\n  right:\n    - icon: fa-github\n      href: https://github.com/rstudio/rmarkdown\noutput_dir: \"docs\"\noutput:\n  bookdown::html_document2:\n    theme: sandstone\n    highlight: tango\n    toc: true\n    toc_float: yes"},{"path":"chap-rediger.html","id":"source-control","chapter":"4 Writing","heading":"4.6.3 Source control","text":"project must put source control pushed GitHub (chapter 3).\n.gitignore file following:Enable GitHub pages (section 3.7) docs folder host site.\nAdd empty file named .nojekyll docs GitHub pages won’t try reformat site.\ncan use RStudio terminal run:","code":"# R\n.Rbuildignore\n.RData\n.Rhistory\n.Rprofile\n.Rproj.user\n\n# Web Site\n/_site/\n/*_cache/\n/*_files/touch docs/.nojekyll"},{"path":"chap-rediger.html","id":"sec:blogdown","chapter":"4 Writing","heading":"4.7 Personal web site: blogdown","text":"create personal web page, Hugo static site generator capable producing HTML pages Markdown code.\nStatic sites advantage, compared dynamic sites managed content management system (CMS, example: Wordpress, Joomla, SPIP), portable web server without database support code run server side (PHP) fast since pages created consultation.\nHugo site can hosted example personal page GitHub user.\naddress form “GitHubID.github.io”.Hugo offers many themes, templates site structure, Academic theme, intended researchers.\nRStudio, blogdown package provided easily produce web pages Hugo.\npages can contain R code: similar article, seen , whose content can easily copied pasted.\nuse solution, site like one proposed example81.structure website simple:home page, containing various customizable components author’s biography, selection publications, blog posts elements contact form.Pages detailing various elements (publications, posts, etc.) written R Markdown.","code":""},{"path":"chap-rediger.html","id":"installing-the-tools","chapter":"4 Writing","heading":"4.7.1 Installing the tools","text":"first step install blogdown package R.blogdown able install Hugo Windows, macOS Linux.full documentation blogdown available82.Recent versions Hugo use Go (programming language) install modules fly: Academic theme loaded GitHub time site creation.\nGo must therefore installed83.","code":"\ninstall.packages(\"blogdown\")\nblogdown::install_hugo()"},{"path":"chap-rediger.html","id":"create-2","chapter":"4 Writing","heading":"4.7.2 Create","text":"easiest way create repository GitHub template.\nstarter-academic84 repository page, click “Use template” button, optionally authenticate GitHub, enter name repository contain project, example “MySite”.repository can one main site GitHub account (see section 3.7), address https://GitHubID.github.io85.\nname enter simply “GitHubID.github.io” (GitHubID name GitHub account).Create repository.\nCopy repository address clicking “Code” button button right address (figure 4.4).\nFigure 4.4: Copy address repository clone GitHub.\nRStudio, create new project GitHub: projects menu top right, click “New Project…” “Version Control” “Git” paste address “Repository URL” field (figure 4.5).\nSelect folder project created clicking “Browse” finally click “Create Project”.\nFigure 4.5: Copy address repository clone GitHub.\ncreated project exact copy template, must customized.RStudio automatically adds line end .gitignore file ignore working files (.Rproj.user folder).\nAdd comment line indicate .\ncontent .gitignore follows:bug blogdown requires move file config.toml folder config/_default/ root project.Take account modifications git making commit.","code":"# R\n.Rbuildignore\n.RData\n.Rhistory\n.Rprofile\n.Rproj.user\n\n# Hugo\n/resources/\n/public/\n\n# blogdown\n/static/en/\n/static/fr/\n*.rmarkdown\n_index.html\nindex.html\n**/index_files/"},{"path":"chap-rediger.html","id":"building-the-site","chapter":"4 Writing","heading":"4.7.3 Building the site","text":"Runto build website, including future R Markdown pages.display site, run :appears RStudio Viewer window, can viewed system’s default web browser clicking enlarge button.modify content site, best stop web server command:site produced blogdown located public folder can copied directly web server host .\nsimple solution declare folder root GitHub pages project\n(section 3.7).\noptimal method use continuous integration (see section 6.3.2) copy root gh-pages branch declared location site GitHub.","code":"\nblogdown::build_site(build_rmd = TRUE)\nblogdown:::serve_site()\nblogdown:::stop_server()"},{"path":"chap-rediger.html","id":"multilingual-site","chapter":"4 Writing","heading":"4.7.4 Multilingual site","text":"site multilingual (say English French), content folder must copied folder corresponding language.\nfiles content/authors/admin/ must duplicated content/en/authors/admin/ content/fr/authors/admin/.\npractice, create en folder fr folder content.\nMove original content folder en copy fr.","code":""},{"path":"chap-rediger.html","id":"set-up","chapter":"4 Writing","heading":"4.7.5 Set up","text":"site configuration files well documented offer many options.\nmain ones reviewed quick creation working site.config.toml file contains general parameters site.\nlines updated site title (owner’s name since personal site) public address.\nexample site:also contains default language selection line (“en” “fr”) line allows place files produced Hugo language folder (“true” mandatory multilingual site):config/_default/ folder contains configuration files.languages.toml folder contains language settings menu translations.\nlanguage, version used content folder specified:additional languages, site title, date display settings menu translation added.\nsection [fr]:lines commented template must therefore uncommented removing # head line.menus described .params.toml describes look site.\noptions grouped topic, example “Theme” general appearance.\n“Basic Info”, lineselects personal site.\npossible use Academic scientific project site unit site, documented detail .\nmain differences , collective site:management authors: /contents/<language>/outside folder, one admin folder used personal site, whereas one folder per person needed collective site.component described , allows present persons, must activated.description site default language entered, search engines:must translated file languages.toml, language.“Site Features”, select coloring R code, activation formatting equations legal warning use cookies.edit_page line needs updated: replace default repository “https://github.com/gcushen/hugo-academic” site.“Contact details” contains contact information site owner.\nmust entered.“Regional Settings” contains date display settings default language (languages languages.toml).\nusually need changed.“Comments” allows enable visitor comments bottom pages, Disqus Comment.io (account required provider).\n“Marketing” allows activate tracking site traffic simply entering Google Analytics ID (created Google account).\n“Content Management System” contains line netlify_cms whose value must false site hosted Netlify.\nFinally “Icon Pack Extensions” allows activate Academicons icons necessary.","code":"title = \"Eric Marcon\"\nbaseurl = \"https://EricMarcon.github.io/\"defaultContentLanguage = \"en\"\ndefaultContentLanguageInSubdir = true[en]\n  languageCode = \"en-us\"\n  contentDir = \"content/en\"\n[fr]\n  languageCode = \"fr-fr\"\n  contentDir = \"content/fr\"[fr]\n  languageCode = \"fr-fr\"\n  contentDir = \"content/fr\"\n  title = \"Eric Marcon\"\n  description = \"Page personnelle d'Eric Marcon\"\n  [fr.params]\n    description = \"\"\n    date_format = \"02-Jan-2006\"\n    time_format = \"15:04\"\n  [[fr.menu.main]]\n    name = \"Accueil\"\n    url = \"#about\"\n    weight = 20\n(...)site_type = \"Person\"description = \"Eric Marcon's Homepage\"highlight_languages = [\"r\"] \nmath = true\nprivacy_pack = true"},{"path":"chap-rediger.html","id":"write-2","chapter":"4 Writing","heading":"4.7.6 Write","text":"Use online documentation86 complement main information detailed .\nexample used author’s personal site87.working method progress step step testing validate step:Make changes.Build site check result: blogdown:::serve_site().Stop site: blogdown::stop_server().result satisfactory, try .Commit changes.","code":""},{"path":"chap-rediger.html","id":"home-page","chapter":"4 Writing","heading":"4.7.6.1 Home page","text":"home page site made series elements (widgets) located /contents/<language>/home.\nelement described markdown file.\nfirst one index.md.\nusually modified.\ncontents follows:file contains TOML header, surrounded line +++.\ncomponent type indicates component page, components file fit.\nheadless = true means page header.\nFigure 4.6: Component demo Academic.\ndemo.md component (figure 4.6) “blank” component, .e. free text page: used present Academic Kickstart template must therefore disabled.\nheader contains formatting information (title, number columns, colors…) content page written markdown.\ncomponents appear ascending order weight header: 15 marks first component Academic template.\ncomponent can disabled deleting file changing active property header:\nFigure 4.7: component Academic.\nnext component .md (figure 4.7).\npresents owner site.\ntitle must localized.\n`/content/en/home’ folder, value :author must correspond folder /contents/<language>/authors.\nadmin fine personal site.\nAcademic allows team sites: configuration, one folder per person needed.\nimage displayed component avatar.jpg file placed folder.\nLimit size file performance site (less megabyte reasonable size), ensuring minimum size hundred pixels per side display quality.content component read _index.md file folder, contains information author.\norganization quite clear: modify content example provided.\nai type icons used, enable Academicons icon package config/_default/params.toml.\nFigure 4.8: skills component Academic.\nskills component (figure 4.8) presents author’s skills graphically.\ncollection icons available, new icons can added.\nFigure 4.9: experience component Academic.\naccomplishments component presents professional trainings allows access certificates.posts component fetches content folder contains blog posts, .e. /contents/<language>/post (see ).\nposts.md file contains layout options header.projects component works way.\ndifference two components formatting: posts “pages” type, displays recent items, projects “portfolio” type, displays selected items contain description featured: true header.\npossible create components types freely, specifying folder containing items page-type.\nExample: create component named software.md renaming projects.md, change page_type = \"software\" line create /contents/<language>/software folder place content .publications featured components type pages portfolio respectively take content publication folder.tags component presents word cloud keywords declared content files (blog posts, publications…) following form header:Last, contact component allows display contact form.\nuses information config/_default/params.toml file part starting :display map, enter latitude longitude address coordinates line.\ndisplay mail form, choose formspree.io service (email_form = 2 contact.md).\nactivate mail service, build web site, send first message using form follow instructions Formspree.people component used group sites present members.\nslider component used display carousel (scrolling elements) top page.\nunderstand works, easiest way activate .","code":"+++\n# Homepage\ntype = \"widget_page\"\nheadless = true  # Homepage is headless, other widget pages are not.\n+++active = false  # Activate this widget? true/falsetitle = \"Biography\"tags = [\"Keyword 1\", \"Other Keyword\"]############################\n## Contact details\n##"},{"path":"chap-rediger.html","id":"home-page-menu","chapter":"4 Writing","heading":"4.7.6.2 Home page menu","text":"home page menu allows navigate quickly components pages.\nset config/_default/menus.toml.\nMenu items displayed name, link (starting # point component relative path site publication/), weight defines display order, similar order components home page.two-element menu pointing site’s home page blog posts thus follows:file config/_default/languages.toml, menu must translated language :","code":"[[main]]\n  name = \"Home\"\n  url = \"#about\"\n  weight = 10\n\n[[main]]\n  name = \"Posts\"\n  url = \"#posts\"\n  weight = 20[fr]\n  [[fr.menu.main]]\n    name = \"Accueil\"\n    url = \"#about\"\n    weight = 10\n  [[fr.menu.main]]\n    name = \"Articles\"\n    url = \"#posts\"\n    weight = 20"},{"path":"chap-rediger.html","id":"posts","chapter":"4 Writing","heading":"4.7.6.3 Posts","text":"site powered blog posts placed /contents/<language>/post folder.\nmust translated placed post folder language available corresponding language.\nexample used guide correctly estimating density bounded variable 88.code GitHub89.post placed folder (/content/en/post/densite) contains Markdown R code possibly images, data feed code elements called code.\nHugo supports native markdown files.\ncontribution blogdown relative native Hugo site support R Markdown, thus possibility executing R code notepad (whose content can reused without modification).main file post index.Rmd.\nblogdown creates index.html file construction site: can ignored (.gitgnore) deleted time.\nfeatured.png (optimal graphic) featured.jpg (optimal photo) image placed folder, used thumbnail post.index.Rmd includes header yaml (surrounded ---) toml (surrounded +++) format describes display:Authors used collective sites.\nTags used feed word cloud component activated home page.\nCategories used search pages similar content (keyword search site).\nfeatured: true option makes post appear featured components home page.\ndraft: true option hides post.following elements specify display thumbnail: caption position.\npreview_only: true option limits display thumbnails (home page), thus removing image post .header elements needed Markdown body text, name file containing bibliographic references, placed folder, added.body text standard R Markdown document, R code included.\npiece initial code allows set R options load necessary packages.practice, efficient way create new post copy entire folder previous post, rename modify contents.\nblogdown::new_post() command can also used, handle multiple languages (creates post /contents/post folder unless specify subdir argument).Rebuilding site default update pages based .Rmd file.\n, must force build_site() command.","code":"---\ntitle: \"Title of the post\"\nsubtitle: \"Subtitle\"\nsummary: \"Summary\"\nauthors: []\ntags: [\"Keyword 1\", \"Other Keyword\"]\ncategories: []\ndate: 2020-04-17\nfeatured: false\ndraft: false\n\n# Featured image\n# To use, add an image named `featured.jpg/png` to \n# your page's folder.\n# Focal points: Smart, Center, TopLeft, Top, TopRight,\n# Left, Right, BottomLeft, Bottom, BottomRight.\nimage:\n  caption: \"\"\n  focal_point: \"\"\n  preview_only: false\n  \nbibliography: references.bib\n---\nblogdown::build_site(build_rmd = TRUE)\nblogdown::serve_site()"},{"path":"chap-rediger.html","id":"publications","chapter":"4 Writing","heading":"4.7.6.4 Publications","text":"Publications organized like posts, placed /contents/<language>/publications folder.example used journal article90 code91.cite.bib file containing reference BibTeX format placed folder.\nname folder preferably publication identifier.\nheader index.md file (Markdown format, .Rmd possible R code needed) contains information BibTex file, appropriate format (yaml), Academic-specific elements (featured):publication types :0 = Uncategorized.1 = Conference paper.2 = Journal article.3 = Preprint / Working Paper.4 = Report.5 = Book.6 = Book section.7 = Thesis.8 = Patent.Buttons displayed top publication page depending information found:PDF: url line present header.Citation: file cite.bib present folder.DOI: line doi present header.body publication contains link (HTML format) Dimension site provides bibliometric information.\nlink can reused simply, simply replacing DOI document:Finally, /contents/<language>/publications/_index.Rmd file used present complete bibliography.\naccessible publications component home page, displays Publications link.example file92 code93 allows query Google Scholar obtain co-author network, h-index number annual citations author.\ncan reused simply changing Google Scholar ID line 30.code run regularly, example GitHub (see ), displayed statistics kept date without human intervention.","code":"---\ntitle: \"Evaluating the geographic concentration of |>\nindustries using distance-based methods\"\nauthors: [\"Eric Marcon\", \"Florence Puech\"]\npublication_types: [\"2\"]\nabstract: \"We propose (...)\"\npublication: \"*Journal of Economic Geography*\"\ndoi: \"10.1093/jeg/lbg016\"\n\ndate: 2003-10-01\nfeatured: false\n---<span class=\"__dimensions_badge_embed__\" \n  data-doi=\"10.1093/jeg/lbg016\"><\/span>\n<script async src=\"https://badge.dimensions.ai/\n  badge.js\" charset=\"utf-8\"><\/script>"},{"path":"chap-rediger.html","id":"communications","chapter":"4 Writing","heading":"4.7.6.5 Communications","text":"Communications organized like publications, /contents/<language>/talk folder.example used communication French, /contents/en/talk94 code95.image can used easily publication.header contains special lines suitable communications:links (e.g. url_code) bring buttons display source code presentation, PDF file online slides respectively.","code":"---\ntitle: \"Construction of the Chao1 biodiversity estimator\"\nevent: \"Mathematics Week 2020\"\nevent_url: https://eduscol.education.fr/cid59178/|>\nsemaine-des-mathematiques.html\n\nlocation: University of French Guiana\n\nsummary: []\nabstract: |\n  To estimate the number of species (species richness) of a community \n  of a community from a sample, the Chao1 estimator is the sample, \n  the Chao1 estimator is the most commonly used tool.\n\n  Its construction is explained and its efficiency is tested on\n  is tested on simulated data.\n\n# Talk start and end times.\n#   End time can optionally be hidden by \n# prefixing the line with `#`.\ndate: \"2020-03-11T11:00:00Z\"\ndate_end: \"2020-03-11T12:00:00Z\"\nall_day: false\n\n# Schedule page publish date (NOT talk date).\npublishDate: \"2020-04-14\"\n\n# Is this a featured talk? (true/false)\nfeatured: false\n\nimage:\n  caption: 'Produit scalaire des vecteurs $v_0$ |>\net $v_2$'\n  focal_point: Smart\n\nurl_code: \"https://github.com/EricMarcon/Chao1\"\nurl_pdf: \"https://EricMarcon.github.io/Chao1/|>\nChao1.pdf\"\nurl_slides: \"https://EricMarcon.github.io/Chao1/|>\nChao1.html\"\n\n# Enable math on this page?\nmath: true\n---"},{"path":"chap-rediger.html","id":"other-elements","chapter":"4 Writing","heading":"4.7.6.6 Other elements","text":"possible freely add additional elements site:/contents/<language>/, create folder whose name type elements (example: recipe).Add items folder, folder.mandatory file index.md index.Rmd header possibly containing fields found post, publication talk items.thumbnail file, featured.png featured.jpg, optional.files needed knitting (images, data) can added folder./contents/<language>/home, add home page component copying pasting existing “pages” (like publications) “portfolio” (like featured) element set point right folder (example: page-type=recipe) adjust appearance (number elements example) position (weight).Optionally add menu entry point component, weight component.index files can extension .Rmd .md.\nfirst case, processed blogdown, supports R code integration.\ncase, processed Hugo, supports standard markdown format.\n.md files require less resources therefore preferred sufficient.","code":""},{"path":"chap-rediger.html","id":"polishing","chapter":"4 Writing","heading":"4.7.6.7 Polishing","text":"site icon, appears address bar web browsers, located assets/images.\nicon.png file can replaced.","code":""},{"path":"chap-rediger.html","id":"sec:rediger-web-ci","chapter":"4 Writing","heading":"4.7.7 Continuous integration","text":"construction website production can entrusted GitHub (section 6.3.2), including periodic update pages site deal data evolve time.","code":""},{"path":"chap-rediger.html","id":"updates-1","chapter":"4 Writing","heading":"4.7.8 Updates","text":"Academic theme updated regularly.\nversion used indicated go.mod file.\nuse latest official version, run following command R console:go.mod go.sum files, contain hash codes module files, updated.version change may require adaptations site content, referenced online documentation theme96.Update Hugo time:","code":"\nblogdown::hugo_cmd(\"mod get -u\")\nblogdown::update_hugo()"},{"path":"chap-rediger.html","id":"exporting-figures","chapter":"4 Writing","heading":"4.8 Exporting figures","text":"document production R Markdown possible, figures R must exported files integrated another writing process.\nbest create scripts create figures reproducible way optimal format.","code":""},{"path":"chap-rediger.html","id":"vector-and-raster-formats","chapter":"4 Writing","heading":"4.8.1 Vector and Raster Formats","text":"Figures generally produced vector format:SVG poster publication posters.EMF (Extended Meta-File) Word Microsoft Office suite support formats.EPS (Encapsulated PostScript) PDF (Portable Document Format) LaTeX.Raster figures (composed set points, like photographs) rare R.\nimage() function used display maps uses polygons rather points default.\nFigure 4.10 shows result following code:\nFigure 4.10: Maunga Whau volcano contours, code provided example image() function help.\ncomposed set colored rectangles: indeed vector image.necessary, images can produced BMP (bitmap, without compression), JPEG (compressed loss quality), PNG (compressed without loss quality, possible transparency) Tiff (compressed ) formats.","code":"\nx <- 10 * (1:nrow(volcano))\ny <- 10 * (1:ncol(volcano))\nimage(x, y, volcano, col = hcl.colors(100, \"terrain\"), axes = FALSE)\ncontour(x, y, volcano, levels = seq(90, 200, by = 5), add = TRUE,\n    col = \"brown\")\naxis(1, at = seq(100, 800, by = 100))\naxis(2, at = seq(100, 600, by = 100))\nbox()"},{"path":"chap-rediger.html","id":"functions","chapter":"4 Writing","heading":"4.8.2 Functions","text":"ggplots can saved file ggsave() function.\nextension file name sets format.\nSee help function details.graphics require another method.\npostscript() function produces EPS file.\nR code must call function create file, produce figure, close file, example:width height (inches) vector file important, ratio fixes aspect figure.\nsize texts fixed: increasing size figure means decreasing relative size texts: proceed successive attempts, making sure legends remain readable final size figure.horizontal argument sets orientation figure rather unpredictable way: proceed trials.functions eps(), pdf(), bmp(), jpeg(), png() tiff() work way.\nRefer function help choice options (resolution, compression level, etc.).\nemf() function provided devEMF package.Fonts included EPS PDF files.\nnecessary, embedFonts() function can used remedy , provided GhostScript installed.","code":"\n# Open the file\npostscript(\"Fig1.eps\", width = 6, height = 4, horizontal = FALSE)\n# Create the figure\nplot(cars)\n# Close the file\ndev.off()## pdf \n##   2"},{"path":"chap-rediger.html","id":"ragg-package","chapter":"4 Writing","heading":"4.8.3 ragg package","text":"ragg97 package improves quality PNG, JPEG TIFF files.\noptimized functions agg_png(), agg_jpeg() agg_tiff().\nusage grDevices functions.Markdown R documents produce PNG images HTML version.\nragg improves quality: package must installed dev = \"ragg_png\" must added knitr options.\ndocument, options declared index.Rmd following:Finally, ragg can used default graphics renderer RStudio starting version 1.4 (Menu “Tools > Global Options > General > Graphics > Backend”).","code":"\nknitr::opts_chunk$set(\n  cache=FALSE, # Cache chunk results\n  echo = TRUE, # Show/Hide R chunks\n  warning=FALSE, # Show/Hide warnings\n  # Figure alignment and size\n  fig.align='center', out.width='80%', fig.asp=.75,\n  # Graphic devices (ragg_png is better than standard png)\n  dev = c(\"ragg_png\", \"pdf\"),\n  # Code chunk format\n  tidy=TRUE, tidy.opts=list(blank=FALSE, width.cutoff=60),\n  size=\"scriptsize\", knitr.graphics.auto_pdf = TRUE\n  )\noptions(width=60)"},{"path":"chap-rediger.html","id":"sec:targetsmd","chapter":"4 Writing","heading":"4.9 Workflow","text":"workflow (see section 2.8) can embedded R Markdown document starting version 0.5 targets package.","code":"\nlibrary(\"targets\")"},{"path":"chap-rediger.html","id":"declaration-of-the-workflow","chapter":"4 Writing","heading":"4.9.1 Declaration of the workflow","text":"workflow managed code snippets type targets.\nminimal header targets instead {r}, must named.\ncode snippets used create _targets.R file run non-interactive mode, namely document knitted.\nrun interactive mode, example R Studio, code executed.\ntar_interactive = FALSE option header allows tested without knitting whole document.old workflow must removed writing new one:first code chunk, tar_globals=TRUE option, writes global options workflow\ncreate workflow shown section 2.8, code simply:functions used targets declared type code snippet: added file _targets_r working folder (different _targets folder contains target calculation files).","code":"\ntar_unscript()```{targets targets_global, tar_globals=TRUE}\n# Packages\ntar_option_set(packages = c(\"spatstat\", \"dbmss\"))\n```"},{"path":"chap-rediger.html","id":"declaration-of-targets","chapter":"4 Writing","heading":"4.9.2 Declaration of targets","text":"targets declared code snippets whose name destination variable.target requires piece code built way.\nvalue target last value returned, just like function use return().knitting, simplified code (tar_simple=TRUE) automatically transformed target code:document readability impaired particular syntax: targets useful documents whose code, quick execute, must displayed text.\nhand, code long execute displayed, considerable interest limit computation time.bits code needed complete flow following:NbPoints:d:map:","code":"```{targets X, tar_simple=TRUE}\nrunifpoint(NbPoints)\n```\ntar_target(X, {\n  runifpoint(NbPoints)\n})## Define target X from chunk code.\n## Establish _targets.R and _targets_r/targets/X.R.\ntar_target(NbPoints, {\n    1000\n})## Define target NbPoints from chunk code.\n## Establish _targets.R and _targets_r/targets/NbPoints.R.\ntar_target(d, {\n    sum(pairdist(X))/NbPoints/(NbPoints-1)\n})## Define target d from chunk code.\n## Establish _targets.R and _targets_r/targets/d.R.\ntar_target(map, {\n    autoplot(as.wmppp(X))\n})## Define target map from chunk code.\n## Establish _targets.R and _targets_r/targets/map.R."},{"path":"chap-rediger.html","id":"running-the-workflow","chapter":"4 Writing","heading":"4.9.3 Running the workflow","text":"start target calculation, standard piece code ({r}) must call tar_make():tar_visnetwork() used check workflow correct running .\ndocument finally produced, include=FALSE option can added header piece code produce output.","code":"\ntar_visnetwork()\ntar_make()## ▶ dispatched target NbPoints\n## ● completed target NbPoints [0.606 seconds, 53 bytes]\n## ▶ dispatched target X\n## ● completed target X [0.001 seconds, 11.058 kilobytes]\n## ▶ dispatched target d\n## ● completed target d [0.005 seconds, 55 bytes]\n## ▶ dispatched target map\n## ● completed target map [0.012 seconds, 187.39 kilobytes]\n## ▶ ended pipeline [0.708 seconds]"},{"path":"chap-rediger.html","id":"using-the-results","chapter":"4 Writing","heading":"4.9.4 Using the results","text":"Code snippets use target values must read tar_read():","code":"\ntar_read(map)"},{"path":"chap-rediger.html","id":"source-control-1","chapter":"4 Writing","heading":"4.9.5 Source control","text":"targets files must included source control.\nway, calculations done locally repeated GitHub Actions (chapter 6) building document fast.","code":""},{"path":"chap-package.html","id":"chap-package","chapter":"5 Package","heading":"5 Package","text":"R packages extend functionality code provided developer community.\nkey success R allow quickly spread new methods resulting research add new tools can become standards, tidyverse.useful produce package written new functions form coherent whole.\npackage personal use limited work team simple set time saved easily using updated version function quickly amortizes time spent making package.\ntype package intended hosted GitHub.Packages wider use, provide example code corresponding published method, placed CRAN repository, can installed standard command install.packages().\nCRAN performs extensive code checks accepts packages pass test suite without warning.\nmust respect policies98 repository.documentation package creation abundant.\nreference book Wickham (2015), consulted reference.approach used create first package quickly understand process quite simple.\nenriched elements necessary package distributed users designer: complete documentation tests correct operation particular.","code":""},{"path":"chap-package.html","id":"first-package","chapter":"5 Package","heading":"5.1 First package","text":"introduction follows recommendations blog Creating package minutes99 ThinkR.","code":""},{"path":"chap-package.html","id":"creation","chapter":"5 Package","heading":"5.1.1 Creation","text":"Packages strict organization fixed file directory structure.\npossible create structure manually specialized packages can :usethis automates creation folders.roxygen2 automates mandatory documentation packages.devtools developer’s toolbox, allowing build test packages.three installed first:package create RStudio project.\nproject menu, select “New Project > New Directory > R package using devtools…”, choose name project parent folder.\npackage called multiple, %LOCALAPPDATA%\\ProjectsR folder, following recommendations section 1.2.4.name package must respect constraints project names: special characters, spaces…\nmust also evocative purpose package.\npackage distributed, documentation written English, including name.minimal structure created:DESCRIPTION file indicates folder contains package specifies least name.NAMESPACE file declares package intervenes management names R objects (content updated roxygen2).R file contains code functions offered package (empty stage).package can tested right away: RStudio Build window, clicking “Install Restart” builds package loads R, restarting program avoid conflicts.Packages window, multiple now visible.\nloaded, contains nothing.","code":"\ninstall.packages(c(\"usethis\", \"roxygen2\", \"devtools\"))"},{"path":"chap-package.html","id":"first-function","chapter":"5 Package","heading":"5.1.2 First function","text":"","code":""},{"path":"chap-package.html","id":"files","chapter":"5 Package","heading":"5.1.2.1 Files","text":"Functions placed one .R files R folder.\norganization files free.\nexample, file name function created.\nFiles grouping similar functions single file containing code possible choices.choice made following:file contain code common whole package: package.R.One file common functions: functions.R.","code":""},{"path":"chap-package.html","id":"creation-1","chapter":"5 Package","heading":"5.1.2.2 Creation","text":"first function, double(), created stored functions.R file:point, function internal package accessible working environment.\nsure, build package (Install Restart) check function works:result vector composed two 0’s called function homonym base package (see documentation typing ?double):order function package visible, must exported declaring NAMESPACE file.\njob roxygen2 manages documentation function time.\nactivate , place cursor function call menu “Code > Insert Roxygen Skeleton”.\nComments added function:Comments roxygen2 begin #':first line contains title function, .e. short description: name general.next line (separated line break) may contain description (see Description help).next line (another line break) might contain information (Details help).arguments function described @param lines.@return describes result function.@export declares function exported: usable working environment.Examples can added.documentation must completed:Don’t hesitate use help existing functions respect R standards (: ?log):Keep mind functions normally vector: number default vector, scalar.elements start capital letter end dot paragraphs help file.title period.description parameters start capital letter.Taking account changes documentation requires calling roxygenize() function.\nBuild window, “> Document” menu allows .\nbuild package (Install Restart) check result running function displaying help:possible automate update documentation build package menu “Build > Configure Build Tools…”: click “Configure” check box “Automatically reoxygenize running Install Restart”.\nefficient choice small package penalizing time update documentation increases complexity package. package rebuild often used test code changes: speed essential.documentation roxygen2 supports Markdown100 format.stage, package functional: contains function beginning documentation.\ntime run check code: Build window, click “Check” use devtools::check() command.\noperation reoxygenates package (updates documentation), performs large number tests returns list errors, warnings notes detected.\ngoal always warnings: must handled immediately.\nexample, following return warning non-conformity declared license:correct , update, run update license command, starting name:list valid licenses provided R101.correction, run tests alerts disappear.","code":"\ndouble <- function(number) {\n    return(2 * number)\n}\ndouble(2)\nbase::double(2)## [1] 0 0\n#' Title\n#'\n#' @param number \n#'\n#' @return\n#' @export\n#'\n#' @examples\ndouble <- function(number) {\n    return(2 * number)\n}\n#' double\n#' \n#' Double value of numbers.\n#'\n#' Calculate the double values of numbers.\n#' \n#' @param number a numeric vector.\n#'\n#' @return A vector of the same length as `number` containing the \n#'   transformed values.\n#' @export\n#'\n#' @examples\n#' double(2)\n#' double(1:4)\ndouble <- function(number) {\n    return(2 * number)\n}\ndouble(2)\n?double> checking DESCRIPTION meta-information ... WARNING\n  Non-standard license specification:\n    `use_gpl3_license()`\n  Standardizable: FALSE\n\n0 errors v | 1 warning x | 0 notes v\nErreur : R CMD check found WARNINGs\noptions(usethis.full_name = \"Eric Marcon\")\nusethis::use_gpl3_license()"},{"path":"chap-package.html","id":"sec:package-cds","chapter":"5 Package","heading":"5.1.3 Source control","text":"time put code source control.Enable source control project options (figure 3.2).\nRestart RStudio demand.Create repository GitHub push local repository , explained chapter 3.Create file README.md:development package punctuated many commits modification push step, validated version number increment.","code":"# multiple\n\nAn R package to compute mutiple of numbers."},{"path":"chap-package.html","id":"package.r","chapter":"5 Package","heading":"5.1.4 package.R","text":"package.R file intended receive R code especially comments roxygen2 concern whole package.\nfile can also named multiple-package.R, prefixed package name, compatibility usethis.\ncan created name command:first comment block generate package help (?multiple).“_PACKAGE” keyword indicates package documentation must produced.\nwritten block, syntax identical functions, default content Description field DESCRIPTION file.\ninternal keyword hides package documentation help summary.documentation updated roxygen2::roxygenise() command.\nrebuilding package, check help appeared: ?multiple.","code":"\nusethis::use_package_doc()#' @keywords internal \n\"_PACKAGE\""},{"path":"chap-package.html","id":"package-organization","chapter":"5 Package","heading":"5.2 Package organization","text":"","code":""},{"path":"chap-package.html","id":"sec:package-description","chapter":"5 Package","heading":"5.2.1 DESCRIPTION file","text":"file must completed:package name fixed must changed.title must describe one line used .\ntitle displayed Packages window next package names.version must respect conventions:first number major version, 0 long package stable, 1.\nmajor version changes package longer compatible previous versions, forces users modify code.second minor version, incremented new features added.third correction version: 0 origin, incremented code correction without new functionality.fourth reserved development, starts 9000.\nincremented unstable version disappears new stable version (release) produced.Example: bug fix version 1.3.0 produces version 1.3.1.\nfollowing development versions (unstable, intended production use) 1.3.1.9000 1.3.1.9001, etc.\nversion number must updated time package pushed GitHub.\ndevelopment stabilized, new version, intended used production, 1.3.2 bring new functionality 1.4.0 opposite case.description authors rather heavy simple understand.\nOrcid identifiers academic authors can used.\npackage several authors, placed c() function: c(person(...), person(...)) two authors.\ncase, role must specified:“cre” creator package.“aut” one authors.“ctb” contributor, may reported bug provided code.description package one paragraph allows give information.license specifies package can used modified.\nGPL-3 good default, choices possible102.LazyData option means example data provided package can used without calling first data() function: current standard.Finally, last two lines handled roxygen2.","code":"Package: multiple\nTitle: Calculate multiples of numbers\nVersion: 0.0.0.9000\nAuthors@R: \n  person(given = \"Eric\",\n           family = \"Marcon\",\n           role = c(\"aut\", \"cre\"),\n           email = \"e.marcon@free.fr\",\n           comment = c(ORCID = \"0000-0002-5249-321X\"))\nDescription: Simple computation of multiples of numbers, \n  including fast algorithms for integers.\nLicense: GPL-3\nEncoding: UTF-8\nLazyData: true\nRoxygen: list(markdown = TRUE)\nRoxygenNote: 7.1.1"},{"path":"chap-package.html","id":"news.md-file","chapter":"5 Package","heading":"5.2.2 NEWS.md file","text":"NEWS.md file contains history package.\nNew versions added top file.Create first version file:first level titles must contain package name version.\nLevel 2 titles free, usually contain headings like “New features” “Bug Fixes”.avoid multiplying versions described, advisable change current version complete documentation correction version changes (third number).\n, entry corresponding version remains frozen new entry added.","code":"# multiple 0.0.0.9000\n\n## New features\n\n* Initial version of the package"},{"path":"chap-package.html","id":"vignette","chapter":"5 Package","heading":"5.3 Vignette","text":"vignette essential document package correctly:file multiple.Rmd created vignette folder.\nAdd subtitle header: short description package:rest header allows R build vignette R Markdown code.body vignette contains default R code declare options presenting code snippets loading package.\nintroduction use package written document, R Markdown.development package, vignette can built manually running:resulting files placed doc/: open .html file check result.RStudio create package vignette “Install Restart” command Build window called.\ncomplete installation, two solutions possible:Build package source file (“Build > > Build Source Package”) install (“Packages > Install > Install > Package Archive file”).\nsource file next project file.Push package code GitHub run:vignette can displayed command:","code":"\nusethis::use_vignette(\"multiple\")title: \"multiple\"\nsubtitle: \"Multiples of numbers\"\ndevtools::build_vignettes(\"multiple\")\nremotes::install_github(\"multiple\", build_vignettes = TRUE)\nvignette(\"multiple\")"},{"path":"chap-package.html","id":"pkgdown","chapter":"5 Package","heading":"5.4 pkgdown","text":"pkgdown package creates companion site package103, includes README.md file home page, vignette “Get Started” section, help files executed examples (“Reference” section), NEWS.md file history package (“Changelog” section), information DESCRIPTION file.Create site usethis:build site.\ncommand executed version change package:site placed docs folder.\nOpen file index.htm web browser view .\nsoon project pushed GitHub, activate repository pages site visible online (see section 3.7).pkgdown places site docs folder.Add address GitHub pages new line DESCRIPTION file:Also add _pkgdown.yml file created empty, along following option:pkgdown places site docs/dev folder site stable (three-numbered) version package exists docs current version development version (four-numbered).\nway, users production version package access site without disturbed development versions.site can enriched several ways:adding articles R Markdown format vignettes/articles folder.\nvignette require significant computational resources present examples built time package.\narticles generated pkgdown, independently, can therefore ambitious;improving presentation (grouping functions themes, adding badges, sticker104…): refer help pkgdown.enrich documentation package, possible use README.Rmd file R Markdown format, knitted create standard README.md GitHub, used home page pkgdown site, can way present examples use code.\napproach detailed R Packages105.\nadded complexity compared gain: simple homepage (without code) links vignette articles easier implement.","code":"\nusethis::use_pkgdown()\npkgdown::build_site()URL: https://GitHubID.github.io/multipleurl: https://GitHubID.github.io/multiple\n\ndevelopment:\n  mode: auto"},{"path":"chap-package.html","id":"package-specific-code","chapter":"5 Package","heading":"5.5 Package specific code","text":"","code":""},{"path":"chap-package.html","id":"importing-functions","chapter":"5 Package","heading":"5.5.1 Importing functions","text":"Let’s create new function functions.R adds random noise double value:\nnoise drawn centered normal distribution standard deviation sd added calculated value.rnorm() function stats package.\nEven though package systematically loaded R, package function belongs must declared: exceptions functions base package.stats package must first declared DESCRIPTION contains Imports: statement.\npackages used multiple code listed, separated commas.“import” simply means stats package must loaded, necessarily attached (see section 2.2), multiple work., rnorm() function must found multiple package environment.\nseveral ways fulfill requirement.\nFirst, following comment provided roxygen2:entire namespace stats package attached accessible multiple package.\ngood practice inreases risk name conflicts (see section 2.2).\nNote notion import used different DESCRIPTION, although name.best import rnorm() function declaring function documentation:ideal practice either origin function clear package code.best practice import nothing (sense roxygen2) systematically qualify functions packages syntax package::function().\nsolution chosen @importFrom directive import function whole multiple package, fuzzydouble() function, risk creating side effects (modifying behavior another function package assume import rnorm()).\nFinally, code function follows:","code":"\nfuzzydouble <- function(number, sd = 1) {\n    return(2 * number + rnorm(length(number), 0, sd))\n}Imports: stats\n#' @import stats\n#' @importFrom stats rnorm\n#' fuzzydouble\n#' \n#' Double value of numbers with an error\n#' \n#' Calculate the double values of numbers \n#' and add a random error to the result.\n#'\n#' @param number a numeric vector.\n#' @param sd the standard deviation of the Gaussian error added.\n#'\n#' @return A vector of the same length as `number`\n#'  containing the transformed values.\n#' @export\n#'\n#' @examples\n#' fuzzydouble(2)\n#' fuzzydouble(1:4)\nfuzzydouble <- function(number, sd = 1) {\n    return(2 * number + stats::rnorm(length(number), 0, sd))\n}"},{"path":"chap-package.html","id":"s3-methods","chapter":"5 Package","heading":"5.5.2 S3 methods","text":"S3 methods presented section 2.1.2.","code":""},{"path":"chap-package.html","id":"classes","chapter":"5 Package","heading":"5.5.2.1 Classes","text":"Objects belong classes:addition basic classes, developers can create others.","code":"\n# Class of a number\nclass(2)## [1] \"numeric\"\n# Class of a function\nclass(sum)## [1] \"function\""},{"path":"chap-package.html","id":"methods","chapter":"5 Package","heading":"5.5.2.2 Methods","text":"point creating new classes adapt existing methods , common case plot().\ngeneric method, .e. function template, without code, adapted class object processed.many variations plot R, functions names form plot.class().\nstats provides function plot.lm() create figure linear model.\nMany packages create classes tailored objects provide plot method class.\nfunctions can listed:Conversely, available methods class can displayed:print method used display object (implicit name object entered):summary method displays readable summary object:methods created specifically needs stats package.","code":"\nplot## function (x, y, ...) \n## UseMethod(\"plot\")\n## <bytecode: 0x1291827f0>\n## <environment: namespace:base>\n# Some functions plot()\nhead(methods(plot))## [1] \"plot,ANY-method\"   \"plot,color-method\"\n## [3] \"plot.AccumCurve\"   \"plot.acf\"         \n## [5] \"plot.ACF\"          \"plot.addvar\"\n# Total number\nlength(methods(plot))## [1] 155\nmethods(class = \"lm\")##  [1] add1           alias          anova         \n##  [4] as_flextable   case.names     coerce        \n##  [7] confint        cooks.distance deviance      \n## [10] dfbeta         dfbetas        drop1         \n## [13] dummy.coef     effects        extractAIC    \n## [16] family         formula        fortify       \n## [19] hatvalues      influence      initialize    \n## [22] kappa          labels         logLik        \n## [25] model.frame    model.matrix   nobs          \n## [28] plot           predict        print         \n## [31] proj           qqnorm         qr            \n## [34] residuals      response       rstandard     \n## [37] rstudent       show           simulate      \n## [40] slotsFromS3    summary        variable.names\n## [43] vcov          \n## see '?methods' for accessing help and source code\nmy_lm <- lm(dist ~ speed, data = cars)\n# Equivalent to '> my_lm'\nprint(my_lm)## \n## Call:\n## lm(formula = dist ~ speed, data = cars)\n## \n## Coefficients:\n## (Intercept)        speed  \n##     -17.579        3.932\nsummary(my_lm)## \n## Call:\n## lm(formula = dist ~ speed, data = cars)\n## \n## Residuals:\n##     Min      1Q  Median      3Q     Max \n## -29.069  -9.525  -2.272   9.215  43.201 \n## \n## Coefficients:\n##             Estimate Std. Error t value Pr(>|t|)    \n## (Intercept) -17.5791     6.7584  -2.601   0.0123 *  \n## speed         3.9324     0.4155   9.464 1.49e-12 ***\n## ---\n## Signif. codes:  \n## 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n## \n## Residual standard error: 15.38 on 48 degrees of freedom\n## Multiple R-squared:  0.6511, Adjusted R-squared:  0.6438 \n## F-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12"},{"path":"chap-package.html","id":"assigning-an-object-to-a-class","chapter":"5 Package","heading":"5.5.2.3 Assigning an object to a class","text":"order object belong class, sufficient declare :elegant way add new class set classes object already belongs:consistency check real structure object structure class declared elsewhere: developer must make sure methods find right data objects declare belong .\n, errors occur:","code":"\nx <- 1\nclass(x) <- \"MyClass\"\nclass(x)## [1] \"MyClass\"\ny <- 1\nclass(y) <- c(\"MyClass\", class(y))\nclass(y)## [1] \"MyClass\" \"numeric\"\nclass(y) <- \"lm\"\ntryCatch(print(y), error = function(e) print(e))## <simpleError in x$call: $ operator is invalid for atomic vectors>"},{"path":"chap-package.html","id":"in-practice","chapter":"5 Package","heading":"5.5.3 In practice","text":"","code":""},{"path":"chap-package.html","id":"creating-a-generic-method","chapter":"5 Package","heading":"5.5.3.1 Creating a generic method","text":"New generic methods can created declined according classes.example, let’s create generic method triple calculate triple numbers package multiple, declined two distinct functions: one integers one reals.\nCalculations integers faster reals, justifies (least theory) effort writing two versions code.generic method contains code beyond declaration.\nsignature (.e., set arguments) important functions derived method necessarily arguments order can add additional arguments ... (mandatory).\nnature first argument depend class object, usual call x.method declined two functions:integer version, x multiplied 3L, suffix L meaning 3 understood integer.\nreal version, 3 can written 3.0 make clear real.\nR, 3 without specification understood real.choice function depends class object passed argument.performance measurement microbenchmark package shows difference functions triple.integer() triple.numeric expected time spent computation negligible compared time spent calling function.\ngeneric method consumes much time simple calculations .\nR indeed tests existence functions corresponding class object passed argument generic methods.\nobject can belong several classes, searches function adapted first class, following classes successively.\nsearch takes lot time justifies use generic methods readability code rather performance: interest generic methods provide user code single function given objective (plot make figure) whatever data processed.","code":"\n# Generic Method\ntriple <- function(x, ...) {\n    UseMethod(\"triple\")\n}\ntriple.integer<- function (x, ...){\n  return(x * 3L)\n}\ntriple.numeric<- function (x, ...){\n  return(x * 3.0)\n}\n# Integer argument\nclass(2L)## [1] \"integer\"\n# Integer result by the function triple.integer\nclass(triple(2L))## [1] \"integer\"\n# Real argument\nclass(2)## [1] \"numeric\"\n# Real result by the function triple.numeric\nclass(triple(2))## [1] \"numeric\"\n# Performance\nmicrobenchmark::microbenchmark(triple.integer(2L), triple.numeric(2),\n    triple(2L))## Unit: nanoseconds\n##                expr min    lq     mean median  uq     max\n##  triple.integer(2L) 123 123.0   153.34    164 164     738\n##   triple.numeric(2) 123 123.0  7498.90    123 164  735294\n##          triple(2L) 533 553.5 12035.96    574 615 1143695\n##  neval\n##    100\n##    100\n##    100"},{"path":"chap-package.html","id":"creating-a-class","chapter":"5 Package","heading":"5.5.3.2 Creating a class","text":"package, classes created results functions justify : list structure identification class object (“lm” class linear models).\nclass created, print, summary plot methods (graphical representation possible) written.Let’s write function multiple() whose result object new class, multiple, list storing values multiply, multiplier result.call multiple() function returns object class multiple, also class list.\nabsence print.multiple() function, R looks print.list() function, exist, falls back print.default() function:print.multiple function must therefore written readable display, limited result:Details can presented summary function:Finally, plot function autoplot function complete set:technical reasons related unconventional evaluation tidyverse, variable names used aes() must prefixed .data$ packages rlang::.data must imported.\nOtherwise, package check returns note variables x y, used arguments aes() declared may exist local environment (see section 2.2).","code":"\nmultiple <- function(number, times = 1) {\n    # Calculate the multiples\n    y <- number * times\n    # Save in a list\n    result <- list(x = number, y = y, times = times)\n    # Set the class\n    class(result) <- c(\"multiple\", class(result))\n    return(result)\n}\n# Class of the result\nmy_multiple <- multiple(1:3, 2)\nclass(my_multiple)## [1] \"multiple\" \"list\"\nmy_multiple## $x\n## [1] 1 2 3\n## \n## $y\n## [1] 2 4 6\n## \n## $times\n## [1] 2\n## \n## attr(,\"class\")\n## [1] \"multiple\" \"list\"\nprint.multiple <- function(x, ...) {\n    print.default(x$y)\n}\n# New presentation\nmy_multiple## [1] 2 4 6\nsummary.multiple <- function(object, ...) {\n    print.default(object$x)\n    cat(\"multiplied by\", object$times, \"is:\\n\")\n    print.default(object$y)\n}\n# New display\nsummary(my_multiple)## [1] 1 2 3\n## multiplied by 2 is:\n## [1] 2 4 6\nplot.multiple <- function(x, y, ...) {\n  plot.default(y=x$y, x=x$x, type = \"p\", \n    main = paste(\"Multiplication by\", x$times), ...)\n}\n\nautoplot.multiple <- function(object, ...) {\n  data.frame(x = object$x, y = object$y) %>% \n    ggplot2::ggplot() +\n    ggplot2::geom_point(ggplot2::aes(x = .data$x, y = .data$y)) +\n    ggplot2::labs(title = paste(\"Multiplication by\", \n                                object$times))\n}\n\nplot(my_multiple)\nautoplot(my_multiple)"},{"path":"chap-package.html","id":"documentation","chapter":"5 Package","heading":"5.5.3.3 Documentation","text":"Generic methods functions declare must documented like function.Namespace management bit complex:Generic methods must exported:Functions derived generic methods exported declared methods, name generic method processed class.\nroxygen2 requires export directive added enforce () NAMESPACE file used R:Since version 3 roxygen2, declaration @method useless long function name unambiguously decomposable, like plot.multiple: @export sufficient.\nderived function name multiple dots, roxygen2 may automatically detect generic object @method must maintained.Since version 3 roxygen2, declaration @method useless long function name unambiguously decomposable, like plot.multiple: @export sufficient.\nderived function name multiple dots, roxygen2 may automatically detect generic object @method must maintained.Functions derived generic methods another package need import generic method, unless provided base (print provided base therefore affected):Functions derived generic methods another package need import generic method, unless provided base (print provided base therefore affected):generics imported way must re-exported directive placed example just code derived function:roxygen2 automatically creates help file reexports.Rd link original documentation re-exported generics.DESCRIPTION, original package generic must listed Imports: directive:Last, importing functions tidyverse also requires precautions:tidyverse package reserved interactive use R: way import DESCRIPTION dependencies may change lead unpredictable results.\nmagrittr package provides pipes, mainly %>%.\nrlang package provides .data object shown .\nmust imported DESCRIPTION.Since possible prefix %>% package name, function must imported using delimiters provided functions whose names contain special characters:Functions tidyverse use column names tibbles dataframes generate warnings package check time names confused undefined variable names.\navoid confusion, .data object rlang package helpful (example aes() seen ).\nmust imported:Finally, complete code follows:","code":"#' @export#' @method plot multiple\n#' @export#' @importFrom graphics plot\n#' @importFrom ggplot2 autoplot#' @export\ngraphics::plot\n\n#' @export\nggplot2::autoplotImports: ggplot2, graphicsImports: magrittr, rlang, stats\n#' @importFrom magrittr `%>%`\n#' @importFrom rlang .data\n#' Multiplication of a numeric vector\n#'\n#' @param number a numeric vector\n#' @param times a number to multiply\n#'\n#' @return an object of class `multiple`\n#' @export\n#'\n#' @examples\n#' multiple(1:2,3)\nmultiple <- function(number, times = 1) {\n  # Calculate the multiples\n  y <- number * times\n  # Save in a list\n  result <- list(x = number, y = y, times = times)\n  # Set the class\n  class(result) <- c(\"multiple\", class(result))\n  return(result)\n}\n\n#' Print objects of class multiple\n#'\n#' @param x an object of class `multiple`.\n#' @param ... further arguments passed to the generic method.\n#'\n#' @export\n#'\n#' @examples\n#' print(multiple(2,3))\nprint.multiple <- function(x, ...) {\n  print.default(x$y)\n}\n\n#' Summarize objects of class multiple\n#'\n#' @param object an object of class `multiple`.\n#' @param ... further arguments passed to the generic method.\n#'\n#' @export\n#'\n#' @examples\n#' summary(multiple(2,3))\nsummary.multiple <- function(object, ...) {\n  print.default(object$x)\n  cat(\"multiplied by\", object$times, \"is:\\n\")\n  print.default(object$y)\n}\n\n#' Plot objects of class multiple\n#'\n#' @param x a vector of numbers\n#' @param y a vector of multiplied numbers\n#' @param ... further arguments passed to the generic method.\n#'\n#' @importFrom graphics plot\n#' @export\n#'\n#' @examples\n#' plot(multiple(2,3))\nplot.multiple <- function(x, y, ...) {\n  plot.default(y=x$y, x=x$x, type = \"p\", \n               main = paste(\"Multiplication by\", x$times), ...)\n}\n#' @export\ngraphics::plot## function (x, y, ...) \n## UseMethod(\"plot\")\n## <bytecode: 0x1291827f0>\n## <environment: namespace:base>\n#' autoplot\n#'\n#' ggplot of the `multiple` objects.\n#'\n#' @param object an object of class `multiple`.\n#' @param ... ignored.\n#'\n#' @return a `ggplot` object\n#' @importFrom ggplot2 autoplot\n#' @importFrom magrittr `%>%`\n#' @importFrom rlang .data\n#' @export\n#'\n#' @examples\n#' autoplot(multiple(2,3))\nautoplot.multiple <- function(object, ...) {\n  data.frame(x = object$x, y = object$y) %>%\n    ggplot2::ggplot() +\n    ggplot2::geom_point(ggplot2::aes(x = .data$x, y = .data$y)) +\n    ggplot2::labs(title = paste(\"Multiplication by\", \n                                object$times))\n}\n#' @export\nggplot2::autoplot## function (object, ...) \n## {\n##     UseMethod(\"autoplot\")\n## }\n## <bytecode: 0x12b04bc80>\n## <environment: namespace:ggplot2>"},{"path":"chap-package.html","id":"c-code","chapter":"5 Package","heading":"5.5.4 C++ code","text":"use C++ code seen section 2.5.\nintegrate functions package, following rules must respected:.cpp files containing code placed /src folder project.code commented roxygen2 way R functions, C language comment marker:DESCRIPTION, import packages.\nRcpp, RcppParallel parallelized code used (delete references otherwise), must declared LinkingTo:Comments roxygen2 added package.R (“multiple” package name):C++ working files excluded source control .gitignore:changes partly done automatically, Rcpp , usethis, manual insertion code faster reliable: use command.Building package lead compiling code: Rtools therefore essential.","code":"#include <Rcpp.h>\nusing namespace Rcpp;\n\n//' timesTwo\n//'\n//' Calculates the double of a value.\n//'\n//' @param x A numeric vector.\n//' @export\n// [[Rcpp::export]]\nNumericVector timesTwo(NumericVector x) {\n  return x * 2;\n}Imports: Rcpp, RcppParallel\nLinkingTo: Rcpp, RcppParallel\n#' @importFrom Rcpp sourceCpp\n#' @importFrom RcppParallel RcppParallelLibs\n#' @useDynLib multiple, .registration = TRUE# C binaries\nsrc/*.o\nsrc/*.so\nsrc/*.dll\n# usethis::use_rcpp()"},{"path":"chap-package.html","id":"tidy-package","chapter":"5 Package","heading":"5.5.5 Tidy package","text":"modern package tidyverse compatible, requires little effort:allow pipelines, main argument functions first one.Functions transform data accept dataframe tibble first argument return object format.Methods plot() doubled methods autoplot() arguments produce graph ggplot2.","code":""},{"path":"chap-package.html","id":"bibliography-1","chapter":"5 Package","heading":"5.6 Bibliography","text":"documentation package uses bibliographic references.\ncan managed automatically Rdpack roxygen2.\nReferences used R Markdown files (vignette, site produced pkgdown) concerned.","code":""},{"path":"chap-package.html","id":"preparation","chapter":"5 Package","heading":"5.6.1 Preparation","text":"Bibliographic references must placed BibTeX file REFERENCES.bib placed inst folder.\nfolder contains files placed root package folder installed.Add following line DESCRIPTION:Also add package Rdpack list imported packages:Finally, import reprompt() function Rdpack adding following lines documentation roxygen2 package.R:","code":"RdMacros: RdpackImports: magrittr, stats, Rcpp, Rdpack\n#' @importFrom Rdpack reprompt"},{"path":"chap-package.html","id":"citations","chapter":"5 Package","heading":"5.6.2 Citations","text":"References cited command \\insertCite{key}{package} documentation roxygen2.\npackage name package REFERENCES.bib file searched: normally current package, references packages accessible, provided use Rdpack.key identifier reference file.\nfollowing example106 documentation divent package hosted GitHub, .R file:cited reference inst/REFERENCES.bib:Citations enclosed parentheses.\nplace author’s name outside parenthesis, add statement ;textual:cite several references (necessarily package), separate commas.end documentation object using citations, systematically add list references:","code":"\n#' divent\n#'\n#' Measures of Diversity and Entropy\n#' \n#' This package is a reboot of the **entropart** package \\insertCite{Marcon2014c}{divent}.\n#'\n#' @importFrom Rdpack reprompt\n#' \n#' @references\n#' \\insertAllCited{}\n\"_PACKAGE\"## [1] \"_PACKAGE\"@Article{Marcon2014c,\n  author  = {Marcon, Eric and Herault, Bruno},\n  title   = {entropart, an R Package to Partition \n             Diversity},\n  journal = {Journal of Statistical Software},\n  year    = {2015},\n  volume  = {67},\n  number  = {8},\n  pages   = {1--26},\n}\\insertCite{Marcon2014c;textual}{divent}\n#' @references\n#' \\insertAllCited{}"},{"path":"chap-package.html","id":"data","chapter":"5 Package","heading":"5.7 Data","text":"Data can embedded package, especially clarity examples.simplest method use usethis.\nCreate variables containing data saved save :.rda file created data folder variable created.\nLazyData option enabled DESCRIPTION, variables available soon package loaded, actually loaded memory used first time.variable must documented package.R file:name variable given quotes comment block (instead R code function).\n@format describes format data @source used indicate source.","code":"\nseq1_10 <- 1:10\nseq1_100 <- 1:100\nusethis::use_data(seq1_10, seq1_100)\n#' seq1_10\n#'\n#' A sequence of numbers from 1 to 10\n#'\n#' @format A numeric vector.\n#' @source Values computed by the R software, \n#'   \\url{https://www.r-project.org/}\n\"seq1_10\""},{"path":"chap-package.html","id":"unit-tests","chapter":"5 Package","heading":"5.8 Unit tests","text":"Ideally, code included package tested multiple ways:syntax errors: R’s checking procedures handle quite well.check conformity computation results expected values.occurrence errors users use code developer intended (incorrect arguments passed functions, inadequate data…).Unit tests used last two objectives.\nbased testthat integrated package:tests must added .R files whose names must begin test' thetests/testthat` folder.test (content file) starts context, .e. set tests. example, file test_double.R:tests contained files group topic, example test_double.R.\nname test passed argument function test_that():functions starting expect allow compare first argument result: example, result double(1:2) must 2 4 type vector must double precision real.\nlast test checks whether string passed argument generates error, optimal: package handled error, returned message tested.skip_on_cran() command, used systematically, avoids running tests CRAN package dropped : CRAN limited resources strictly limits time checking packages platform.\ntests therefore run GitHub, thanks continuous integration, see section 5.10.tests can launched “> Test package” menu Build window devtools::test() command.advisable write tests soon function package stabilized.","code":"\nusethis::use_testthat()## \n## Attaching package: 'testthat'## The following object is masked from 'package:targets':\n## \n##     matches## The following object is masked from 'package:dplyr':\n## \n##     matches## The following object is masked from 'package:purrr':\n## \n##     is_null## The following objects are masked from 'package:readr':\n## \n##     edition_get, local_edition## The following object is masked from 'package:tidyr':\n## \n##     matches\ncontext(\"function double\")\ntest_that(\"Double values are correct\", {\n    skip_on_cran()\n    x <- 1:2\n    # 2 x 2 should be 4\n    expect_equal(double(x), c(2, 4))\n    # The result should be a number (type = 'double')\n    expect_type(double(x), \"double\")\n    # Error management\n    expect_error(double(\"a\"))\n})## Test passed 🎊"},{"path":"chap-package.html","id":"gitignore-file","chapter":"5 Package","heading":"5.9 .gitignore file","text":".gitignore file obtained stage incomplete.\ncan replaced one:last line docs/ folder, receives web site produced pkgdown.\ncommented long production site done locally, uncommented entrusted GitHub Actions (see next section).","code":"# History files\n.Rhistory\n.Rapp.history\n# Session Data files\n.RData\n# Example code in package build process\n*-Ex.R\n# Output files from R CMD build\n/*.tar.gz\n# Output files from R CMD check\n/*.Rcheck/\n# RStudio files\n.Rproj.user/\n.Rprofile\n# knitr and R markdown default cache directories\n*_cache/\n/cache/\n# Temporary files created by R markdown\n*.utf8.md\n*.knit.md\n# C binaries\nsrc/*.o\nsrc/*.so\nsrc/*.dll\n/src-i386/\n/src-x64/\n# uncomment if pkgdown is run by CI\n# docs/"},{"path":"chap-package.html","id":"sec:package-ci5","chapter":"5 Package","heading":"5.10 Continuous integration","text":"package check must done step development, consumes considerable amount time.\ncan automated easily GitHub Actions service, triggered modification repository GitHub.\nanalysis code coverage tests (parts code tested ) added.GitHub also able rebuild package documentation pkgdown, another resource-consuming operation, tests passed.Section 6.3.3 details .","code":""},{"path":"chap-package.html","id":"sec:package-cran","chapter":"5 Package","heading":"5.11 CRAN","text":"Packages audience beyond author’s circle can uploaded CRAN.\nrules respect CRAN numerous107. checked R CMD check command -- .cran option.\ncheck must return errors, warnings, notes submitting package.","code":""},{"path":"chap-package.html","id":"testing-the-package","chapter":"5 Package","heading":"5.11.1 Testing the package","text":"Verification package GitHub part continuous integration sufficient.\npackage must tested development version R.\nR-hub builder108 site allows easily.package, must development version (limited three numbers, see section 5.2.1), must built source format: Build window RStudio, click “> Build Source Package”.\nR-hub builder site, click “Advanced”, select package source file test platform: Debian Linux, R-devel, GCC.rhub package allows use verification platform R-hub builder site RStudio.\nfirst step validate email address validate_email() command.\n, just call check_for_cran() function run full verification.","code":""},{"path":"chap-package.html","id":"submission","chapter":"5 Package","heading":"5.11.2 Submission","text":"package ready, submission CRAN done dedicated web site109.case rejection, process requests resubmit incrementing version number.","code":""},{"path":"chap-package.html","id":"maintenance","chapter":"5 Package","heading":"5.11.3 Maintenance","text":"Requests corrections sent CRAN time time, especially version R changes.\nemail address package maintainer must remain valid requests must processed quickly.\nOtherwise, package archived.New versions package submitted way first one.","code":""},{"path":"chap-ci.html","id":"chap-ci","chapter":"6 Continuous integration","heading":"6 Continuous integration","text":"Continuous integration process assigning external service verify package, produce Markdown documents web pages GitHub repository, completely knit website code.tasks can done locally desktop time consuming may repeated update.\ncontext continuous integration, systematically performed, transparent way user.\ncase failure, alert message sent.implementation continuous integration justified heavy projects, regular updates.\nrather projects containing simple Markdown document rarely modified.","code":""},{"path":"chap-ci.html","id":"tools","chapter":"6 Continuous integration","heading":"6.1 Tools","text":"","code":""},{"path":"chap-ci.html","id":"github-actions","chapter":"6 Continuous integration","heading":"6.1.1 GitHub Actions","text":"frequently used tool R projects filed GitHub Travis CI110 service became fee-based 2021.GitHub Shares good replacement Travis.\nservice integrated GitHub.","code":""},{"path":"chap-ci.html","id":"codecov","chapter":"6 Continuous integration","heading":"6.1.2 Codecov","text":"evaluate code coverage rate R packages, .e. proportion code tested way (examples, unit tests, vignette), Codecov111 service integrates perfectly GitHub.need open account, preferably authenticating GitHub.","code":""},{"path":"chap-ci.html","id":"github-pages","chapter":"6 Continuous integration","heading":"6.1.3 GitHub Pages","text":"GitHub web pages can hosted docs directory master branch project: solution chosen produced workstation.produced continuous integration, hosted dedicated branch called gh-pages.","code":""},{"path":"chap-ci.html","id":"principles","chapter":"6 Continuous integration","heading":"6.2 Principles","text":"production document treated example.\nobjective GitHub knit Markdown project.\npractice appropriate book projects, require lot resources construction.\ntype project, code knit knitr produce several documents, typically HTML PDF formats, accessible GitHub pages.\ndocuments produced locally, placed docs folder pushed GitHub.order GitHub , settings required.","code":""},{"path":"chap-ci.html","id":"getting-a-personal-access-token","chapter":"6 Continuous integration","heading":"6.2.1 Getting a personal access token","text":"write GitHub, continuous integration service authenticate Personal Access Token (PAT) whose creation described section 1.4.4.Generate new token, describe “GitHub Actions” give following authorizations:“repo”, .e. modify repositories (possible limit access particular repository).“workflow”, .e. run continuous integration scripts.","code":""},{"path":"chap-ci.html","id":"sec:secrets-ci","chapter":"6 Continuous integration","heading":"6.2.2 Project secrets","text":"GitHub, display project settings select “Secrets”.\n“New Repository Secret” button allows store variables used GitHub Actions scripts (publicly visible) without exposing value.\npersonal access token essential GitHub Actions write production project.\nCreate secret named “GH_PAT” enter previously saved token value.\nclicking “Add Secret”, token read anymore.allow sending success failure messages without exposing email address, create secret named “EMAIL” contains .","code":""},{"path":"chap-ci.html","id":"activation-of-the-repository-on-codecov","chapter":"6 Continuous integration","heading":"6.2.3 Activation of the repository on CodeCov","text":"analysis code coverage packages useful detect untested code portions.\nhand, analysis coverage document projects useful.activate repository, need authenticate CodeCov website GitHub account.\nlist repositories displayed can updated.\nrepositories processed hosted organization, example repositories GitHub classroom, update list organizations following instructions (link allows quickly modify GitHub options authorize Codecov read data organization) update list repositories .\nFinally, repository looking visible, activate .\nIgnore Codecov’s token system.","code":""},{"path":"chap-ci.html","id":"scripting-github-actions","chapter":"6 Continuous integration","heading":"6.2.4 Scripting GitHub actions","text":"GitHub workflow succession jobs steps.\nworkflow triggered event, usually every push project, also regular intervals (cron).Typically, workflows created contain two jobs: first one installs R necessary components executes R scripts (constitute successive steps); second one publishes obtained files GitHub pages.workflows configured YAML file placed .github/workflows/ folder project.\ndifferent parts script presented .\nfull script document, accessible GitHub112.","code":""},{"path":"chap-ci.html","id":"sec:declenchement","chapter":"6 Continuous integration","heading":"6.2.4.1 Trigger","text":"action triggered whenever updates pushed GitHub:branch taken account master (replaced main necessary).trigger action periodically, use syntax cron (Unix job scheduling system):successive values minutes, hours, day (day month), month day week (0 Sunday 6 Saturday).\n* allow ignore value.push schedule entries can used together:Currently, scheduling taken account master branch.","code":"on:\n  push:\n     branches:\n       - masteron:\n  schedule:\n    - cron: '0 22 * * 0' # every sunday at 22:00on:\n  push:\n     branches:\n       - master\n  schedule:\n    - cron: '0 22 * * 0'"},{"path":"chap-ci.html","id":"workflow-name","chapter":"6 Continuous integration","heading":"6.2.4.2 Workflow name","text":"name workflow free.\ndisplayed badge added project’s README.md file (see section 6.4).","code":"name: bookdown"},{"path":"chap-ci.html","id":"first-job","chapter":"6 Continuous integration","heading":"6.2.4.3 First job","text":"jobs described jobs section.\nrenderbook name first job: free.\n, main action produce bookdown render_book() function, hence name.runs-statement describes operating system job run.\npossible choices Windows, Ubuntu MacOS113.\nContinuous integration R GitHub usually uses MacOS advantage using compiled R packages much simpler (packages require libraries outside R compilation) quicker install, allowing use scripts.","code":"jobs:\n  renderbook:\n    runs-on: macOS-latest"},{"path":"chap-ci.html","id":"first-steps","chapter":"6 Continuous integration","heading":"6.2.4.4 First steps","text":"steps described steps section.step described name (free) .strength GitHub Actions allow use actions written people stored public GitHub project.\naction script metadata describing use.\ndevelopment accompanied successive version numbers.\naction called statement uses:, GitHub project contains version.respective GitHub project, actions exist development version (@master) step versions (release) accessible number (@v1).\nstage versions preferable stable.General actions made available GitHub GitHub Actions organization114.\n“actions/checkout” action used get main branch project processed workflow: usually first step workflows.next action installation R, provided R infrastructure organization115.installation pandoc (software external R necessary R Markdown) can done command executed MacOS.\ncalled run: can contain several lines (hence |).\nscript depends operating system: brew package manager MacOS.\navoid system specifics, better use action:often possible choose calling action writing corresponding code.\nchoice made favour actions everything system, installing software, use scripts R commands, checking packages.\naim control R code precisely limit dependencies additional packages.\nopposite strategy developed Wickham Bryan (2023) relies entirely actions perform R tasks.","code":"    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v4\n      - name: Setup R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        run: |\n          brew install pandoc      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2"},{"path":"chap-ci.html","id":"sec:packages-ci","chapter":"6 Continuous integration","heading":"6.2.4.5 Packages","text":"step uses Rscript command environment, allows execute R commands directly.packages used produce document listed:remotes install_deps() function.bookdown knitting.formatR formatting code snippets (tidy=TRUE).tinytex LaTeX distribution.packages, used project, read DESCRIPTION file install_deps() function.MacOS, packages installed default binary version, source code recent.\ncreation binary packages takes days CRAN: situation rare.\nPackages containing R code C++ code without reference external libraries can installed without problems.\nhand, package requires libraries external R compilation Fortran code, installation fails.\ntherefore necessary install necessary libraries (possibly Fortran compiler) packages project depends: solution realistic implies inventory dependencies, may change, large number time-consuming useless installations time, binary packages date.\nbetter solution force installation binary packages even source code newer: purpose two R options defined calling install.packages().Finally, secret GH_PAT passed R environment variable, GITHUB_PAT, necessary install packages source code GitHub.\nGitHub limits rate anonymous access GitHub actions (accounts) may reject request: practice, using install_github() GitHub action possible environment variable.","code":"      - name: Install packages\n        env:\n          GITHUB_PAT: ${{ secrets.GH_PAT }}\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"remotes\", \"bookdown\", \"formatR\", \"tinytex\"))\n          tinytex::install_tinytex(bundle = \"TinyTeX\")\n          remotes::install_deps(dependencies = TRUE)\n        shell: Rscript {0}"},{"path":"chap-ci.html","id":"knitting","chapter":"6 Continuous integration","heading":"6.2.4.6 Knitting","text":"production document started R command.parameters declared _output.yml used.PDF file must produced GitBook format order download link added menu bar GitBook site.\nhand, R must closed reopened two renderings otherwise tables created correctly GitBook116.\ntwo steps combined one.","code":"      - name: Render pdf book\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::pdf_book\")\n        shell: Rscript {0}\n      - name: Render gitbook\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::gitbook\")\n        shell: Rscript {0}"},{"path":"chap-ci.html","id":"backup","chapter":"6 Continuous integration","heading":"6.2.4.7 Backup","text":"result knitting, placed docs folder virtual machine charge continuous integration, must preserved next job can use .last step production job uses upload-artifact action .content docs saved artifact named “_book”.\nArtifacts publicly visible GitHub Project Actions page.last step, virtual machine destroyed.","code":"      - name: Upload artifact\n        uses: actions/upload-artifact@v4\n        with:\n          name: _book\n          path: docs/"},{"path":"chap-ci.html","id":"publication","chapter":"6 Continuous integration","heading":"6.2.4.8 Publication","text":"Publishing artifact gh-pages branch project requires another job.job named “deploy” (name free).\nruns virtual machine Ubuntu.\ncan launched “renderbook” job succeeded.\nsteps following:Download artifact: Restore docs folder;Deploy GitHub Pages: copy docs folder gh-pages branch.last step uses GitHub-Pages-deploy action provided Cecilapp organization.\nuses environment variable, GITHUB_TOKEN, authenticate parameters:email: email address run report sent.\navoid exposing address publicly, stored project secret.buid_dir: directory publish.jekyll:create empty file named .nojekyll tells GitHub pages try treat content Jekyll website.GITHUB_TOKENis authentication token provided Github Actions execution script. rights assigned script thepermission` entry: , right write content project.","code":"  deploy:\n    runs-on: ubuntu-latest\n    needs: renderbook\n    permissions:\n      contents: write\n    steps:\n      - name: Download artifact\n        uses: actions/download-artifact@v4\n        with:\n          # Artifact name\n          name: _book\n          # Destination path\n          path: docs\n      - name: Deploy to GitHub Pages\n        uses: Cecilapp/GitHub-Pages-deploy@v3\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          email: ${{ secrets.EMAIL }}\n          build_dir: docs\n          jekyll: no"},{"path":"chap-ci.html","id":"sec:confidentielCI","chapter":"6 Continuous integration","heading":"6.2.5 Confidential data in a public repository","text":"project contains confidential data (section 3.6), GitHub Actions must use project’s private key extract vault.private key must stored project secret, named “RSA”.\nnext step, inserted knitting step, writes key file project code access.","code":"      - name: Private key\n        run: |\n          cat(\"${{ secrets.rsa }}\", file=\"<RepoID>.rsa\"\n        shell: Rscript {0}"},{"path":"chap-ci.html","id":"script-templates","chapter":"6 Continuous integration","heading":"6.3 Script templates","text":"Script templates types projects presented .gh-pages branch created automatically scripts.\nCheck first execution GitHub pages enabled branch (section 3.7).\ndelete docs folder existed, push modification GitHub finally add following line .gitignore file able knit projects locally without disturbing GitHub:","code":"docs/"},{"path":"chap-ci.html","id":"sec:memoiR-ci","chapter":"6 Continuous integration","heading":"6.3.1 memoiR","text":"build_ghworkflow() function memoiR package automatically creates scripts needed produce package’s templates.\nscript always named memoir.yml.scripts need DESCRIPTION file installation dependencies document must contain parameter code (Options) list packages needed knitting (stored Packages variable).require preparation: GH_PAT EMAIL secrets must registered GitHub project (section 6.2.2).","code":""},{"path":"chap-ci.html","id":"sec:bookdown-ci","chapter":"6 Continuous integration","heading":"6.3.1.1 Book or thesis","text":"workflow called rmarkdown; production job render.","code":"on:\n  push:\n   branches:\n     - master\n\nname: rmarkdown\n\njobs:\n  render:\n    runs-on: macOS-latest\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v4\n      - name: Setup R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install dependencies\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"distill\", \"downlit\", \"memoiR\", \"rmdformats\", \"tinytex\"))\n          tinytex::install_tinytex(bundle = \"TinyTeX\")\n        shell: Rscript {0}\n      - name: Render pdf book\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::pdf_book\")\n        shell: Rscript {0}\n      - name: Render gitbook\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::gitbook\")\n        shell: Rscript {0}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v4\n        with:\n          name: ghpages\n          path: docs\n  deploy:\n    runs-on: ubuntu-latest\n    needs: render\n    permissions:\n      contents: write\n    steps:\n      - name: Download artifact\n        uses: actions/download-artifact@v4\n        with:\n          name: ghpages\n          path: docs\n      - name: Deploy to GitHub Pages\n        uses: Cecilapp/GitHub-Pages-deploy@v3\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          email: ${{ secrets.EMAIL }}\n          build_dir: docs\n          jekyll: no"},{"path":"chap-ci.html","id":"articles-or-slideshows","chapter":"6 Continuous integration","heading":"6.3.1.2 Articles or slideshows","text":"workflow called rmarkdown; production job render.knitting stage uses script list .Rmd files, process (output formats listed yaml header produced).\nbuild_githubpages() function (see section 4.3.2) places results docs.deployment job tells GitHub pages use Jekyll, .e. use README.md file home page.","code":"on:\n  push:\n   branches:\n     - master\n\nname: rmarkdown\n\njobs:\n  render:\n    runs-on: macOS-latest\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v4\n      - name: Setup R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install dependencies\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"memoiR\", \"rmdformats\", \"tinytex\"))\n          tinytex::install_tinytex()\n        shell: Rscript {0}\n      - name: Render Rmarkdown files\n        run: |\n          RMD_PATH=($(ls | grep \"[.]Rmd$\"))\n          Rscript -e 'for (file in commandArgs(TRUE)) |>\n              rmarkdown::render(file, \"all\")' ${RMD_PATH[*]}\n          Rscript -e 'memoiR::build_githubpages(bundle = \"TinyTeX\")'\n      - name: Upload artifact\n        uses: actions/upload-artifact@v4\n        with:\n          name: ghpages\n          path: docs\n  deploy:\n    runs-on: ubuntu-latest\n    needs: render\n    permissions:\n      contents: write\n    steps:\n      - name: Download artifact\n        uses: actions/download-artifact@v4\n        with:\n          name: ghpages\n          path: docs\n      - name: Deploy to GitHub Pages\n        uses: Cecilapp/GitHub-Pages-deploy@v3\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          email: ${{ secrets.EMAIL }}\n          build_dir: docs\n          jekyll: yes"},{"path":"chap-ci.html","id":"localization","chapter":"6 Continuous integration","heading":"6.3.1.3 Localization","text":"knitting step needs change language used R, example correctly display production date documents, can changed like :selection files done R script, includes localization command, French.step can completed selecting GitHub Pages theme home page contains link code:theme “Slate”, one choices offered GitHub pages.","code":"      - name: Render Rmarkdown files\n        run: |\n          Sys.setlocale(\"LC_TIME\", \"fr_FR\")\n          lapply(list.files(pattern=\"*.Rmd\"), \n                            function(file) rmarkdown::render(file, \"all\"))\n          memoiR::build_githubpages()\n        shell: Rscript {0}        run: |\n          echo 'theme: jekyll-theme-slate' > docs/_config.yml"},{"path":"chap-ci.html","id":"debugging","chapter":"6 Continuous integration","heading":"6.3.1.4 Debugging","text":"can happen compilation .tex file produce PDF file fails, although knitting HTML generate error.\nLaTeX compiler indeed demanding pandoc (produces HTML file).first check consists knitting problematic document PDF locally, workstation, tinytex.\nLaTeX packages must updated used GitHub actions: , run:compilation works locally Github, inspect .log file records events generated compiler, file kept failure GitHub Actions.\nmodify script copy file docs save result despite error.“Upload artifact” step modified run despite failure previous step adding line ::step added “Upload artifact” copy result knitting .log file:action fails, saved artifact can downloaded GitHub: action summary page.\ncompressed file contains whole docs folder.","code":"\ntinytex::tlmgr_update()      - name: Upload artifact\n        if: always()\n        uses: actions/upload-artifact@v4\n        with:\n          name: _book\n          path: docs/      - name: Move files to docs\n        if: always()\n        run: |\n          Rscript -e 'memoiR::build_githubpages()'\n          cp *.log docs"},{"path":"chap-ci.html","id":"sec:blogdown-ci","chapter":"6 Continuous integration","heading":"6.3.2 Blogdown website","text":"file called blogdown.yml similar.\nname workflow blogdown name production job buildsite.Build website step uses blogdown package install Hugo (website generator) build website.website uses online data warrants periodic updating, GitHub Actions can run daily, weekly monthly addition rebuilds triggered repository change (see section 6.2.4.1).\n, site rebuilt every Sunday 10pm.Example: page displays bibliometrics author’s website117 queries Google Scholar display citations publications.\nsite updated weekly keep statistics current.","code":"on:\n  push:\n     branches:\n       - master\n  schedule:\n    - cron: '0 22 * * 0'\n\nname: blogdown\n\njobs:\n  buildsite:\n    runs-on: macOS-latest\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v4\n      - name: Setup R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install packages\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"remotes\", \"blogdown\", \"formatR\"))\n          remotes::install_deps(dependencies = TRUE)\n        shell: Rscript {0}\n      - name: Build website\n        run: |\n          blogdown::install_hugo(force = TRUE)\n          blogdown::build_site(local = TRUE, build_rmd = TRUE)\n        shell: Rscript {0}\n      - name: Upload artifact\n        uses: actions/upload-artifact@v4\n        with:\n          name: _website\n          path: public/\n  deploy:\n    runs-on: ubuntu-latest\n    needs: buildsite\n    permissions:\n      contents: write\n    steps:\n      - name: Download artifact\n        uses: actions/download-artifact@v4\n        with:\n          # Artifact name\n          name: _website\n          # Destination path\n          path: public\n      - name: Deploy to GitHub Pages\n        uses: Cecilapp/GitHub-Pages-deploy@v3\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n        with:\n          build_dir: public\n          email: ${{ secrets.EMAIL }}\n          jekyll: no"},{"path":"chap-ci.html","id":"sec:package-ci6","chapter":"6 Continuous integration","heading":"6.3.3 R Packages","text":"optimal script checking package follows:file named check.yml.\ncontains one job, named R-CMD-check, workflow.script use Renv handle packages package checking must work current versions CRAN.\nRemotes installs necessary packages DESCRIPTION file.Roxygenize step updates package documentation.\nupdated files pushed main project branch add--commit action.\ntwo steps ensure package consistent state, even author failed execute roxygenize() function pushing code GitHub.\navoid triggering loop check code pushed way, access token used must current script, created GitHub time run.\ndefault, token right modify repository.\ntherefore need give right: GitHub, display project parameters select ‘Actions’, ‘General’.\n“Workflow permissions” section, select “Read write permissions”.Check step checks package.\nWarnings treated errors.Test coverage step uses covr package measure coverage rate uploads results Codecov site.Finally, last two steps install package use pkgdown create documentation site package push gh-pages branch project.script contains one job: deployment documentation site directly executed pkgdown.\nsuccess displayed badge README.md file (see section 6.4)complex scripts proposed R-lib118, particular run tests several operating systems several versions R.\nadvanced tests performed submitting CRAN (section 5.11) consume much resource systematic use.","code":"on:\n  push:\n    branches:\n      - master\n\nname: R-CMD-check\n\njobs:\n  R-CMD-check:\n    runs-on: macOS-latest\n    steps:\n      - name: Pull the repository\n        uses: actions/checkout@v4\n      - name: Install R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install R packages\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"remotes\", \"roxygen2\", \"rcmdcheck\", \"covr\", \"pkgdown\"))\n          remotes::install_deps(dependencies = TRUE)\n        shell: Rscript {0}\n      - name: Update the documentation\n        run: roxygen2::roxygenize()\n        shell: Rscript {0}\n      - name: Commit and push the repository\n        uses: EndBug/add-and-commit@v9\n      - name: Check the package\n        run: rcmdcheck::rcmdcheck(args = \"--no-manual\", error_on = \"warning\")\n        shell: Rscript {0}\n      - name: Test coverage\n        run: covr::codecov(type=\"all\")\n        shell: Rscript {0}\n      - name: Install the package\n        run: R CMD INSTALL .\n      - name: Pkgdown\n        run: |\n          git config --local user.email \"actions@github.com\"\n          git config --local user.name \"GitHub Actions\"\n          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'"},{"path":"chap-ci.html","id":"sec:ci-pr","chapter":"6 Continuous integration","heading":"6.3.4 Pull requests","text":"Pull requests can tested similar scripts check generate errors merging .One effective method create new script .github/workflows/ folder, starting copy existing script.\nnew script named pr.yml.\ntrigger must changed: pull_request replaces push:","code":"on:\n  pull_request:\n     branches:\n       - master"},{"path":"chap-ci.html","id":"sec:memoiR-pr-ci","chapter":"6 Continuous integration","heading":"6.3.4.1 memoiR","text":"scripts checking documents created memoiR must cut Render gitbook step: artefact must saved deployment task must deleted.\nscript follows:","code":"on:\n  pull_request:\n    branches:\n      - master\n\nname: rmarkdown\n\njobs:\n  render:\n    runs-on: macOS-latest\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@v4\n      - name: Setup R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install dependencies\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"distill\", \"downlit\", \"memoiR\", \"rmdformats\", \"tinytex\"))\n          tinytex::install_tinytex(bundle = \"TinyTeX\")\n        shell: Rscript {0}\n      - name: Render pdf book\n        env:\n          GITHUB_PAT: ${{ secrets.GH_PAT }}\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::pdf_book\")\n        shell: Rscript {0}\n      - name: Render gitbook\n        env:\n          GITHUB_PAT: ${{ secrets.GH_PAT }}\n        run: |\n          bookdown::render_book(\"index.Rmd\", \"bookdown::bs4_book\")\n        shell: Rscript {0}\n      # Don't upload the artifact and don't deploy\n"},{"path":"chap-ci.html","id":"sec:package-pr-ci6","chapter":"6 Continuous integration","heading":"6.3.4.2 R Packages","text":"Scripts dedicated checking packages push updates documentation Roxygenize2, deploy pkgdown updates GitHub pages.\ncoverage rate need measured.\nscript follows:pull requests submitted, corresponding test run results included discussion.","code":"on:\n  pull_request:\n    branches:\n      - master\n\nname: R-CMD-check\n\njobs:\n  R-CMD-check:\n    runs-on: macOS-latest\n    steps:\n      - name: Pull the repository\n        uses: actions/checkout@v4\n      - name: Install R\n        uses: r-lib/actions/setup-r@v2\n      - name: Install pandoc\n        uses: r-lib/actions/setup-pandoc@v2\n      - name: Install R packages\n        run: |\n          options(pkgType = \"binary\")\n          options(install.packages.check.source = \"no\")\n          install.packages(c(\"remotes\", \"roxygen2\", \"rcmdcheck\", \"covr\", \"pkgdown\"))\n          remotes::install_deps(dependencies = TRUE)\n        shell: Rscript {0}\n      - name: Update the documentation\n        run: roxygen2::roxygenize()\n        shell: Rscript {0}\n        # Don't push\n      - name: Check the package\n        run: rcmdcheck::rcmdcheck(args = \"--no-manual\", error_on = \"warning\")\n        shell: Rscript {0}\n      # Don't test coverage\n      - name: Install the package\n        run: R CMD INSTALL .\n      - name: Pkgdown\n        # Build the package site locally\n        run: Rscript -e 'pkgdown::build_site()'"},{"path":"chap-ci.html","id":"sec:ci-badges","chapter":"6 Continuous integration","heading":"6.4 Add badges","text":"success GitHub Actions can seen adding badge README.md file, right file title.\nproject page, choose “Actions” select action (“Workflows”).\nClick “…” button “Create Status Badge”.\nPaste Markdown code:name workflow declared name: entry GitHub actions configuration file.coverage rate measured Codecov can also displayed badge:","code":"# Project name\n![bookdown](https://github.com/<GitHubID>/<RepoID>/workflows/<Workflow>/badge.svg)[![codecov](https://codecov.io/github/<GitHubID>/\n  <RepoID>/branch/master/graphs/badge.svg)]\n  (https://codecov.io/github/<GitHubID>/<RepoID>)"},{"path":"chap-shiny.html","id":"chap-shiny","chapter":"7 Shiny","heading":"7 Shiny","text":"Shiny allows publish interactive application using R code web site.\nsite can run locally, user’s workstation launches RStudio, online, dedicated server running Shiny Server119.Basically, form allows enter arguments function visualization window display results calculation.Shiny application makes execution code simple, even users familiar R, obviously limits possibilities.","code":""},{"path":"chap-shiny.html","id":"first-application","chapter":"7 Shiny","heading":"7.1 First application","text":"RStudio, create application menu “File > New File > Shiny Web App…”, enter name application “MyShinyApp” select folder put .name application used create folder now need transform project (project menu top right RStudio, “New Project > Existing Directory”, select application folder).application file named app.R contains two functions: ui() defines GUI server() contains R code executed.\napplication can launched clicking Run App code window.\nFigure 7.1: Shiny Application Old Faithful Geyser Data.\ncorrespondence displayed window (figure 7.1) ui() function code easy see:title application displayed titlePanel() function.slider sets number bars histogram created sliderInput().sidebarLayout() function sets layout page elements, sidebarPanel input controls mainPanel() result display.result displayed plotOutput() function whose argument name element output, variable filled server() function.modification element interface, precisely element displayed function whose name ends Input() (types inputs, example textInput()) Shiny causes server() executed elements output updated.","code":""},{"path":"chap-shiny.html","id":"more-elaborate-application","chapter":"7 Shiny","heading":"7.2 More elaborate application","text":"","code":""},{"path":"chap-shiny.html","id":"working-method","chapter":"7 Shiny","heading":"7.2.1 Working method","text":"application created choosing:window layout.controls entering parameters (intput).controls displaying results (output).code process inputs produce outputs written server().RStudio tutorial120 detailed used go .","code":""},{"path":"chap-shiny.html","id":"example","chapter":"7 Shiny","heading":"7.2.2 Example","text":"simple application uses scholar package query Google Scholar get bibliometric data author identifier.app.R file contains code built incrementally .\nfull application, graphical output addition simplified version presented available GitHub121.beginning code consists preparing application run loading necessary packages:code complete application includes function install missing packages, executed application executed workstation (server, management packages responsibility application).user interface follows:application window fluid, .e. reorganizes size changes, composed side panel (text input display) main panel, displaying graphics.elements side panel :help text: helpText().text input field, textInput(), whose arguments name, displayed text, default value (author ID).line break: br().HTML output controls: uiOutput(), whose single argument name.main panel contains two graphical output controls, plotOutput() whose argument also name.code execute process inputs produce outputs server() function.information needed output fields $name $h (author’s name h-index) obtained get_profile() function scholar package.\nfunction queries author’s Google Scholar web page extracts values result: heavy processing, better executed rather twice, renderUI() functions charge computing values output$h output$name.simplest code follows:difficulty programming Shiny application computation referring input interface element must reactive.\nlatter code executed, following error message appear:\n“Operation allowed without active reactive context. (tried something can done inside reactive expression observer.)”practice, execution code started modifying input control (: intput$AuthorID).\ncode referring one controls must permanently waiting modification: must therefore placed particular functions like renderPlot() Old Faithful Geyser Data application renderUI() .\nfollowing code run without error:call value input$AuthorID control occur reactive function (get_profile() used second time calculation output$h, want avoid).\nfunction h2(AuthorProfile$name) produces HTML code, level 2 title paragraph whose value passed argument.functions whose names begin render shiny package reactive, intended produce different type output, example text (renderText()) HTML code (renderUI()).code needed compute variables common several output controls (output$name output$h), must responsive.\nTwo functions useful:observeEvent() watches changes input control executes code occur.reactiveVal() allows define reactive variable, modified observeEvent() code turn cause reactive functions use value execute.optimal code creates reactive variable store result Google Scholar query :reactive variable empty point.\nuse function: AuthorProfile(x) assigns value x AuthorProfile(), without arguments, returns value.\nobserveEvent() function triggered input$AuthorID modified executes code passed second argument, case update AuthorProfile.Finally, renderUI() functions provide output control values use value AuthorProfile:Note parentheses AuthorProfile(), reactive variable, opposed AuthorProfile$name syntax classic variable.value output$h internet link, <href=... HTML, written () function htmltools package used renderUI().link author’s Google Scholar page.\nvalue displayed h index.\nargument target = \"_blank\" indicates link opened new browser window.output$citations graph created renderPlot() reactive function.\ndata provided get_citation_history() function scholar (queries Google Scholar API) processed ggplot().Finally, output$network graph empty graph simplified version application.full application takes code adds error handling case author code exist Google Scholar co-author network graph.","code":"\n# Prepare the application ####\n# Load packages\nlibrary(\"shiny\")\nlibrary(\"tidyverse\")\n# UI ####\nui <- fluidPage(\n  # Application title\n  titlePanel(\"Bibliometrics\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      helpText(\"Enter the Google Scholar ID of an author.\"),\n      textInput(\"AuthorID\", \"Google Scholar ID\", \"4iLBmbUAAAAJ\"),\n      # End of input\n      br(),\n      # Display author's name and h\n      uiOutput(\"name\"),\n      uiOutput(\"h\")\n    ),\n    # Show plots in the main panel\n    mainPanel(\n      plotOutput(\"network\"),\n      plotOutput(\"citations\")\n    )\n  )\n)\n# Server logic ####\nserver <- function(input, output) {\n  # Run the get_profile function only once ####\n  # Store the author profile\n  AuthorProfile <- reactiveVal()\n  # Update it when input$AuthorID is changed\n  observeEvent(input$AuthorID, \n               AuthorProfile(get_profile(input$AuthorID)))\n  \n  # Output ####\n  output$name <- renderUI({\n    h2(AuthorProfile()$name)\n  })\n  \n  output$h <-\n    renderUI({\n      a(href = paste0(\n        \"https://scholar.google.com/citations?user=\", \n        input$AuthorID),\n        paste(\"h index:\", AuthorProfile()$h_index),\n        target = \"_blank\"\n      )\n    })\n  \n  output$citations <- renderPlot({\n    get_citation_history(input$AuthorID)  %>%\n      ggplot(aes(year, cites)) +\n      geom_segment(aes(xend = year, yend = 0),\n                   size = 1,\n                   color =\n                     'darkgrey') +\n      geom_point(size = 3, color = 'firebrick') +\n      labs(title = \"Citations per year\",\n           caption = \"Source: Google Scholar\")\n  })\n  \n  output$network <- renderPlot({\n    ggplot() + geom_blank()\n  })\n}\n  # Run the get_profile function only once ####\n  # Store the author profile\n  AuthorProfile <- get_profile(input$AuthorID)\n# Output ####\noutput$name <- renderUI({\n    AuthorProfile <- get_profile(input$AuthorID)\n    h2(AuthorProfile$name)\n})\n# Store the author profile\nAuthorProfile <- reactiveVal()\n# Update it when input$AuthorID is changed\nobserveEvent(input$AuthorID, AuthorProfile(get_profile(input$AuthorID)))\n# Output ####\noutput$name <- renderUI({\n    h2(AuthorProfile()$name)\n})\noutput$h <- renderUI({\n    a(href = paste0(\"https://scholar.google.com/citations?user=\",\n        input$AuthorID), paste(\"h index:\", AuthorProfile()$h_index),\n        target = \"_blank\")\n})"},{"path":"chap-shiny.html","id":"sec:hebergement-shiny","chapter":"7 Shiny","heading":"7.3 Hosting","text":"Shiny application necessarily hosted web server: can run users’ workstations R.wider use, dedicated server necessary.\nShinyapps.io122 service RStudio allows host 5 Shiny applications free maximum uptime 5 hours per month.First , open account site, preferably GitHub identifiers.\nallow management online applications directly RStudio, must install rsconnect package set :exact code, along username token use, displayed Shinyapps.io homepage: click “Show Secret”, copy code paste RStudio console run .\n“Publish” button available just right “Run App” button.\nClick validate publication (figure 7.2).\nFigure 7.2: Publication Shiny application Shinyapps.io.\napplication now available https://firstname-lastname.shinyapps.io/MyShinyApp/“Bibliometrics” application work Shinyapps.io way Scholar package queries Google Scholar supported.\nShiny applications work without difficulty, long don’t require complex networking features.","code":"\nrsconnect::setAccountInfo(name = \"prenom.nom\", token = \"xxx\",\n    secret = \"<SECRET>\")"},{"path":"chap-enseigner.html","id":"chap-enseigner","chapter":"8 Teaching with R","heading":"8 Teaching with R","text":"R, RStudio GitHub provide tools teaching.learnr package allows make interactive tutorials.also see use GitHub Classrooms allow distribute class (list students GitHub account) repository model (draft R project) student develop publish.\nclassroom tools allow evaluate work done quite easily.","code":""},{"path":"chap-enseigner.html","id":"learnr","chapter":"8 Teaching with R","heading":"8.1 learnr","text":"learnr allows make code snippets document produced R Markdown HTML interactive, transforming Shiny applications.\ndocumentation RStudio website123 clear repeated : see start distribute tutorials.","code":""},{"path":"chap-enseigner.html","id":"first-tutorial","chapter":"8 Teaching with R","heading":"8.1.1 First tutorial","text":"menu “File > New File > RMarkdown…” create new document “Interactive Tutorial” template.\nwizard creates folder chosen name, transformed R project put source control, documents seen previously (see section 4.3.2).run tutorial, click “Run Document” button, usual place “Knit” button.Tutorials can include exercises, code snippets exercise=TRUE option.\nexercises displayed window code can edited executed user.\nHints can given124, button added display solution, time limit can set125, code result can compared expected value126.Quizzes127 can added, form multiple single choice quizzes.user’s progress tutorial (code entered, answers questions…) saved learnr workstation.\ntutorial can stopped resumed without loss data.\nhand, easy way recover data evaluation trainer example.","code":""},{"path":"chap-enseigner.html","id":"sharing","chapter":"8 Teaching with R","heading":"8.1.2 Sharing","text":"Tutorials can distributed copying files telling users clone GitHub projects contain .can also hosted Shinyapps.io (see section 7.3).Last, can included package128.","code":""},{"path":"chap-enseigner.html","id":"github-classrooms","chapter":"8 Teaching with R","heading":"8.2 GitHub Classrooms","text":"GitHub Classrooms allows distribute student audience GitHub repositories modify control result.\napplications well learning R production documents, personal work exam example.","code":""},{"path":"chap-enseigner.html","id":"registration","chapter":"8 Teaching with R","heading":"8.2.1 Registration","text":"start using tool, need open account.\nGitHub Classrooms website129, click “Sign ” use GitHub account authenticate.","code":""},{"path":"chap-enseigner.html","id":"organizations","chapter":"8 Teaching with R","heading":"8.2.2 Organizations","text":"next step create GitHub organization.\nGitHub organization basically contains members (GitHub account holders) repositories can accessed https://github.com//.simplest way work create organization per course, approaches possible structures use tool extensively.\norganization created example “Cours-R”130.email address required (use GitHub account) organization must declared belonging personal account.organization visible GitHub Classrooms page, click “Grant us access”.","code":""},{"path":"chap-enseigner.html","id":"new-classroom","chapter":"8 Teaching with R","heading":"8.2.3 New Classroom","text":"classroom populated students receive tasks perform.Click New Classroom.\nSelect organization charge administering classroom.Enter name classroom: good practice prefix name course add name session, example “Cours-R-2020”.add collaborators (possible later), eventually enter list students (one name per line, also possible later).\nclass created.classrooms visible GitHub Classrooms homepage131.\nClick name open one.\n“Settings” button allows change name delete .\n“TAs Admins” button allows add collaborators, .e. GitHub users able administer classroom.“Students” button allows add students.\nlist names free, mandatory format.\nClick “Create Roster” activate .\nnames must linked GitHub accounts: work can done administrator students receive first task done.\nstudent must account GitHub.","code":""},{"path":"chap-enseigner.html","id":"prepare-a-repository-template","chapter":"8 Teaching with R","heading":"8.2.4 Prepare a repository template","text":"task GitHub repository modify.\nexample132, create repository containing R project Markdown file describing work done possibly code needed , files R Markdown template used data file.Open repository properties GitHub check Template Repository box make template.","code":""},{"path":"chap-enseigner.html","id":"assign-a-task","chapter":"8 Teaching with R","heading":"8.2.4.1 Assign a task","text":"Open classroom click “New Assignment”.Enter explicit title students, optional deadline choose “Individual Assignment”.default, assignment name used prefix students’ submission names, can replaced prefix choice.\nstudents turn work, repositories tasks stored organization.repository created student’s account can private public, depending whether want students able see ’s work .\nGive administration right make site public students able activate GitHub pages present results work.\nClick “Continue”.Select model repository (starter code) click “Continue” “Create Assignment”.new task created.\nassociated invitation link must copied sent students.\nclick link, reach GitHub page allow associate account name list (control possible: first one connected can associate name).\nable create new RStudio project GitHub repository automatically created GitHub Classrooms, modify project according work instructions push GitHub.\nrepository account organization class connected , suffixed student’s GitHub ID.","code":""},{"path":"chap-enseigner.html","id":"controlling-student-work","chapter":"8 Teaching with R","heading":"8.2.4.2 Controlling student work","text":"possible view repository created students assignment page GitHub Classrooms.\nassignment produced written document, students place repository’s GitHub pages read directly online.GitHub Classrooms wizard133 allows download student repositories correct workstation.","code":""},{"path":"chap-conclusion.html","id":"chap-conclusion","chapter":"9 Conclusion","heading":"9 Conclusion","text":"R RStudio work environment allows production types documents single language.objective reproducibility results achieved integrating statistical processing writing.\nCollaborative work allowed systematic use source control GitHub.\npresentation results ensured GitHub pages document templates covering needs.breaks, R even provides games fun package, including famous Minesweeper:document aim exhaustive possibilities R rather present working method simple ways apply quickly.\ncan refer detailed books documentations cited text go deeper particular point.updated regularly available tools evolve.","code":"\n# Install the package\ninstall.packages(\"fun\")\n# Open an X window and run\nif (interactive()) {\n    if (.Platform$OS.type == \"windows\")\n        x11() else x11(type = \"Xlib\")\n    fun::mine_sweeper()\n}"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
